;;; Copyright (c) 2022 Max-Gerd Retzlaff <mgr@matroid.org>, Datagraph GmbH.
;;; Distributed under the terms of the GNU General Public License, Version 2.0,
;;; see file LICENSE in the top level directory of this repository.

;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.12
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(cl:in-package :ndbapi.ffi)

;; ndb_init is not really part of the other ndb_init methods but fits
(cffi:defcfun ("_wrap_ndb_init" #.(swig-lispify "ndb_init" 'function)) (ndb-init-type :garbage-collect t))

(cffi:defcfun ("_wrap_ndb_end" #.(swig-lispify "ndb_end" 'function)) :void
  (arg0 :int))

(cl:defconstant #.(swig-lispify "NDB_SIZEOF_CHARP" 'constant) 8)

(cl:defconstant #.(swig-lispify "NDB_SIZEOF_CHAR" 'constant) 1)

(cl:defconstant #.(swig-lispify "NDB_SIZEOF_INT" 'constant) 4)

(cl:defconstant #.(swig-lispify "NDB_SIZEOF_SHORT" 'constant) 2)

(cl:defconstant #.(swig-lispify "NDB_SIZEOF_LONG" 'constant) 8)

(cl:defconstant #.(swig-lispify "NDB_SIZEOF_LONG_LONG" 'constant) 8)

(cl:defconstant #.(swig-lispify "INT_MIN64" 'constant) (cl:lognot #x7FFFFFFFFFFFFFFF))

(cl:defconstant #.(swig-lispify "INT_MAX64" 'constant) #x7FFFFFFFFFFFFFFF)

(cl:defconstant #.(swig-lispify "NDB_TYPE_UNDEFINED" 'constant) 0)

(cl:defconstant #.(swig-lispify "NDB_TYPE_TINYINT" 'constant) 1)

(cl:defconstant #.(swig-lispify "NDB_TYPE_TINYUNSIGNED" 'constant) 2)

(cl:defconstant #.(swig-lispify "NDB_TYPE_SMALLINT" 'constant) 3)

(cl:defconstant #.(swig-lispify "NDB_TYPE_SMALLUNSIGNED" 'constant) 4)

(cl:defconstant #.(swig-lispify "NDB_TYPE_MEDIUMINT" 'constant) 5)

(cl:defconstant #.(swig-lispify "NDB_TYPE_MEDIUMUNSIGNED" 'constant) 6)

(cl:defconstant #.(swig-lispify "NDB_TYPE_INT" 'constant) 7)

(cl:defconstant #.(swig-lispify "NDB_TYPE_UNSIGNED" 'constant) 8)

(cl:defconstant #.(swig-lispify "NDB_TYPE_BIGINT" 'constant) 9)

(cl:defconstant #.(swig-lispify "NDB_TYPE_BIGUNSIGNED" 'constant) 10)

(cl:defconstant #.(swig-lispify "NDB_TYPE_FLOAT" 'constant) 11)

(cl:defconstant #.(swig-lispify "NDB_TYPE_DOUBLE" 'constant) 12)

(cl:defconstant #.(swig-lispify "NDB_TYPE_OLDDECIMAL" 'constant) 13)

(cl:defconstant #.(swig-lispify "NDB_TYPE_CHAR" 'constant) 14)

(cl:defconstant #.(swig-lispify "NDB_TYPE_VARCHAR" 'constant) 15)

(cl:defconstant #.(swig-lispify "NDB_TYPE_BINARY" 'constant) 16)

(cl:defconstant #.(swig-lispify "NDB_TYPE_VARBINARY" 'constant) 17)

(cl:defconstant #.(swig-lispify "NDB_TYPE_DATETIME" 'constant) 18)

(cl:defconstant #.(swig-lispify "NDB_TYPE_DATE" 'constant) 19)

(cl:defconstant #.(swig-lispify "NDB_TYPE_BLOB" 'constant) 20)

(cl:defconstant #.(swig-lispify "NDB_TYPE_TEXT" 'constant) 21)

(cl:defconstant #.(swig-lispify "NDB_TYPE_BIT" 'constant) 22)

(cl:defconstant #.(swig-lispify "NDB_TYPE_LONGVARCHAR" 'constant) 23)

(cl:defconstant #.(swig-lispify "NDB_TYPE_LONGVARBINARY" 'constant) 24)

(cl:defconstant #.(swig-lispify "NDB_TYPE_TIME" 'constant) 25)

(cl:defconstant #.(swig-lispify "NDB_TYPE_YEAR" 'constant) 26)

(cl:defconstant #.(swig-lispify "NDB_TYPE_TIMESTAMP" 'constant) 27)

(cl:defconstant #.(swig-lispify "NDB_TYPE_OLDDECIMALUNSIGNED" 'constant) 28)

(cl:defconstant #.(swig-lispify "NDB_TYPE_DECIMAL" 'constant) 29)

(cl:defconstant #.(swig-lispify "NDB_TYPE_DECIMALUNSIGNED" 'constant) 30)

(cl:defconstant #.(swig-lispify "NDB_TYPE_TIME2" 'constant) 31)

(cl:defconstant #.(swig-lispify "NDB_TYPE_DATETIME2" 'constant) 32)

(cl:defconstant #.(swig-lispify "NDB_TYPE_TIMESTAMP2" 'constant) 33)

(cl:defconstant #.(swig-lispify "NDB_TYPE_MAX" 'constant) 34)

(cl:defconstant #.(swig-lispify "NDB_ARRAYTYPE_FIXED" 'constant) 0)

(cl:defconstant #.(swig-lispify "NDB_ARRAYTYPE_SHORT_VAR" 'constant) 1)

(cl:defconstant #.(swig-lispify "NDB_ARRAYTYPE_MEDIUM_VAR" 'constant) 2)

(cl:defconstant #.(swig-lispify "NDB_ARRAYTYPE_NONE_VAR" 'constant) 3)

(cl:defconstant #.(swig-lispify "NDB_STORAGETYPE_MEMORY" 'constant) 0)

(cl:defconstant #.(swig-lispify "NDB_STORAGETYPE_DISK" 'constant) 1)

(cl:defconstant #.(swig-lispify "NDB_STORAGETYPE_DEFAULT" 'constant) 2)

(cl:defconstant #.(swig-lispify "NDB_TEMP_TAB_PERMANENT" 'constant) 0)

(cl:defconstant #.(swig-lispify "NDB_TEMP_TAB_TEMPORARY" 'constant) 1)

(cl:defconstant #.(swig-lispify "NDB_SUM_LOCKED" 'constant) 0)

(cl:defconstant #.(swig-lispify "NDB_SUM_READONLY" 'constant) 1)

(cl:defconstant #.(swig-lispify "NDB_SUM_READ_WRITE" 'constant) 2)

(cl:defconstant #.(swig-lispify "NDB_NO_NODEGROUP" 'constant) 65536)

(cl:defconstant #.(swig-lispify "NDB_BACKUP_SEQUENCE" 'constant) #x1F000000)

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_INDEX_STAT_DB" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_INDEX_STAT_DB" 'constant) "mysql")))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_INDEX_STAT_SCHEMA" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_INDEX_STAT_SCHEMA" 'constant) "def")))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_INDEX_STAT_HEAD_TABLE" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_INDEX_STAT_HEAD_TABLE" 'constant) "ndb_index_stat_head")))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_INDEX_STAT_SAMPLE_TABLE" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_INDEX_STAT_SAMPLE_TABLE" 'constant) "ndb_index_stat_sample")))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_INDEX_STAT_SAMPLE_INDEX1" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_INDEX_STAT_SAMPLE_INDEX1" 'constant) "ndb_index_stat_sample_x1")))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_INDEX_STAT_HEAD_EVENT" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_INDEX_STAT_HEAD_EVENT" 'constant) "ndb_index_stat_head_event")))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_INDEX_STAT_PREFIX" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_INDEX_STAT_PREFIX" 'constant) "ndb_index_stat")))

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_UNKNOWN" 'constant) 0)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_READ" 'constant) 1)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_READ_SH" 'constant) 2)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_READ_EX" 'constant) 3)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_INSERT" 'constant) 4)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_UPDATE" 'constant) 5)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_DELETE" 'constant) 6)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_WRITE" 'constant) 7)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_UNLOCK" 'constant) 8)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_REFRESH" 'constant) 9)

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_SCAN_UNKNOWN" 'constant) (cl:+ 256 0))

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_SCAN" 'constant) (cl:+ 256 1))

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_SCAN_SH" 'constant) (cl:+ 256 2))

(cl:defconstant #.(swig-lispify "NDB_INFO_OP_SCAN_EX" 'constant) (cl:+ 256 3))

(cl:defconstant #.(swig-lispify "NDB_FK_NO_ACTION" 'constant) 0)

(cl:defconstant #.(swig-lispify "NDB_FK_RESTRICT" 'constant) 1)

(cl:defconstant #.(swig-lispify "NDB_FK_CASCADE" 'constant) 2)

(cl:defconstant #.(swig-lispify "NDB_FK_SET_NULL" 'constant) 3)

(cl:defconstant #.(swig-lispify "NDB_FK_SET_DEFAULT" 'constant) 4)

(cffi:defcfun ("_wrap_new_Ndb_cluster_connection_node_iter" #.(swig-lispify "new_Ndb_cluster_connection_node_iter" 'function)) (ndb-cluster-connection-node-iter-type :garbage-collect t))

(cffi:defcfun ("_wrap_delete_Ndb_cluster_connection_node_iter" #.(swig-lispify "delete_Ndb_cluster_connection_node_iter" 'function)) :void
  (self ndb-cluster-connection-node-iter-type))

(cffi:defcfun ("_wrap_new_Ndb_cluster_connection__SWIG_0" #.(swig-lispify "new_Ndb_cluster_connection/SWIG-0%" 'function)) (ndb-cluster-connection-type :garbage-collect t)
  (connectstring :string))

(cffi:defcfun ("_wrap_new_Ndb_cluster_connection__SWIG_1" #.(swig-lispify "new_Ndb_cluster_connection/SWIG-1%" 'function)) (ndb-cluster-connection-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_Ndb_cluster_connection__SWIG_2" #.(swig-lispify "new_Ndb_cluster_connection/SWIG-2%" 'function)) (ndb-cluster-connection-type :garbage-collect t)
  (connectstring :string)
  (force_api_nodeid :int))

(cffi:defcfun ("_wrap_new_Ndb_cluster_connection__SWIG_3" #.(swig-lispify "new_Ndb_cluster_connection/SWIG-3%" 'function)) (ndb-cluster-connection-type :garbage-collect t)
  (connectstring :string)
  (main_connection :pointer))

(cffi:defcfun ("_wrap_new_Ndb_cluster_connection__SWIG_4" #.(swig-lispify "new_Ndb_cluster_connection/SWIG-4%" 'function)) (ndb-cluster-connection-type :garbage-collect t)
  (connectstring :string)
  (main_connection :pointer)
  (force_api_nodeid :int))

(cffi:defcfun ("_wrap_delete_Ndb_cluster_connection" #.(swig-lispify "delete_Ndb_cluster_connection" 'function)) :void
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_data_node_neighbour" #.(swig-lispify "Ndb_cluster_connection_set_data_node_neighbour" 'function)) :void
  (self ndb-cluster-connection-type)
  (neighbour_node :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_name" #.(swig-lispify "Ndb_cluster_connection_set_name" 'function)) :void
  (self ndb-cluster-connection-type)
  (name :string))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_service_uri" #.(swig-lispify "Ndb_cluster_connection_set_service_uri" 'function)) :int
  (self ndb-cluster-connection-type)
  (scheme :string)
  (host :string)
  (port :int)
  (path :string))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_timeout" #.(swig-lispify "Ndb_cluster_connection_set_timeout" 'function)) :int
  (self ndb-cluster-connection-type)
  (timeout_ms :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_connect__SWIG_0" #.(swig-lispify "Ndb_cluster_connection_connect/SWIG-0" 'function)) :int
  (self ndb-cluster-connection-type)
  (no_retries :int)
  (retry_delay_in_seconds :int)
  (verbose :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_connect__SWIG_1" #.(swig-lispify "Ndb_cluster_connection_connect/SWIG-1" 'function)) :int
  (self ndb-cluster-connection-type)
  (no_retries :int)
  (retry_delay_in_seconds :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_connect__SWIG_2" #.(swig-lispify "Ndb_cluster_connection_connect/SWIG-2" 'function)) :int
  (self ndb-cluster-connection-type)
  (no_retries :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_connect__SWIG_3" #.(swig-lispify "Ndb_cluster_connection_connect/SWIG-3" 'function)) :int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_start_connect_thread__SWIG_0" #.(swig-lispify "Ndb_cluster_connection_start_connect_thread/SWIG-0" 'function)) :int
  (self ndb-cluster-connection-type)
  (connect_callback :pointer))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_start_connect_thread__SWIG_1" #.(swig-lispify "Ndb_cluster_connection_start_connect_thread/SWIG-1" 'function)) :int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_wait_until_ready__SWIG_0" #.(swig-lispify "Ndb_cluster_connection_wait_until_ready/SWIG-0" 'function)) :int
  (self ndb-cluster-connection-type)
  (timeout_for_first_alive :int)
  (timeout_after_first_alive :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_lock_ndb_objects" #.(swig-lispify "Ndb_cluster_connection_lock_ndb_objects" 'function)) :void
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_unlock_ndb_objects" #.(swig-lispify "Ndb_cluster_connection_unlock_ndb_objects" 'function)) :void
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_next_ndb_object" #.(swig-lispify "Ndb_cluster_connection_get_next_ndb_object" 'function)) :pointer
  (self ndb-cluster-connection-type)
  (p :pointer))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_latest_error" #.(swig-lispify "Ndb_cluster_connection_get_latest_error" 'function)) :int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_latest_error_msg" #.(swig-lispify "Ndb_cluster_connection_get_latest_error_msg" 'function)) :string
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_auto_reconnect" #.(swig-lispify "Ndb_cluster_connection_set_auto_reconnect" 'function)) :void
  (self ndb-cluster-connection-type)
  (value :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_auto_reconnect" #.(swig-lispify "Ndb_cluster_connection_get_auto_reconnect" 'function)) :int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_system_name" #.(swig-lispify "Ndb_cluster_connection_get_system_name" 'function)) :string
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_collect_client_stats" #.(swig-lispify "Ndb_cluster_connection_collect_client_stats" 'function)) :unsigned-int
  (self ndb-cluster-connection-type)
  (statsArr :pointer)
  (sz :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_error_print" #.(swig-lispify "Ndb_cluster_connection_set_error_print" 'function)) :void
  (self ndb-cluster-connection-type)
  (val :pointer))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_max_adaptive_send_time" #.(swig-lispify "Ndb_cluster_connection_set_max_adaptive_send_time" 'function)) :void
  (self ndb-cluster-connection-type)
  (milliseconds :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_max_adaptive_send_time" #.(swig-lispify "Ndb_cluster_connection_get_max_adaptive_send_time" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_num_recv_threads" #.(swig-lispify "Ndb_cluster_connection_set_num_recv_threads" 'function)) :int
  (self ndb-cluster-connection-type)
  (num_recv_threads :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_num_recv_threads" #.(swig-lispify "Ndb_cluster_connection_get_num_recv_threads" 'function)) :int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_unset_recv_thread_cpu" #.(swig-lispify "Ndb_cluster_connection_unset_recv_thread_cpu" 'function)) :int
  (self ndb-cluster-connection-type)
  (recv_thread_id :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_recv_thread_cpu__SWIG_0" #.(swig-lispify "Ndb_cluster_connection_set_recv_thread_cpu/SWIG-0" 'function)) :int
  (self ndb-cluster-connection-type)
  (cpuid :unsigned-short))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_recv_thread_cpu__SWIG_1" #.(swig-lispify "Ndb_cluster_connection_set_recv_thread_cpu/SWIG-1" 'function)) :int
  (self ndb-cluster-connection-type)
  (cpuid_array :pointer)
  (array_len :unsigned-int)
  (recv_thread_id :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_recv_thread_cpu__SWIG_2" #.(swig-lispify "Ndb_cluster_connection_set_recv_thread_cpu/SWIG-2" 'function)) :int
  (self ndb-cluster-connection-type)
  (cpuid_array :pointer)
  (array_len :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_recv_thread_activation_threshold" #.(swig-lispify "Ndb_cluster_connection_set_recv_thread_activation_threshold" 'function)) :int
  (self ndb-cluster-connection-type)
  (threshold :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_recv_thread_activation_threshold" #.(swig-lispify "Ndb_cluster_connection_get_recv_thread_activation_threshold" 'function)) :int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_no_ready" #.(swig-lispify "Ndb_cluster_connection_get_no_ready" 'function)) :int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_connectstring" #.(swig-lispify "Ndb_cluster_connection_get_connectstring" 'function)) :string
  (self ndb-cluster-connection-type)
  (buf :string)
  (buf_sz :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_connected_port" #.(swig-lispify "Ndb_cluster_connection_get_connected_port" 'function)) :int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_connected_host" #.(swig-lispify "Ndb_cluster_connection_get_connected_host" 'function)) :string
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_set_optimized_node_selection" #.(swig-lispify "Ndb_cluster_connection_set_optimized_node_selection" 'function)) :void
  (self ndb-cluster-connection-type)
  (val :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_no_db_nodes" #.(swig-lispify "Ndb_cluster_connection_no_db_nodes" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_max_api_nodeid" #.(swig-lispify "Ndb_cluster_connection_max_api_nodeid" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_max_nodegroup" #.(swig-lispify "Ndb_cluster_connection_max_nodegroup" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_node_id" #.(swig-lispify "Ndb_cluster_connection_node_id" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_connect_count" #.(swig-lispify "Ndb_cluster_connection_get_connect_count" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_min_db_version" #.(swig-lispify "Ndb_cluster_connection_get_min_db_version" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_min_api_version" #.(swig-lispify "Ndb_cluster_connection_get_min_api_version" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_init_get_next_node" #.(swig-lispify "Ndb_cluster_connection_init_get_next_node" 'function)) :void
  (self ndb-cluster-connection-type)
  (iter :pointer))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_next_node" #.(swig-lispify "Ndb_cluster_connection_get_next_node" 'function)) :unsigned-int
  (self ndb-cluster-connection-type)
  (iter :pointer))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_next_alive_node" #.(swig-lispify "Ndb_cluster_connection_get_next_alive_node" 'function)) :unsigned-int
  (self ndb-cluster-connection-type)
  (iter :pointer))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_active_ndb_objects" #.(swig-lispify "Ndb_cluster_connection_get_active_ndb_objects" 'function)) :unsigned-int
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_get_latest_trans_gci" #.(swig-lispify "Ndb_cluster_connection_get_latest_trans_gci" 'function)) :pointer
  (self ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_create_ndb_wait_group" #.(swig-lispify "Ndb_cluster_connection_create_ndb_wait_group" 'function)) :pointer
  (self ndb-cluster-connection-type)
  (size :int))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_release_ndb_wait_group" #.(swig-lispify "Ndb_cluster_connection_release_ndb_wait_group" 'function)) :pointer
  (self ndb-cluster-connection-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Ndb_cluster_connection_wait_until_ready__SWIG_1" #.(swig-lispify "Ndb_cluster_connection_wait_until_ready/SWIG-1" 'function)) :int
  (self ndb-cluster-connection-type)
  (nodes :pointer)
  (cnt :int)
  (timeout :int))

(cl:defconstant #.(swig-lispify "NDB_MAX_NO_OF_ATTRIBUTES_IN_KEY" 'constant) 32)

(cl:defconstant #.(swig-lispify "NDB_MAX_ATTRIBUTES_IN_INDEX" 'constant) 32)

(cl:defconstant #.(swig-lispify "NDB_MAX_ATTRIBUTES_IN_TABLE" 'constant) 512)

(cl:defconstant #.(swig-lispify "NDB_MAX_TUPLE_SIZE_IN_WORDS" 'constant) 7500)

(cl:defconstant #.(swig-lispify "NDB_MAX_KEYSIZE_IN_WORDS" 'constant) 1023)

(cl:defconstant #.(swig-lispify "NDB_MAX_KEY_SIZE" 'constant) (cl:* 1023 4))

(cl:defconstant #.(swig-lispify "NDB_MAX_TUPLE_SIZE" 'constant) (cl:* 7500 4))

(cl:defconstant #.(swig-lispify "NDB_MAX_ACTIVE_EVENTS" 'constant) 100)

(cl:defconstant #.(swig-lispify "NDB_MAX_LONG_SECTIONS_SIZE" 'constant) (cl:* 240 33))

(cl:defconstant #.(swig-lispify "NDB_MAX_SCANFILTER_SIZE_IN_WORDS" 'constant) (cl:- 16384 1 1024))

(cffi:defcenum #.(swig-lispify "ndberror_status_enum" 'enumname)
	(#.(swig-lispify "ndberror_st_success" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "ndberror_st_temporary" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "ndberror_st_permanent" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "ndberror_st_unknown" 'enumvalue :keyword) #.3))

(cffi:defcenum #.(swig-lispify "ndberror_classification_enum" 'enumname)
	(#.(swig-lispify "ndberror_cl_none" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "ndberror_cl_application" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "ndberror_cl_no_data_found" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "ndberror_cl_constraint_violation" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "ndberror_cl_schema_error" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "ndberror_cl_user_defined" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "ndberror_cl_insufficient_space" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "ndberror_cl_temporary_resource" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "ndberror_cl_node_recovery" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "ndberror_cl_overload" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "ndberror_cl_timeout_expired" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "ndberror_cl_unknown_result" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "ndberror_cl_internal_error" 'enumvalue :keyword) #.12)
	(#.(swig-lispify "ndberror_cl_function_not_implemented" 'enumvalue :keyword) #.13)
	(#.(swig-lispify "ndberror_cl_unknown_error_code" 'enumvalue :keyword) #.14)
	(#.(swig-lispify "ndberror_cl_node_shutdown" 'enumvalue :keyword) #.15)
	(#.(swig-lispify "ndberror_cl_configuration" 'enumvalue :keyword) #.16)
	(#.(swig-lispify "ndberror_cl_schema_object_already_exists" 'enumvalue :keyword) #.17)
	(#.(swig-lispify "ndberror_cl_internal_temporary" 'enumvalue :keyword) #.18))

(cffi:defcstruct #.(swig-lispify "ndberror_struct" 'classname)
	(#.(swig-lispify "status" 'slotname :keyword) #.(swig-lispify "ndberror_status_enum" 'enumname))
	(#.(swig-lispify "classification" 'slotname :keyword) #.(swig-lispify "ndberror_classification_enum" 'enumname))
	(#.(swig-lispify "code" 'slotname :keyword) :int)
	(#.(swig-lispify "mysql_code" 'slotname :keyword) :int)
	(#.(swig-lispify "message" 'slotname :keyword) :string)
	(#.(swig-lispify "details" 'slotname :keyword) :string))

(cffi:defcfun ("_wrap_ndberror_status_message" #.(swig-lispify "ndberror_status_message" 'function)) :string
  (arg0 #.(swig-lispify "ndberror_status_enum" 'enumname)))

(cffi:defcfun ("_wrap_ndberror_classification_message" #.(swig-lispify "ndberror_classification_message" 'function)) :string
  (arg0 #.(swig-lispify "ndberror_classification_enum" 'enumname)))

(cffi:defcfun ("_wrap_ndberror_update" #.(swig-lispify "ndberror_update" 'function)) :void
  (arg0 :pointer))

(cffi:defcfun ("_wrap_ndb_error_string" #.(swig-lispify "ndb_error_string" 'function)) :int
  (err_no :int)
  (str :string)
  (size :int))

(cffi:defcfun ("_wrap_ndb_error_get_next" #.(swig-lispify "ndb_error_get_next" 'function)) :int
  (index :int)
  (err_no :pointer)
  (status_msg :pointer)
  (class_msg :pointer)
  (error_msg :pointer))

(cffi:defcstruct #.(swig-lispify "NdbError" 'classname)
	(#.(swig-lispify "status" 'slotname :keyword) :pointer)
	(#.(swig-lispify "classification" 'slotname :keyword) :pointer)
	(#.(swig-lispify "code" 'slotname :keyword) :int)
	(#.(swig-lispify "mysql_code" 'slotname :keyword) :int)
	(#.(swig-lispify "message" 'slotname :keyword) :string)
	(#.(swig-lispify "details" 'slotname :keyword) :string)
	(#.(swig-lispify "operator_ndberror_struct" 'slotname :keyword) :pointer))

(cffi:defcfun ("_wrap_new_NdbDictionary" #.(swig-lispify "new_NdbDictionary" 'function)) (ndb-dictionary-type :garbage-collect t))

(cffi:defcenum #.(swig-lispify "NdbRecordFlags" 'enumname)
	(#.(swig-lispify "RecMysqldShrinkVarchar" 'enumvalue :keyword) #.#x1)
	(#.(swig-lispify "RecMysqldBitfield" 'enumvalue :keyword) #.#x2)
	(#.(swig-lispify "RecPerColumnFlags" 'enumvalue :keyword) #.#x4))

(cffi:defcenum #.(swig-lispify "RecordType" 'enumname)
	#.(swig-lispify "TableAccess" 'enumvalue :keyword)
	#.(swig-lispify "IndexAccess" 'enumvalue :keyword))

(cffi:defcfun ("_wrap_NdbDictionary_getRecordType" #.(swig-lispify "NdbDictionary_getRecordType" 'function)) :pointer
  (record ndb-dictionary-type))

(cffi:defcfun ("_wrap_NdbDictionary_getRecordTableName" #.(swig-lispify "NdbDictionary_getRecordTableName" 'function)) :string
  (record ndb-dictionary-type))

(cffi:defcfun ("_wrap_NdbDictionary_getRecordIndexName" #.(swig-lispify "NdbDictionary_getRecordIndexName" 'function)) :string
  (record ndb-dictionary-type))

(cffi:defcfun ("_wrap_NdbDictionary_getFirstAttrId" #.(swig-lispify "NdbDictionary_getFirstAttrId" 'function)) :pointer
  (record ndb-dictionary-type)
  (firstAttrId :pointer))

(cffi:defcfun ("_wrap_NdbDictionary_getNextAttrId" #.(swig-lispify "NdbDictionary_getNextAttrId" 'function)) :pointer
  (record ndb-dictionary-type)
  (attrId :pointer))

(cffi:defcfun ("_wrap_NdbDictionary_getOffset" #.(swig-lispify "NdbDictionary_getOffset" 'function)) :pointer
  (record ndb-dictionary-type)
  (attrId :unsigned-int)
  (offset :pointer))

(cffi:defcfun ("_wrap_NdbDictionary_getNullBitOffset" #.(swig-lispify "NdbDictionary_getNullBitOffset" 'function)) :pointer
  (record ndb-dictionary-type)
  (attrId :unsigned-int)
  (nullbit_byte_offset :pointer)
  (nullbit_bit_in_byte :pointer))

(cffi:defcfun ("_wrap_NdbDictionary_getValuePtr__SWIG_0" #.(swig-lispify "NdbDictionary_getValuePtr/SWIG-0" 'function)) :string
  (record ndb-dictionary-type)
  (row :string)
  (attrId :unsigned-int))

(cffi:defcfun ("_wrap_NdbDictionary_getValuePtr__SWIG_1" #.(swig-lispify "NdbDictionary_getValuePtr/SWIG-1" 'function)) :string
  (record ndb-dictionary-type)
  (row :string)
  (attrId :unsigned-int))

(cffi:defcfun ("_wrap_NdbDictionary_isNull" #.(swig-lispify "NdbDictionary_isNull" 'function)) :pointer
  (record ndb-dictionary-type)
  (row :string)
  (attrId :unsigned-int))

(cffi:defcfun ("_wrap_NdbDictionary_setNull" #.(swig-lispify "NdbDictionary_setNull" 'function)) :int
  (record ndb-dictionary-type)
  (row :string)
  (attrId :unsigned-int)
  (value :pointer))

(cffi:defcfun ("_wrap_NdbDictionary_getRecordRowLength" #.(swig-lispify "NdbDictionary_getRecordRowLength" 'function)) :unsigned-int
  (record ndb-dictionary-type))

(cffi:defcfun ndb-dictionary-type :pointer)

(cffi:defcfun ("_wrap_NdbDictionary_printFormattedValue" #.(swig-lispify "NdbDictionary_printFormattedValue" 'function)) :pointer
  (out ndb-dictionary-type)
  (format :pointer)
  (c :pointer)
  (val :pointer))

(cffi:defcfun ("_wrap_delete_NdbDictionary" #.(swig-lispify "delete_NdbDictionary" 'function)) :void
  (self ndb-dictionary-type))

;; where is the constructor _wrap_new_Object?! Same as ObjectId? strange...

(cffi:defcfun ("_wrap_delete_Object" #.(swig-lispify "delete_Object" 'function)) :void
  (self :pointer))

(cffi:defcenum #.(swig-lispify "Status" 'enumname)
	#.(swig-lispify "New" 'enumvalue :keyword)
	#.(swig-lispify "Changed" 'enumvalue :keyword)
	#.(swig-lispify "Retrieved" 'enumvalue :keyword)
	#.(swig-lispify "Invalid" 'enumvalue :keyword)
	#.(swig-lispify "Altered" 'enumvalue :keyword))

(cffi:defcfun ("_wrap_Object_getObjectStatus" #.(swig-lispify "Object_getObjectStatus" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_Object_getObjectVersion" #.(swig-lispify "Object_getObjectVersion" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_Object_getObjectId" #.(swig-lispify "Object_getObjectId" 'function)) :int
  (self :pointer))

(cffi:defcenum #.(swig-lispify "Type" 'enumname)
	(#.(swig-lispify "TypeUndefined" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "SystemTable" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "UserTable" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "UniqueHashIndex" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "OrderedIndex" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "HashIndexTrigger" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "IndexTrigger" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "SubscriptionTrigger" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "ReadOnlyConstraint" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "TableEvent" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "Tablespace" 'enumvalue :keyword) #.20)
	(#.(swig-lispify "LogfileGroup" 'enumvalue :keyword) #.21)
	(#.(swig-lispify "Datafile" 'enumvalue :keyword) #.22)
	(#.(swig-lispify "Undofile" 'enumvalue :keyword) #.23)
	(#.(swig-lispify "ReorgTrigger" 'enumvalue :keyword) #.19)
	(#.(swig-lispify "HashMap" 'enumvalue :keyword) #.24)
	(#.(swig-lispify "ForeignKey" 'enumvalue :keyword) #.25)
	(#.(swig-lispify "FKParentTrigger" 'enumvalue :keyword) #.26)
	(#.(swig-lispify "FKChildTrigger" 'enumvalue :keyword) #.27)
	(#.(swig-lispify "FullyReplicatedTrigger" 'enumvalue :keyword) #.28))

(cffi:defcenum #.(swig-lispify "State" 'enumname)
	(#.(swig-lispify "StateUndefined" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "StateOffline" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "StateBuilding" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "StateDropping" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "StateOnline" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "ObsoleteStateBackup" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "StateBroken" 'enumvalue :keyword) #.9))

(cffi:defcenum #.(swig-lispify "Store" 'enumname)
	(#.(swig-lispify "StoreUndefined" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "StoreNotLogged" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "StorePermanent" 'enumvalue :keyword) #.2))

(cffi:defcenum #.(swig-lispify "FragmentType" 'enumname)
	(#.(swig-lispify "FragUndefined" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "FragSingle" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "FragAllSmall" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "FragAllMedium" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "FragAllLarge" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "DistrKeyHash" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "DistrKeyLin" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "UserDefined" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "HashMapPartition" 'enumvalue :keyword) #.9))

(cffi:defcenum #.(swig-lispify "PartitionBalance" 'enumname)
	(#.(swig-lispify "PartitionBalance_Specific" 'enumvalue :keyword) #.(cl:logxor 0 #xffffffff)) ;; #.~Uint32(0))
	(#.(swig-lispify "PartitionBalance_ForRPByLDM" 'enumvalue :keyword) #.(cl:logxor 1 #xffffffff)) ;; #.~Uint32(1))
	(#.(swig-lispify "PartitionBalance_ForRAByLDMx2" 'enumvalue :keyword) #.(cl:logxor 5 #xffffffff)) ;; #.~Uint32(5))
	(#.(swig-lispify "PartitionBalance_ForRAByLDMx3" 'enumvalue :keyword) #.(cl:logxor 6 #xffffffff)) ;; #.~Uint32(6))
	(#.(swig-lispify "PartitionBalance_ForRAByLDMx4" 'enumvalue :keyword) #.(cl:logxor 7 #xffffffff)) ;; #.~Uint32(7))
	(#.(swig-lispify "PartitionBalance_ForRAByLDM" 'enumvalue :keyword) #.(cl:logxor 2 #xffffffff)) ;; #.~Uint32(2))
	(#.(swig-lispify "PartitionBalance_ForRPByNode" 'enumvalue :keyword) #.(cl:logxor 3 #xffffffff)) ;; #.~Uint32(3))
	(#.(swig-lispify "PartitionBalance_ForRAByNode" 'enumvalue :keyword) #.(cl:logxor 4 #xffffffff)) ;; #.~Uint32(4))
  )

(cffi:defcfun ("_wrap_new_ObjectId" #.(swig-lispify "new_ObjectId" 'function)) (object-id-type :garbage-collect t))

(cffi:defcfun ("_wrap_delete_ObjectId" #.(swig-lispify "delete_ObjectId" 'function)) :void
  (self object-id-type))

(cffi:defcfun ("_wrap_ObjectId_getObjectStatus" #.(swig-lispify "ObjectId_getObjectStatus" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_ObjectId_getObjectVersion" #.(swig-lispify "ObjectId_getObjectVersion" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_ObjectId_getObjectId" #.(swig-lispify "ObjectId_getObjectId" 'function)) :int
  (self :pointer))

(cffi:defcenum #.(swig-lispify "Type" 'enumname)
	(#.(swig-lispify "Undefined" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "Tinyint" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "Tinyunsigned" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "Smallint" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "Smallunsigned" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "Mediumint" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "Mediumunsigned" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "Int" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "Unsigned" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "Bigint" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "Bigunsigned" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "Float" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "Double" 'enumvalue :keyword) #.12)
	(#.(swig-lispify "Olddecimal" 'enumvalue :keyword) #.13)
	(#.(swig-lispify "Olddecimalunsigned" 'enumvalue :keyword) #.28)
	(#.(swig-lispify "Decimal" 'enumvalue :keyword) #.29)
	(#.(swig-lispify "Decimalunsigned" 'enumvalue :keyword) #.30)
	(#.(swig-lispify "Char" 'enumvalue :keyword) #.14)
	(#.(swig-lispify "Varchar" 'enumvalue :keyword) #.15)
	(#.(swig-lispify "Binary" 'enumvalue :keyword) #.16)
	(#.(swig-lispify "Varbinary" 'enumvalue :keyword) #.17)
	(#.(swig-lispify "Datetime" 'enumvalue :keyword) #.18)
	(#.(swig-lispify "Date" 'enumvalue :keyword) #.19)
	(#.(swig-lispify "Blob" 'enumvalue :keyword) #.20)
	(#.(swig-lispify "Text" 'enumvalue :keyword) #.21)
	(#.(swig-lispify "Bit" 'enumvalue :keyword) #.22)
	(#.(swig-lispify "Longvarchar" 'enumvalue :keyword) #.23)
	(#.(swig-lispify "Longvarbinary" 'enumvalue :keyword) #.24)
	(#.(swig-lispify "Time" 'enumvalue :keyword) #.25)
	(#.(swig-lispify "Year" 'enumvalue :keyword) #.26)
	(#.(swig-lispify "Timestamp" 'enumvalue :keyword) #.27)
	(#.(swig-lispify "Time2" 'enumvalue :keyword) #.31)
	(#.(swig-lispify "Datetime2" 'enumvalue :keyword) #.32)
	(#.(swig-lispify "Timestamp2" 'enumvalue :keyword) #.33))

(cffi:defcenum #.(swig-lispify "ArrayType" 'enumname)
	(#.(swig-lispify "ArrayTypeFixed" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "ArrayTypeShortVar" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "ArrayTypeMediumVar" 'enumvalue :keyword) #.2))

(cffi:defcenum #.(swig-lispify "StorageType" 'enumname)
	(#.(swig-lispify "StorageTypeMemory" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "StorageTypeDisk" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "StorageTypeDefault" 'enumvalue :keyword) #.2))

(cffi:defcfun ("_wrap_Column_getName" #.(swig-lispify "Column_getName" 'function)) :string
  (self column-type))

(cffi:defcfun ("_wrap_Column_getNullable" #.(swig-lispify "Column_getNullable" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getPrimaryKey" #.(swig-lispify "Column_getPrimaryKey" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getColumnNo" #.(swig-lispify "Column_getColumnNo" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getAttrId" #.(swig-lispify "Column_getAttrId" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_equal" #.(swig-lispify "Column_equal" 'function)) :pointer
  (self column-type)
  (column :pointer))

(cffi:defcfun ("_wrap_Column_getType" #.(swig-lispify "Column_getType" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getPrecision" #.(swig-lispify "Column_getPrecision" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getScale" #.(swig-lispify "Column_getScale" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getLength" #.(swig-lispify "Column_getLength" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getSizeInBytesForRecord" #.(swig-lispify "Column_getSizeInBytesForRecord" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getCharset" #.(swig-lispify "Column_getCharset" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getCharsetNumber" #.(swig-lispify "Column_getCharsetNumber" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getInlineSize" #.(swig-lispify "Column_getInlineSize" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getPartSize" #.(swig-lispify "Column_getPartSize" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getStripeSize" #.(swig-lispify "Column_getStripeSize" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getSize" #.(swig-lispify "Column_getSize" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getPartitionKey" #.(swig-lispify "Column_getPartitionKey" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getDistributionKey" #.(swig-lispify "Column_getDistributionKey" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getArrayType" #.(swig-lispify "Column_getArrayType" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getStorageType" #.(swig-lispify "Column_getStorageType" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getDynamic" #.(swig-lispify "Column_getDynamic" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getIndexSourced" #.(swig-lispify "Column_getIndexSourced" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_new_Column__SWIG_0" #.(swig-lispify "new_Column/SWIG-0" 'function)) (column-type :garbage-collect t)
  (name :string))

(cffi:defcfun ("_wrap_new_Column__SWIG_1" #.(swig-lispify "new_Column/SWIG-1" 'function)) (column-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_Column__SWIG_2" #.(swig-lispify "new_Column/SWIG-2" 'function)) (column-type :garbage-collect t)
  (column :pointer))

(cffi:defcfun ("_wrap_delete_Column" #.(swig-lispify "delete_Column" 'function)) :void
  (self column-type))

(cffi:defcfun ("_wrap_Column_setName" #.(swig-lispify "Column_setName" 'function)) :int
  (self column-type)
  (name :string))

(cffi:defcfun ("_wrap_Column_setNullable" #.(swig-lispify "Column_setNullable" 'function)) :void
  (self column-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Column_setPrimaryKey" #.(swig-lispify "Column_setPrimaryKey" 'function)) :void
  (self column-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Column_setType" #.(swig-lispify "Column_setType" 'function)) :void
  (self column-type)
  (type :pointer))

(cffi:defcfun ("_wrap_Column_setPrecision" #.(swig-lispify "Column_setPrecision" 'function)) :void
  (self column-type)
  (arg1 :int))

(cffi:defcfun ("_wrap_Column_setScale" #.(swig-lispify "Column_setScale" 'function)) :void
  (self column-type)
  (arg1 :int))

(cffi:defcfun ("_wrap_Column_setLength" #.(swig-lispify "Column_setLength" 'function)) :void
  (self column-type)
  (length :int))

(cffi:defcfun ("_wrap_Column_setCharset" #.(swig-lispify "Column_setCharset" 'function)) :void
  (self column-type)
  (cs :pointer))

(cffi:defcfun ("_wrap_Column_setInlineSize" #.(swig-lispify "Column_setInlineSize" 'function)) :void
  (self column-type)
  (size :int))

(cffi:defcfun ("_wrap_Column_setPartSize" #.(swig-lispify "Column_setPartSize" 'function)) :void
  (self column-type)
  (size :int))

(cffi:defcfun ("_wrap_Column_setStripeSize" #.(swig-lispify "Column_setStripeSize" 'function)) :void
  (self column-type)
  (size :int))

(cffi:defcfun ("_wrap_Column_setPartitionKey" #.(swig-lispify "Column_setPartitionKey" 'function)) :void
  (self column-type)
  (enable :pointer))

(cffi:defcfun ("_wrap_Column_setDistributionKey" #.(swig-lispify "Column_setDistributionKey" 'function)) :void
  (self column-type)
  (enable :pointer))

(cffi:defcfun ("_wrap_Column_setArrayType" #.(swig-lispify "Column_setArrayType" 'function)) :void
  (self column-type)
  (type :pointer))

(cffi:defcfun ("_wrap_Column_setStorageType" #.(swig-lispify "Column_setStorageType" 'function)) :void
  (self column-type)
  (type :pointer))

(cffi:defcfun ("_wrap_Column_setDynamic" #.(swig-lispify "Column_setDynamic" 'function)) :void
  (self column-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Column_setDefaultValue__SWIG_0" #.(swig-lispify "Column_setDefaultValue/SWIG-0" 'function)) :int
  (self column-type)
  (arg1 :string))

(cffi:defcfun ("_wrap_Column_setDefaultValue__SWIG_1" #.(swig-lispify "Column_setDefaultValue/SWIG-1" 'function)) :int
  (self column-type)
  (buf :pointer)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_Column_getDefaultValue__SWIG_0" #.(swig-lispify "Column_getDefaultValue/SWIG-0" 'function)) :pointer
  (self column-type)
  (len :pointer))

(cffi:defcfun ("_wrap_Column_getDefaultValue__SWIG_1" #.(swig-lispify "Column_getDefaultValue/SWIG-1" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_getBlobTable" #.(swig-lispify "Column_getBlobTable" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_setAutoIncrement" #.(swig-lispify "Column_setAutoIncrement" 'function)) :void
  (self column-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Column_getAutoIncrement" #.(swig-lispify "Column_getAutoIncrement" 'function)) :pointer
  (self column-type))

(cffi:defcfun ("_wrap_Column_setAutoIncrementInitialValue" #.(swig-lispify "Column_setAutoIncrementInitialValue" 'function)) :void
  (self column-type)
  (val :unsigned-long-long))

(cffi:defcvar ("Column_FRAGMENT" #.(swig-lispify "Column_FRAGMENT" 'variable))
 :pointer)

(cffi:defcvar ("Column_FRAGMENT_FIXED_MEMORY" #.(swig-lispify "Column_FRAGMENT_FIXED_MEMORY" 'variable))
 :pointer)

(cffi:defcvar ("Column_FRAGMENT_VARSIZED_MEMORY" #.(swig-lispify "Column_FRAGMENT_VARSIZED_MEMORY" 'variable))
 :pointer)

(cffi:defcvar ("Column_ROW_COUNT" #.(swig-lispify "Column_ROW_COUNT" 'variable))
 :pointer)

(cffi:defcvar ("Column_COMMIT_COUNT" #.(swig-lispify "Column_COMMIT_COUNT" 'variable))
 :pointer)

(cffi:defcvar ("Column_ROW_SIZE" #.(swig-lispify "Column_ROW_SIZE" 'variable))
 :pointer)

(cffi:defcvar ("Column_RANGE_NO" #.(swig-lispify "Column_RANGE_NO" 'variable))
 :pointer)

(cffi:defcvar ("Column_DISK_REF" #.(swig-lispify "Column_DISK_REF" 'variable))
 :pointer)

(cffi:defcvar ("Column_RECORDS_IN_RANGE" #.(swig-lispify "Column_RECORDS_IN_RANGE" 'variable))
 :pointer)

(cffi:defcvar ("Column_ROWID" #.(swig-lispify "Column_ROWID" 'variable))
 :pointer)

(cffi:defcvar ("Column_ROW_GCI" #.(swig-lispify "Column_ROW_GCI" 'variable))
 :pointer)

(cffi:defcvar ("Column_ROW_GCI64" #.(swig-lispify "Column_ROW_GCI64" 'variable))
 :pointer)

(cffi:defcvar ("Column_ROW_AUTHOR" #.(swig-lispify "Column_ROW_AUTHOR" 'variable))
 :pointer)

(cffi:defcvar ("Column_ANY_VALUE" #.(swig-lispify "Column_ANY_VALUE" 'variable))
 :pointer)

(cffi:defcvar ("Column_COPY_ROWID" #.(swig-lispify "Column_COPY_ROWID" 'variable))
 :pointer)

(cffi:defcvar ("Column_LOCK_REF" #.(swig-lispify "Column_LOCK_REF" 'variable))
 :pointer)

(cffi:defcvar ("Column_OP_ID" #.(swig-lispify "Column_OP_ID" 'variable))
 :pointer)

(cffi:defcvar ("Column_OPTIMIZE" #.(swig-lispify "Column_OPTIMIZE" 'variable))
 :pointer)

(cffi:defcvar ("Column_FRAGMENT_EXTENT_SPACE" #.(swig-lispify "Column_FRAGMENT_EXTENT_SPACE" 'variable))
 :pointer)

(cffi:defcvar ("Column_FRAGMENT_FREE_EXTENT_SPACE" #.(swig-lispify "Column_FRAGMENT_FREE_EXTENT_SPACE" 'variable))
 :pointer)

(cffi:defcfun ("_wrap_Column_getSizeInBytes" #.(swig-lispify "Column_getSizeInBytes" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_getBlobVersion" #.(swig-lispify "Column_getBlobVersion" 'function)) :int
  (self column-type))

(cffi:defcfun ("_wrap_Column_setBlobVersion" #.(swig-lispify "Column_setBlobVersion" 'function)) :void
  (self column-type)
  (blobVersion :int))

(cffi:defcfun ("_wrap_Column_isBindable" #.(swig-lispify "Column_isBindable" 'function)) :int
  (self column-type)
  (arg1 :pointer))

(cffi:defcenum #.(swig-lispify "SingleUserMode" 'enumname)
	(#.(swig-lispify "SingleUserModeLocked" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "SingleUserModeReadOnly" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "SingleUserModeReadWrite" 'enumvalue :keyword) #.2))

(cffi:defcfun ("_wrap_Table_getName" #.(swig-lispify "Table_getName" 'function)) :string
  (self table-type))

(cffi:defcfun ("_wrap_Table_getTableId" #.(swig-lispify "Table_getTableId" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getColumn__SWIG_0" #.(swig-lispify "Table_getColumn/SWIG-0" 'function)) :pointer
  (self table-type)
  (name :string))

(cffi:defcfun ("_wrap_Table_getColumn__SWIG_1" #.(swig-lispify "Table_getColumn/SWIG-1" 'function)) :pointer
  (self table-type)
  (attributeId :int))

(cffi:defcfun ("_wrap_Table_getColumn__SWIG_2" #.(swig-lispify "Table_getColumn/SWIG-2" 'function)) :pointer
  (self table-type)
  (name :string))

(cffi:defcfun ("_wrap_Table_getColumn__SWIG_3" #.(swig-lispify "Table_getColumn/SWIG-3" 'function)) :pointer
  (self table-type)
  (attributeId :int))

(cffi:defcfun ("_wrap_Table_getLogging" #.(swig-lispify "Table_getLogging" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getFragmentType" #.(swig-lispify "Table_getFragmentType" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getKValue" #.(swig-lispify "Table_getKValue" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getMinLoadFactor" #.(swig-lispify "Table_getMinLoadFactor" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getMaxLoadFactor" #.(swig-lispify "Table_getMaxLoadFactor" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getNoOfColumns" #.(swig-lispify "Table_getNoOfColumns" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getNoOfAutoIncrementColumns" #.(swig-lispify "Table_getNoOfAutoIncrementColumns" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getNoOfPrimaryKeys" #.(swig-lispify "Table_getNoOfPrimaryKeys" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getPrimaryKey" #.(swig-lispify "Table_getPrimaryKey" 'function)) :string
  (self table-type)
  (no :int))

(cffi:defcfun ("_wrap_Table_equal" #.(swig-lispify "Table_equal" 'function)) :pointer
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_getFrmData" #.(swig-lispify "Table_getFrmData" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getFrmLength" #.(swig-lispify "Table_getFrmLength" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getDefaultRecord" #.(swig-lispify "Table_getDefaultRecord" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_new_Table__SWIG_0" #.(swig-lispify "new_Table/SWIG-0" 'function)) (table-type :garbage-collect t)
  (name :string))

(cffi:defcfun ("_wrap_new_Table__SWIG_1" #.(swig-lispify "new_Table/SWIG-1" 'function)) (table-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_Table__SWIG_2" #.(swig-lispify "new_Table/SWIG-2" 'function)) (table-type :garbage-collect t)
  (table :pointer))

(cffi:defcfun ("_wrap_delete_Table" #.(swig-lispify "delete_Table" 'function)) :void
  (self table-type))

(cffi:defcfun ("_wrap_Table___assign__" #.(swig-lispify "Table___assign__" 'function)) :pointer
  (self table-type)
  (table :pointer))

(cffi:defcfun ("_wrap_Table_setName" #.(swig-lispify "Table_setName" 'function)) :int
  (self table-type)
  (name :string))

(cffi:defcfun ("_wrap_Table_addColumn" #.(swig-lispify "Table_addColumn" 'function)) :int
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_setLogging" #.(swig-lispify "Table_setLogging" 'function)) :void
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_setLinearFlag" #.(swig-lispify "Table_setLinearFlag" 'function)) :void
  (self table-type)
  (flag :unsigned-int))

(cffi:defcfun ("_wrap_Table_getLinearFlag" #.(swig-lispify "Table_getLinearFlag" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setFragmentCount" #.(swig-lispify "Table_setFragmentCount" 'function)) :void
  (self table-type)
  (arg1 :unsigned-int))

(cffi:defcfun ("_wrap_Table_getFragmentCount" #.(swig-lispify "Table_getFragmentCount" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getPartitionCount" #.(swig-lispify "Table_getPartitionCount" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_setPartitionBalance" #.(swig-lispify "Table_setPartitionBalance" 'function)) :void
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_getPartitionBalance__SWIG_0" #.(swig-lispify "Table_getPartitionBalance/SWIG-0" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getPartitionBalance__SWIG_1" #.(swig-lispify "Table_getPartitionBalance/SWIG-1" 'function)) :pointer
  (str table-type))

(cffi:defcfun ("_wrap_Table_getPartitionBalanceString__SWIG_0" #.(swig-lispify "Table_getPartitionBalanceString/SWIG-0" 'function)) :string
  (self table-type))

(cffi:defcfun ("_wrap_Table_getPartitionBalanceString__SWIG_1" #.(swig-lispify "Table_getPartitionBalanceString/SWIG-1" 'function)) :string
  (partition_balance table-type))

(cffi:defcfun ("_wrap_Table_setFragmentType" #.(swig-lispify "Table_setFragmentType" 'function)) :void
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_setKValue" #.(swig-lispify "Table_setKValue" 'function)) :void
  (self table-type)
  (kValue :int))

(cffi:defcfun ("_wrap_Table_setMinLoadFactor" #.(swig-lispify "Table_setMinLoadFactor" 'function)) :void
  (self table-type)
  (arg1 :int))

(cffi:defcfun ("_wrap_Table_setMaxLoadFactor" #.(swig-lispify "Table_setMaxLoadFactor" 'function)) :void
  (self table-type)
  (arg1 :int))

(cffi:defcfun ("_wrap_Table_setTablespaceName" #.(swig-lispify "Table_setTablespaceName" 'function)) :int
  (self table-type)
  (name :string))

(cffi:defcfun ("_wrap_Table_getTablespaceName" #.(swig-lispify "Table_getTablespaceName" 'function)) :string
  (self table-type))

(cffi:defcfun ("_wrap_Table_setTablespace" #.(swig-lispify "Table_setTablespace" 'function)) :int
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_getTablespace__SWIG_0" #.(swig-lispify "Table_getTablespace/SWIG-0" 'function)) :pointer
  (self table-type)
  (id :pointer)
  (version :pointer))

(cffi:defcfun ("_wrap_Table_getTablespace__SWIG_1" #.(swig-lispify "Table_getTablespace/SWIG-1" 'function)) :pointer
  (self table-type)
  (id :pointer))

(cffi:defcfun ("_wrap_Table_getTablespace__SWIG_2" #.(swig-lispify "Table_getTablespace/SWIG-2" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getHashMap__SWIG_0" #.(swig-lispify "Table_getHashMap/SWIG-0" 'function)) :pointer
  (self table-type)
  (id :pointer)
  (version :pointer))

(cffi:defcfun ("_wrap_Table_getHashMap__SWIG_1" #.(swig-lispify "Table_getHashMap/SWIG-1" 'function)) :pointer
  (self table-type)
  (id :pointer))

(cffi:defcfun ("_wrap_Table_getHashMap__SWIG_2" #.(swig-lispify "Table_getHashMap/SWIG-2" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setHashMap" #.(swig-lispify "Table_setHashMap" 'function)) :int
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_getObjectStatus" #.(swig-lispify "Table_getObjectStatus" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setStatusInvalid" #.(swig-lispify "Table_setStatusInvalid" 'function)) :void
  (self table-type))

(cffi:defcfun ("_wrap_Table_getObjectVersion" #.(swig-lispify "Table_getObjectVersion" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_setDefaultNoPartitionsFlag" #.(swig-lispify "Table_setDefaultNoPartitionsFlag" 'function)) :void
  (self table-type)
  (indicator :unsigned-int))

(cffi:defcfun ("_wrap_Table_getDefaultNoPartitionsFlag" #.(swig-lispify "Table_getDefaultNoPartitionsFlag" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getObjectId" #.(swig-lispify "Table_getObjectId" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_setFrm" #.(swig-lispify "Table_setFrm" 'function)) :int
  (self table-type)
  (data :pointer)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_Table_setExtraMetadata" #.(swig-lispify "Table_setExtraMetadata" 'function)) :int
  (self table-type)
  (version :unsigned-int)
  (data :pointer)
  (data_length :unsigned-int))

(cffi:defcfun ("_wrap_Table_getExtraMetadata" #.(swig-lispify "Table_getExtraMetadata" 'function)) :int
  (self table-type)
  (version :pointer)
  (data :pointer)
  (data_length :pointer))

(cffi:defcfun ("_wrap_Table_setFragmentData" #.(swig-lispify "Table_setFragmentData" 'function)) :int
  (self table-type)
  (nodegroups :pointer)
  (cnt :unsigned-int))

(cffi:defcfun ("_wrap_Table_getFragmentData" #.(swig-lispify "Table_getFragmentData" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getFragmentDataLen" #.(swig-lispify "Table_getFragmentDataLen" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_setRangeListData" #.(swig-lispify "Table_setRangeListData" 'function)) :int
  (self table-type)
  (data :pointer)
  (cnt :unsigned-int))

(cffi:defcfun ("_wrap_Table_getRangeListData" #.(swig-lispify "Table_getRangeListData" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getRangeListDataLen" #.(swig-lispify "Table_getRangeListDataLen" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getFragmentNodes" #.(swig-lispify "Table_getFragmentNodes" 'function)) :unsigned-int
  (self table-type)
  (fragmentId :unsigned-int)
  (nodeIdArrayPtr :pointer)
  (arraySize :unsigned-int))

(cffi:defcfun ("_wrap_Table_setMaxRows" #.(swig-lispify "Table_setMaxRows" 'function)) :void
  (self table-type)
  (maxRows :unsigned-long-long))

(cffi:defcfun ("_wrap_Table_getMaxRows" #.(swig-lispify "Table_getMaxRows" 'function)) :unsigned-long-long
  (self table-type))

(cffi:defcfun ("_wrap_Table_setMinRows" #.(swig-lispify "Table_setMinRows" 'function)) :void
  (self table-type)
  (minRows :unsigned-long-long))

(cffi:defcfun ("_wrap_Table_getMinRows" #.(swig-lispify "Table_getMinRows" 'function)) :unsigned-long-long
  (self table-type))

(cffi:defcfun ("_wrap_Table_setSingleUserMode" #.(swig-lispify "Table_setSingleUserMode" 'function)) :void
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_getSingleUserMode" #.(swig-lispify "Table_getSingleUserMode" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setRowGCIIndicator" #.(swig-lispify "Table_setRowGCIIndicator" 'function)) :void
  (self table-type)
  (value :pointer))

(cffi:defcfun ("_wrap_Table_getRowGCIIndicator" #.(swig-lispify "Table_getRowGCIIndicator" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setRowChecksumIndicator" #.(swig-lispify "Table_setRowChecksumIndicator" 'function)) :void
  (self table-type)
  (value :pointer))

(cffi:defcfun ("_wrap_Table_getRowChecksumIndicator" #.(swig-lispify "Table_getRowChecksumIndicator" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setReadBackupFlag" #.(swig-lispify "Table_setReadBackupFlag" 'function)) :void
  (self table-type)
  (value :pointer))

(cffi:defcfun ("_wrap_Table_getReadBackupFlag" #.(swig-lispify "Table_getReadBackupFlag" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getMysqlName" #.(swig-lispify "Table_getMysqlName" 'function)) :string
  (self table-type))

(cffi:defcfun ("_wrap_Table_setStoredTable" #.(swig-lispify "Table_setStoredTable" 'function)) :void
  (self table-type)
  (x :pointer))

(cffi:defcfun ("_wrap_Table_getStoredTable" #.(swig-lispify "Table_getStoredTable" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_getRowSizeInBytes" #.(swig-lispify "Table_getRowSizeInBytes" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_createTableInDb__SWIG_0" #.(swig-lispify "Table_createTableInDb/SWIG-0" 'function)) :int
  (self table-type)
  (arg1 :pointer)
  (existingEqualIsOk :pointer))

(cffi:defcfun ("_wrap_Table_createTableInDb__SWIG_1" #.(swig-lispify "Table_createTableInDb/SWIG-1" 'function)) :int
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_getReplicaCount" #.(swig-lispify "Table_getReplicaCount" 'function)) :int
  (self table-type))

(cffi:defcfun ("_wrap_Table_getTemporary" #.(swig-lispify "Table_getTemporary" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setTemporary" #.(swig-lispify "Table_setTemporary" 'function)) :void
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_getForceVarPart" #.(swig-lispify "Table_getForceVarPart" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setForceVarPart" #.(swig-lispify "Table_setForceVarPart" 'function)) :void
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_checkColumns" #.(swig-lispify "Table_checkColumns" 'function)) :int
  (self table-type)
  (bitmap :pointer)
  (len_in_bytes :unsigned-int))

(cffi:defcfun ("_wrap_Table_assignObjId" #.(swig-lispify "Table_assignObjId" 'function)) :void
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_setStorageType" #.(swig-lispify "Table_setStorageType" 'function)) :void
  (self table-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Table_getStorageType" #.(swig-lispify "Table_getStorageType" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setExtraRowGciBits" #.(swig-lispify "Table_setExtraRowGciBits" 'function)) :void
  (self table-type)
  (arg1 :unsigned-int))

(cffi:defcfun ("_wrap_Table_getExtraRowGciBits" #.(swig-lispify "Table_getExtraRowGciBits" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_setExtraRowAuthorBits" #.(swig-lispify "Table_setExtraRowAuthorBits" 'function)) :void
  (self table-type)
  (arg1 :unsigned-int))

(cffi:defcfun ("_wrap_Table_getExtraRowAuthorBits" #.(swig-lispify "Table_getExtraRowAuthorBits" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_setFullyReplicated" #.(swig-lispify "Table_setFullyReplicated" 'function)) :void
  (self table-type)
  (val :pointer))

(cffi:defcfun ("_wrap_Table_getFullyReplicated" #.(swig-lispify "Table_getFullyReplicated" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Table_setRowChecksum" #.(swig-lispify "Table_setRowChecksum" 'function)) :void
  (self table-type)
  (arg1 :unsigned-int))

(cffi:defcfun ("_wrap_Table_getRowChecksum" #.(swig-lispify "Table_getRowChecksum" 'function)) :unsigned-int
  (self table-type))

(cffi:defcfun ("_wrap_Table_aggregate" #.(swig-lispify "Table_aggregate" 'function)) :int
  (self table-type)
  (error :pointer))

(cffi:defcfun ("_wrap_Table_validate" #.(swig-lispify "Table_validate" 'function)) :int
  (self table-type)
  (error :pointer))

(cffi:defcfun ("_wrap_Table_getPartitionId" #.(swig-lispify "Table_getPartitionId" 'function)) :unsigned-int
  (self table-type)
  (hashvalue :unsigned-int))

(cffi:defcfun ("_wrap_Table_hasDefaultValues" #.(swig-lispify "Table_hasDefaultValues" 'function)) :pointer
  (self table-type))

(cffi:defcfun ("_wrap_Index_getName" #.(swig-lispify "Index_getName" 'function)) :string
  (self index-type))

(cffi:defcfun ("_wrap_Index_getTable" #.(swig-lispify "Index_getTable" 'function)) :string
  (self index-type))

(cffi:defcfun ("_wrap_Index_getNoOfColumns" #.(swig-lispify "Index_getNoOfColumns" 'function)) :unsigned-int
  (self index-type))

(cffi:defcfun ("_wrap_Index_getNoOfIndexColumns" #.(swig-lispify "Index_getNoOfIndexColumns" 'function)) :int
  (self index-type))

(cffi:defcfun ("_wrap_Index_getColumn" #.(swig-lispify "Index_getColumn" 'function)) :pointer
  (self index-type)
  (no :unsigned-int))

(cffi:defcfun ("_wrap_Index_getIndexColumn" #.(swig-lispify "Index_getIndexColumn" 'function)) :string
  (self index-type)
  (no :int))

(cffi:defcenum #.(swig-lispify "Type" 'enumname)
	(#.(swig-lispify "Undefined" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "UniqueHashIndex" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "OrderedIndex" 'enumvalue :keyword) #.6))

(cffi:defcfun ("_wrap_Index_getType" #.(swig-lispify "Index_getType" 'function)) :pointer
  (self index-type))

(cffi:defcfun ("_wrap_Index_getLogging" #.(swig-lispify "Index_getLogging" 'function)) :pointer
  (self index-type))

(cffi:defcfun ("_wrap_Index_getObjectStatus" #.(swig-lispify "Index_getObjectStatus" 'function)) :pointer
  (self index-type))

(cffi:defcfun ("_wrap_Index_getObjectVersion" #.(swig-lispify "Index_getObjectVersion" 'function)) :int
  (self index-type))

(cffi:defcfun ("_wrap_Index_getObjectId" #.(swig-lispify "Index_getObjectId" 'function)) :int
  (self index-type))

(cffi:defcfun ("_wrap_Index_getDefaultRecord" #.(swig-lispify "Index_getDefaultRecord" 'function)) :pointer
  (self index-type))

(cffi:defcfun ("_wrap_new_Index__SWIG_0" #.(swig-lispify "new_Index/SWIG-0" 'function)) (index-type :garbage-collect t)
  (name :string))

(cffi:defcfun ("_wrap_new_Index__SWIG_1" #.(swig-lispify "new_Index/SWIG-1" 'function)) (index-type :garbage-collect t))

(cffi:defcfun ("_wrap_delete_Index" #.(swig-lispify "delete_Index" 'function)) :void
  (self index-type))

(cffi:defcfun ("_wrap_Index_setName" #.(swig-lispify "Index_setName" 'function)) :int
  (self index-type)
  (name :string))

(cffi:defcfun ("_wrap_Index_setTable" #.(swig-lispify "Index_setTable" 'function)) :int
  (self index-type)
  (name :string))

(cffi:defcfun ("_wrap_Index_addColumn" #.(swig-lispify "Index_addColumn" 'function)) :int
  (self index-type)
  (c :pointer))

(cffi:defcfun ("_wrap_Index_addColumnName" #.(swig-lispify "Index_addColumnName" 'function)) :int
  (self index-type)
  (name :string))

(cffi:defcfun ("_wrap_Index_addIndexColumn" #.(swig-lispify "Index_addIndexColumn" 'function)) :int
  (self index-type)
  (name :string))

(cffi:defcfun ("_wrap_Index_addColumnNames" #.(swig-lispify "Index_addColumnNames" 'function)) :int
  (self index-type)
  (noOfNames :unsigned-int)
  (names :pointer))

(cffi:defcfun ("_wrap_Index_addIndexColumns" #.(swig-lispify "Index_addIndexColumns" 'function)) :int
  (self index-type)
  (noOfNames :int)
  (names :pointer))

(cffi:defcfun ("_wrap_Index_setType" #.(swig-lispify "Index_setType" 'function)) :void
  (self index-type)
  (type :pointer))

(cffi:defcfun ("_wrap_Index_setLogging" #.(swig-lispify "Index_setLogging" 'function)) :void
  (self index-type)
  (enable :pointer))

(cffi:defcfun ("_wrap_Index_setStoredIndex" #.(swig-lispify "Index_setStoredIndex" 'function)) :void
  (self index-type)
  (x :pointer))

(cffi:defcfun ("_wrap_Index_getStoredIndex" #.(swig-lispify "Index_getStoredIndex" 'function)) :pointer
  (self index-type))

(cffi:defcfun ("_wrap_Index_getTemporary" #.(swig-lispify "Index_getTemporary" 'function)) :pointer
  (self index-type))

(cffi:defcfun ("_wrap_Index_setTemporary" #.(swig-lispify "Index_setTemporary" 'function)) :void
  (self index-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_new_OptimizeTableHandle" #.(swig-lispify "new_OptimizeTableHandle" 'function)) (optimize-table-handle-type :garbage-collect t))

(cffi:defcfun ("_wrap_delete_OptimizeTableHandle" #.(swig-lispify "delete_OptimizeTableHandle" 'function)) :void
  (self optimize-table-handle-type))

(cffi:defcfun ("_wrap_OptimizeTableHandle_next" #.(swig-lispify "OptimizeTableHandle_next" 'function)) :int
  (self optimize-table-handle-type))

(cffi:defcfun ("_wrap_OptimizeTableHandle_close" #.(swig-lispify "OptimizeTableHandle_close" 'function)) :int
  (self optimize-table-handle-type))

(cffi:defcfun ("_wrap_new_OptimizeIndexHandle" #.(swig-lispify "new_OptimizeIndexHandle" 'function)) (optimize-index-handle-type :garbage-collect t))

(cffi:defcfun ("_wrap_delete_OptimizeIndexHandle" #.(swig-lispify "delete_OptimizeIndexHandle" 'function)) :void
  (self optimize-index-handle-type))

(cffi:defcfun ("_wrap_OptimizeIndexHandle_next" #.(swig-lispify "OptimizeIndexHandle_next" 'function)) :int
  (self optimize-index-handle-type))

(cffi:defcfun ("_wrap_OptimizeIndexHandle_close" #.(swig-lispify "OptimizeIndexHandle_close" 'function)) :int
  (self optimize-index-handle-type))

(cffi:defcenum #.(swig-lispify "TableEvent" 'enumname)
	(#.(swig-lispify "TE_INSERT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "TE_DELETE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "TE_UPDATE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "TE_SCAN" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "TE_FIRST_NON_DATA_EVENT" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "TE_DROP" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "TE_ALTER" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "TE_CREATE" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "TE_GCP_COMPLETE" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "TE_CLUSTER_FAILURE" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "TE_STOP" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "TE_NODE_FAILURE" 'enumvalue :keyword) #.(cl:ash 1 10))
	(#.(swig-lispify "TE_SUBSCRIBE" 'enumvalue :keyword) #.(cl:ash 1 11))
	(#.(swig-lispify "TE_UNSUBSCRIBE" 'enumvalue :keyword) #.(cl:ash 1 12))
	(#.(swig-lispify "TE_EMPTY" 'enumvalue :keyword) #.(cl:ash 1 15))
	(#.(swig-lispify "TE_INCONSISTENT" 'enumvalue :keyword) #.(cl:ash 1 21))
	(#.(swig-lispify "TE_OUT_OF_MEMORY" 'enumvalue :keyword) #.(cl:ash 1 22))
	(#.(swig-lispify "TE_ALL" 'enumvalue :keyword) #.#xFFFF))

(cffi:defcenum #.(swig-lispify "_TableEvent" 'enumname)
	(#.(swig-lispify "_TE_INSERT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "_TE_DELETE" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "_TE_UPDATE" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "_TE_SCAN" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "_TE_FIRST_NON_DATA_EVENT" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "_TE_DROP" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "_TE_ALTER" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "_TE_CREATE" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "_TE_GCP_COMPLETE" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "_TE_CLUSTER_FAILURE" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "_TE_STOP" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "_TE_NODE_FAILURE" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "_TE_SUBSCRIBE" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "_TE_UNSUBSCRIBE" 'enumvalue :keyword) #.12)
	(#.(swig-lispify "_TE_NUL" 'enumvalue :keyword) #.13)
	(#.(swig-lispify "_TE_ACTIVE" 'enumvalue :keyword) #.14)
	(#.(swig-lispify "_TE_EMPTY" 'enumvalue :keyword) #.15)
	(#.(swig-lispify "_TE_INCONSISTENT" 'enumvalue :keyword) #.21)
	(#.(swig-lispify "_TE_OUT_OF_MEMORY" 'enumvalue :keyword) #.22))

(cffi:defcenum #.(swig-lispify "EventDurability" 'enumname)
	(#.(swig-lispify "ED_UNDEFINED" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "ED_PERMANENT" 'enumvalue :keyword) #.3))

(cffi:defcenum #.(swig-lispify "EventReport" 'enumname)
	(#.(swig-lispify "ER_UPDATED" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "ER_ALL" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "ER_SUBSCRIBE" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "ER_DDL" 'enumvalue :keyword) #.4))

(cffi:defcfun ("_wrap_new_Event__SWIG_0" #.(swig-lispify "new_Event/SWIG-0" 'function)) (event-type :garbage-collect t)
  (name :string))

(cffi:defcfun ("_wrap_new_Event__SWIG_1" #.(swig-lispify "new_Event/SWIG-1" 'function)) (event-type :garbage-collect t)
  (name :string)
  (table :pointer))

(cffi:defcfun ("_wrap_delete_Event" #.(swig-lispify "delete_Event" 'function)) :void
  (self event-type))

(cffi:defcfun ("_wrap_Event_setName" #.(swig-lispify "Event_setName" 'function)) :int
  (self event-type)
  (name :string))

(cffi:defcfun ("_wrap_Event_getName" #.(swig-lispify "Event_getName" 'function)) :string
  (self event-type))

(cffi:defcfun ("_wrap_Event_getTable" #.(swig-lispify "Event_getTable" 'function)) :pointer
  (self event-type))

(cffi:defcfun ("_wrap_Event_setTable__SWIG_0" #.(swig-lispify "Event_setTable/SWIG-0" 'function)) :void
  (self event-type)
  (table :pointer))

(cffi:defcfun ("_wrap_Event_setTable__SWIG_1" #.(swig-lispify "Event_setTable/SWIG-1" 'function)) :int
  (self event-type)
  (table :pointer))

(cffi:defcfun ("_wrap_Event_setTable__SWIG_2" #.(swig-lispify "Event_setTable/SWIG-2" 'function)) :int
  (self event-type)
  (tableName :string))

(cffi:defcfun ("_wrap_Event_getTableName" #.(swig-lispify "Event_getTableName" 'function)) :string
  (self event-type))

(cffi:defcfun ("_wrap_Event_addTableEvent" #.(swig-lispify "Event_addTableEvent" 'function)) :void
  (self event-type)
  (te :pointer))

(cffi:defcfun ("_wrap_Event_getTableEvent" #.(swig-lispify "Event_getTableEvent" 'function)) :pointer
  (self event-type)
  (te :pointer))

(cffi:defcfun ("_wrap_Event_setDurability" #.(swig-lispify "Event_setDurability" 'function)) :void
  (self event-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Event_getDurability" #.(swig-lispify "Event_getDurability" 'function)) :pointer
  (self event-type))

(cffi:defcfun ("_wrap_Event_setReport" #.(swig-lispify "Event_setReport" 'function)) :void
  (self event-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Event_getReport" #.(swig-lispify "Event_getReport" 'function)) :pointer
  (self event-type))

(cffi:defcfun ("_wrap_Event_addColumn" #.(swig-lispify "Event_addColumn" 'function)) :void
  (self event-type)
  (c :pointer))

(cffi:defcfun ("_wrap_Event_addEventColumn__SWIG_0" #.(swig-lispify "Event_addEventColumn/SWIG-0" 'function)) :void
  (self event-type)
  (attrId :unsigned-int))

(cffi:defcfun ("_wrap_Event_addEventColumn__SWIG_1" #.(swig-lispify "Event_addEventColumn/SWIG-1" 'function)) :void
  (self event-type)
  (columnName :string))

(cffi:defcfun ("_wrap_Event_addEventColumns" #.(swig-lispify "Event_addEventColumns" 'function)) :void
  (self event-type)
  (n :int)
  (columnNames :pointer))

(cffi:defcfun ("_wrap_Event_getNoOfEventColumns" #.(swig-lispify "Event_getNoOfEventColumns" 'function)) :int
  (self event-type))

(cffi:defcfun ("_wrap_Event_getEventColumn" #.(swig-lispify "Event_getEventColumn" 'function)) :pointer
  (self event-type)
  (no :unsigned-int))

(cffi:defcfun ("_wrap_Event_mergeEvents" #.(swig-lispify "Event_mergeEvents" 'function)) :void
  (self event-type)
  (flag :pointer))

(cffi:defcfun ("_wrap_Event_getObjectStatus" #.(swig-lispify "Event_getObjectStatus" 'function)) :pointer
  (self event-type))

(cffi:defcfun ("_wrap_Event_getObjectVersion" #.(swig-lispify "Event_getObjectVersion" 'function)) :int
  (self event-type))

(cffi:defcfun ("_wrap_Event_getObjectId" #.(swig-lispify "Event_getObjectId" 'function)) :int
  (self event-type))

(cffi:defcfun ("_wrap_Event_print" #.(swig-lispify "Event_print" 'function)) :void
  (self event-type))

(cffi:defcstruct #.(swig-lispify "RecordSpecification" 'classname)
	(#.(swig-lispify "size" 'slotname :keyword) :pointer)
	(#.(swig-lispify "column" 'slotname :keyword) :pointer)
	(#.(swig-lispify "offset" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "nullbit_byte_offset" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "nullbit_bit_in_byte" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "column_flags" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "RecordSpecification_v1" 'classname)
	(#.(swig-lispify "column" 'slotname :keyword) :pointer)
	(#.(swig-lispify "offset" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "nullbit_byte_offset" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "nullbit_bit_in_byte" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "AutoGrowSpecification" 'classname)
	(#.(swig-lispify "min_free" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "max_size" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "file_size" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "filename_pattern" 'slotname :keyword) :string))

(cffi:defcfun ("_wrap_new_LogfileGroup__SWIG_0" #.(swig-lispify "new_LogfileGroup/SWIG-0" 'function)) (logfile-group-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_LogfileGroup__SWIG_1" #.(swig-lispify "new_LogfileGroup/SWIG-1" 'function)) (logfile-group-type :garbage-collect t)
  (arg0 :pointer))

(cffi:defcfun ("_wrap_delete_LogfileGroup" #.(swig-lispify "delete_LogfileGroup" 'function)) :void
  (self logfile-group-type))

(cffi:defcfun ("_wrap_LogfileGroup_setName" #.(swig-lispify "LogfileGroup_setName" 'function)) :void
  (self logfile-group-type)
  (name :string))

(cffi:defcfun ("_wrap_LogfileGroup_getName" #.(swig-lispify "LogfileGroup_getName" 'function)) :string
  (self logfile-group-type))

(cffi:defcfun ("_wrap_LogfileGroup_setUndoBufferSize" #.(swig-lispify "LogfileGroup_setUndoBufferSize" 'function)) :void
  (self logfile-group-type)
  (sz :unsigned-int))

(cffi:defcfun ("_wrap_LogfileGroup_getUndoBufferSize" #.(swig-lispify "LogfileGroup_getUndoBufferSize" 'function)) :unsigned-int
  (self logfile-group-type))

(cffi:defcfun ("_wrap_LogfileGroup_setAutoGrowSpecification" #.(swig-lispify "LogfileGroup_setAutoGrowSpecification" 'function)) :void
  (self logfile-group-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_LogfileGroup_getAutoGrowSpecification" #.(swig-lispify "LogfileGroup_getAutoGrowSpecification" 'function)) :pointer
  (self logfile-group-type))

(cffi:defcfun ("_wrap_LogfileGroup_getUndoFreeWords" #.(swig-lispify "LogfileGroup_getUndoFreeWords" 'function)) :unsigned-long-long
  (self logfile-group-type))

(cffi:defcfun ("_wrap_LogfileGroup_getObjectStatus" #.(swig-lispify "LogfileGroup_getObjectStatus" 'function)) :pointer
  (self logfile-group-type))

(cffi:defcfun ("_wrap_LogfileGroup_getObjectVersion" #.(swig-lispify "LogfileGroup_getObjectVersion" 'function)) :int
  (self logfile-group-type))

(cffi:defcfun ("_wrap_LogfileGroup_getObjectId" #.(swig-lispify "LogfileGroup_getObjectId" 'function)) :int
  (self logfile-group-type))

(cffi:defcfun ("_wrap_new_Tablespace__SWIG_0" #.(swig-lispify "new_Tablespace/SWIG-0" 'function)) (tablespace-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_Tablespace__SWIG_1" #.(swig-lispify "new_Tablespace/SWIG-1" 'function)) (tablespace-type :garbage-collect t)
  (arg0 :pointer))

(cffi:defcfun ("_wrap_delete_Tablespace" #.(swig-lispify "delete_Tablespace" 'function)) :void
  (self tablespace-type))

(cffi:defcfun ("_wrap_Tablespace_setName" #.(swig-lispify "Tablespace_setName" 'function)) :void
  (self tablespace-type)
  (name :string))

(cffi:defcfun ("_wrap_Tablespace_getName" #.(swig-lispify "Tablespace_getName" 'function)) :string
  (self tablespace-type))

(cffi:defcfun ("_wrap_Tablespace_setExtentSize" #.(swig-lispify "Tablespace_setExtentSize" 'function)) :void
  (self tablespace-type)
  (sz :unsigned-int))

(cffi:defcfun ("_wrap_Tablespace_getExtentSize" #.(swig-lispify "Tablespace_getExtentSize" 'function)) :unsigned-int
  (self tablespace-type))

(cffi:defcfun ("_wrap_Tablespace_setAutoGrowSpecification" #.(swig-lispify "Tablespace_setAutoGrowSpecification" 'function)) :void
  (self tablespace-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Tablespace_getAutoGrowSpecification" #.(swig-lispify "Tablespace_getAutoGrowSpecification" 'function)) :pointer
  (self tablespace-type))

(cffi:defcfun ("_wrap_Tablespace_setDefaultLogfileGroup__SWIG_0" #.(swig-lispify "Tablespace_setDefaultLogfileGroup/SWIG-0" 'function)) :void
  (self tablespace-type)
  (name :string))

(cffi:defcfun ("_wrap_Tablespace_setDefaultLogfileGroup__SWIG_1" #.(swig-lispify "Tablespace_setDefaultLogfileGroup/SWIG-1" 'function)) :void
  (self tablespace-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Tablespace_getDefaultLogfileGroup" #.(swig-lispify "Tablespace_getDefaultLogfileGroup" 'function)) :string
  (self tablespace-type))

(cffi:defcfun ("_wrap_Tablespace_getDefaultLogfileGroupId" #.(swig-lispify "Tablespace_getDefaultLogfileGroupId" 'function)) :unsigned-int
  (self tablespace-type))

(cffi:defcfun ("_wrap_Tablespace_getObjectStatus" #.(swig-lispify "Tablespace_getObjectStatus" 'function)) :pointer
  (self tablespace-type))

(cffi:defcfun ("_wrap_Tablespace_getObjectVersion" #.(swig-lispify "Tablespace_getObjectVersion" 'function)) :int
  (self tablespace-type))

(cffi:defcfun ("_wrap_Tablespace_getObjectId" #.(swig-lispify "Tablespace_getObjectId" 'function)) :int
  (self tablespace-type))

(cffi:defcfun ("_wrap_new_Datafile__SWIG_0" #.(swig-lispify "new_Datafile/SWIG-0" 'function)) (datafile-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_Datafile__SWIG_1" #.(swig-lispify "new_Datafile/SWIG-1" 'function)) (datafile-type :garbage-collect t)
  (arg0 :pointer))

(cffi:defcfun ("_wrap_delete_Datafile" #.(swig-lispify "delete_Datafile" 'function)) :void
  (self datafile-type))

(cffi:defcfun ("_wrap_Datafile_setPath" #.(swig-lispify "Datafile_setPath" 'function)) :void
  (self datafile-type)
  (name :string))

(cffi:defcfun ("_wrap_Datafile_getPath" #.(swig-lispify "Datafile_getPath" 'function)) :string
  (self datafile-type))

(cffi:defcfun ("_wrap_Datafile_setSize" #.(swig-lispify "Datafile_setSize" 'function)) :void
  (self datafile-type)
  (arg1 :unsigned-long-long))

(cffi:defcfun ("_wrap_Datafile_getSize" #.(swig-lispify "Datafile_getSize" 'function)) :unsigned-long-long
  (self datafile-type))

(cffi:defcfun ("_wrap_Datafile_getFree" #.(swig-lispify "Datafile_getFree" 'function)) :unsigned-long-long
  (self datafile-type))

(cffi:defcfun ("_wrap_Datafile_setTablespace__SWIG_0" #.(swig-lispify "Datafile_setTablespace/SWIG-0" 'function)) :int
  (self datafile-type)
  (name :string))

(cffi:defcfun ("_wrap_Datafile_setTablespace__SWIG_1" #.(swig-lispify "Datafile_setTablespace/SWIG-1" 'function)) :int
  (self datafile-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Datafile_getTablespace" #.(swig-lispify "Datafile_getTablespace" 'function)) :string
  (self datafile-type))

(cffi:defcfun ("_wrap_Datafile_getTablespaceId" #.(swig-lispify "Datafile_getTablespaceId" 'function)) :void
  (self datafile-type)
  (dst :pointer))

(cffi:defcfun ("_wrap_Datafile_getObjectStatus" #.(swig-lispify "Datafile_getObjectStatus" 'function)) :pointer
  (self datafile-type))

(cffi:defcfun ("_wrap_Datafile_getObjectVersion" #.(swig-lispify "Datafile_getObjectVersion" 'function)) :int
  (self datafile-type))

(cffi:defcfun ("_wrap_Datafile_getObjectId" #.(swig-lispify "Datafile_getObjectId" 'function)) :int
  (self datafile-type))

(cffi:defcfun ("_wrap_new_Undofile__SWIG_0" #.(swig-lispify "new_Undofile/SWIG-0" 'function)) (undofile-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_Undofile__SWIG_1" #.(swig-lispify "new_Undofile/SWIG-1" 'function)) (undofile-type :garbage-collect t)
  (arg0 :pointer))

(cffi:defcfun ("_wrap_delete_Undofile" #.(swig-lispify "delete_Undofile" 'function)) :void
  (self undofile-type))

(cffi:defcfun ("_wrap_Undofile_setPath" #.(swig-lispify "Undofile_setPath" 'function)) :void
  (self undofile-type)
  (path :string))

(cffi:defcfun ("_wrap_Undofile_getPath" #.(swig-lispify "Undofile_getPath" 'function)) :string
  (self undofile-type))

(cffi:defcfun ("_wrap_Undofile_setSize" #.(swig-lispify "Undofile_setSize" 'function)) :void
  (self undofile-type)
  (arg1 :unsigned-long-long))

(cffi:defcfun ("_wrap_Undofile_getSize" #.(swig-lispify "Undofile_getSize" 'function)) :unsigned-long-long
  (self undofile-type))

(cffi:defcfun ("_wrap_Undofile_setLogfileGroup__SWIG_0" #.(swig-lispify "Undofile_setLogfileGroup/SWIG-0" 'function)) :void
  (self undofile-type)
  (name :string))

(cffi:defcfun ("_wrap_Undofile_setLogfileGroup__SWIG_1" #.(swig-lispify "Undofile_setLogfileGroup/SWIG-1" 'function)) :void
  (self undofile-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Undofile_getLogfileGroup" #.(swig-lispify "Undofile_getLogfileGroup" 'function)) :string
  (self undofile-type))

(cffi:defcfun ("_wrap_Undofile_getLogfileGroupId" #.(swig-lispify "Undofile_getLogfileGroupId" 'function)) :void
  (self undofile-type)
  (dst :pointer))

(cffi:defcfun ("_wrap_Undofile_getObjectStatus" #.(swig-lispify "Undofile_getObjectStatus" 'function)) :pointer
  (self undofile-type))

(cffi:defcfun ("_wrap_Undofile_getObjectVersion" #.(swig-lispify "Undofile_getObjectVersion" 'function)) :int
  (self undofile-type))

(cffi:defcfun ("_wrap_Undofile_getObjectId" #.(swig-lispify "Undofile_getObjectId" 'function)) :int
  (self undofile-type))

(cffi:defcfun ("_wrap_new_HashMap__SWIG_0" #.(swig-lispify "new_HashMap/SWIG-0" 'function)) (hash-map-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_HashMap__SWIG_1" #.(swig-lispify "new_HashMap/SWIG-1" 'function)) (hash-map-type :garbage-collect t)
  (arg0 :pointer))

(cffi:defcfun ("_wrap_delete_HashMap" #.(swig-lispify "delete_HashMap" 'function)) :void
  (self hash-map-type))

(cffi:defcfun ("_wrap_HashMap_setName" #.(swig-lispify "HashMap_setName" 'function)) :void
  (self hash-map-type)
  (arg1 :string))

(cffi:defcfun ("_wrap_HashMap_getName" #.(swig-lispify "HashMap_getName" 'function)) :string
  (self hash-map-type))

(cffi:defcfun ("_wrap_HashMap_setMap" #.(swig-lispify "HashMap_setMap" 'function)) :void
  (self hash-map-type)
  (values :pointer)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_HashMap_getMapLen" #.(swig-lispify "HashMap_getMapLen" 'function)) :unsigned-int
  (self hash-map-type))

(cffi:defcfun ("_wrap_HashMap_getMapValues" #.(swig-lispify "HashMap_getMapValues" 'function)) :int
  (self hash-map-type)
  (dst :pointer)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_HashMap_equal" #.(swig-lispify "HashMap_equal" 'function)) :pointer
  (self hash-map-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_HashMap_getObjectStatus" #.(swig-lispify "HashMap_getObjectStatus" 'function)) :pointer
  (self hash-map-type))

(cffi:defcfun ("_wrap_HashMap_getObjectVersion" #.(swig-lispify "HashMap_getObjectVersion" 'function)) :int
  (self hash-map-type))

(cffi:defcfun ("_wrap_HashMap_getObjectId" #.(swig-lispify "HashMap_getObjectId" 'function)) :int
  (self hash-map-type))

(cffi:defcfun ("_wrap_new_ForeignKey__SWIG_0" #.(swig-lispify "new_ForeignKey/SWIG-0" 'function)) (foreign-key-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_ForeignKey__SWIG_1" #.(swig-lispify "new_ForeignKey/SWIG-1" 'function)) (foreign-key-type :garbage-collect t)
  (arg0 :pointer))

(cffi:defcfun ("_wrap_delete_ForeignKey" #.(swig-lispify "delete_ForeignKey" 'function)) :void
  (self foreign-key-type))

(cffi:defcenum #.(swig-lispify "FkAction" 'enumname)
	(#.(swig-lispify "NoAction" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "Restrict" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "Cascade" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "SetNull" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "SetDefault" 'enumvalue :keyword) #.4))

(cffi:defcfun ("_wrap_ForeignKey_getName" #.(swig-lispify "ForeignKey_getName" 'function)) :string
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getParentTable" #.(swig-lispify "ForeignKey_getParentTable" 'function)) :string
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getChildTable" #.(swig-lispify "ForeignKey_getChildTable" 'function)) :string
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getParentColumnCount" #.(swig-lispify "ForeignKey_getParentColumnCount" 'function)) :unsigned-int
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getChildColumnCount" #.(swig-lispify "ForeignKey_getChildColumnCount" 'function)) :unsigned-int
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getParentColumnNo" #.(swig-lispify "ForeignKey_getParentColumnNo" 'function)) :int
  (self foreign-key-type)
  (no :unsigned-int))

(cffi:defcfun ("_wrap_ForeignKey_getChildColumnNo" #.(swig-lispify "ForeignKey_getChildColumnNo" 'function)) :int
  (self foreign-key-type)
  (no :unsigned-int))

(cffi:defcfun ("_wrap_ForeignKey_getParentIndex" #.(swig-lispify "ForeignKey_getParentIndex" 'function)) :string
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getChildIndex" #.(swig-lispify "ForeignKey_getChildIndex" 'function)) :string
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getOnUpdateAction" #.(swig-lispify "ForeignKey_getOnUpdateAction" 'function)) :pointer
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getOnDeleteAction" #.(swig-lispify "ForeignKey_getOnDeleteAction" 'function)) :pointer
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_setName" #.(swig-lispify "ForeignKey_setName" 'function)) :void
  (self foreign-key-type)
  (arg1 :string))

(cffi:defcfun ("_wrap_ForeignKey_setParent__SWIG_0" #.(swig-lispify "ForeignKey_setParent/SWIG-0" 'function)) :void
  (self foreign-key-type)
  (arg1 :pointer)
  (index :pointer)
  (cols :pointer))

(cffi:defcfun ("_wrap_ForeignKey_setParent__SWIG_1" #.(swig-lispify "ForeignKey_setParent/SWIG-1" 'function)) :void
  (self foreign-key-type)
  (arg1 :pointer)
  (index :pointer))

(cffi:defcfun ("_wrap_ForeignKey_setParent__SWIG_2" #.(swig-lispify "ForeignKey_setParent/SWIG-2" 'function)) :void
  (self foreign-key-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_ForeignKey_setChild__SWIG_0" #.(swig-lispify "ForeignKey_setChild/SWIG-0" 'function)) :void
  (self foreign-key-type)
  (arg1 :pointer)
  (index :pointer)
  (cols :pointer))

(cffi:defcfun ("_wrap_ForeignKey_setChild__SWIG_1" #.(swig-lispify "ForeignKey_setChild/SWIG-1" 'function)) :void
  (self foreign-key-type)
  (arg1 :pointer)
  (index :pointer))

(cffi:defcfun ("_wrap_ForeignKey_setChild__SWIG_2" #.(swig-lispify "ForeignKey_setChild/SWIG-2" 'function)) :void
  (self foreign-key-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_ForeignKey_setOnUpdateAction" #.(swig-lispify "ForeignKey_setOnUpdateAction" 'function)) :void
  (self foreign-key-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_ForeignKey_setOnDeleteAction" #.(swig-lispify "ForeignKey_setOnDeleteAction" 'function)) :void
  (self foreign-key-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_ForeignKey_getObjectStatus" #.(swig-lispify "ForeignKey_getObjectStatus" 'function)) :pointer
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getObjectId" #.(swig-lispify "ForeignKey_getObjectId" 'function)) :int
  (self foreign-key-type))

(cffi:defcfun ("_wrap_ForeignKey_getObjectVersion" #.(swig-lispify "ForeignKey_getObjectVersion" 'function)) :int
  (self foreign-key-type))

(cffi:defcfun ("_wrap_Dictionary_listObjects__SWIG_0" #.(swig-lispify "Dictionary_listObjects/SWIG-0" 'function)) :int
  (self :pointer)
  (list :pointer)
  (type :pointer))

(cffi:defcfun ("_wrap_Dictionary_listObjects__SWIG_1" #.(swig-lispify "Dictionary_listObjects/SWIG-1" 'function)) :int
  (self :pointer)
  (list :pointer))

(cffi:defcfun ("_wrap_Dictionary_listObjects__SWIG_2" #.(swig-lispify "Dictionary_listObjects/SWIG-2" 'function)) :int
  (self :pointer)
  (list :pointer)
  (type :pointer))

(cffi:defcfun ("_wrap_Dictionary_listObjects__SWIG_3" #.(swig-lispify "Dictionary_listObjects/SWIG-3" 'function)) :int
  (self :pointer)
  (list :pointer))

(cffi:defcfun ("_wrap_Dictionary_listObjects__SWIG_4" #.(swig-lispify "Dictionary_listObjects/SWIG-4" 'function)) :int
  (self :pointer)
  (list :pointer)
  (type :pointer)
  (fullyQualified :pointer))

(cffi:defcfun ("_wrap_Dictionary_getNdbError" #.(swig-lispify "Dictionary_getNdbError" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_Dictionary_getWarningFlags" #.(swig-lispify "Dictionary_getWarningFlags" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_Dictionary_getTable__SWIG_0" #.(swig-lispify "Dictionary_getTable/SWIG-0" 'function)) :pointer
  (self :pointer)
  (name :string))

(cffi:defcfun ("_wrap_Dictionary_getBlobTable__SWIG_0" #.(swig-lispify "Dictionary_getBlobTable/SWIG-0" 'function)) :pointer
  (self :pointer)
  (arg1 :pointer)
  (col_name :string))

(cffi:defcfun ("_wrap_Dictionary_getBlobTable__SWIG_1" #.(swig-lispify "Dictionary_getBlobTable/SWIG-1" 'function)) :pointer
  (self :pointer)
  (arg1 :pointer)
  (col_no :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_putTable" #.(swig-lispify "Dictionary_putTable" 'function)) :void
  (self :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_getIndex__SWIG_0" #.(swig-lispify "Dictionary_getIndex/SWIG-0" 'function)) :pointer
  (self :pointer)
  (indexName :string)
  (tableName :string))

(cffi:defcfun ("_wrap_Dictionary_getIndex__SWIG_1" #.(swig-lispify "Dictionary_getIndex/SWIG-1" 'function)) :pointer
  (self :pointer)
  (indexName :string)
  (base :pointer))

(cffi:defcfun ("_wrap_Dictionary_listIndexes__SWIG_0" #.(swig-lispify "Dictionary_listIndexes/SWIG-0" 'function)) :int
  (self :pointer)
  (list :pointer)
  (tableName :string))

(cffi:defcfun ("_wrap_Dictionary_listIndexes__SWIG_1" #.(swig-lispify "Dictionary_listIndexes/SWIG-1" 'function)) :int
  (self :pointer)
  (list :pointer)
  (tableName :string))

(cffi:defcfun ("_wrap_Dictionary_listIndexes__SWIG_2" #.(swig-lispify "Dictionary_listIndexes/SWIG-2" 'function)) :int
  (self :pointer)
  (list :pointer)
  (tableName :string)
  (fullyQualified :pointer))

(cffi:defcfun ("_wrap_Dictionary_listIndexes__SWIG_3" #.(swig-lispify "Dictionary_listIndexes/SWIG-3" 'function)) :int
  (self :pointer)
  (list :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_listDependentObjects" #.(swig-lispify "Dictionary_listDependentObjects" 'function)) :int
  (self :pointer)
  (list :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_createEvent" #.(swig-lispify "Dictionary_createEvent" 'function)) :int
  (self :pointer)
  (event :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropEvent__SWIG_0" #.(swig-lispify "Dictionary_dropEvent/SWIG-0" 'function)) :int
  (self :pointer)
  (eventName :string)
  (force :int))

(cffi:defcfun ("_wrap_Dictionary_dropEvent__SWIG_1" #.(swig-lispify "Dictionary_dropEvent/SWIG-1" 'function)) :int
  (self :pointer)
  (eventName :string))

(cffi:defcfun ("_wrap_Dictionary_getEvent" #.(swig-lispify "Dictionary_getEvent" 'function)) :pointer
  (self :pointer)
  (eventName :string))

(cffi:defcfun ("_wrap_Dictionary_listEvents__SWIG_0" #.(swig-lispify "Dictionary_listEvents/SWIG-0" 'function)) :int
  (self :pointer)
  (list :pointer))

(cffi:defcfun ("_wrap_Dictionary_listEvents__SWIG_1" #.(swig-lispify "Dictionary_listEvents/SWIG-1" 'function)) :int
  (self :pointer)
  (list :pointer))

(cffi:defcfun ("_wrap_Dictionary_createTable__SWIG_0" #.(swig-lispify "Dictionary_createTable/SWIG-0" 'function)) :int
  (self :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_createTable__SWIG_1" #.(swig-lispify "Dictionary_createTable/SWIG-1" 'function)) :int
  (self :pointer)
  (table :pointer)
  (objid :pointer))

(cffi:defcfun ("_wrap_Dictionary_optimizeTable" #.(swig-lispify "Dictionary_optimizeTable" 'function)) :int
  (self :pointer)
  (t_arg1 :pointer)
  (h :pointer))

(cffi:defcfun ("_wrap_Dictionary_optimizeIndex" #.(swig-lispify "Dictionary_optimizeIndex" 'function)) :int
  (self :pointer)
  (ind :pointer)
  (h :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropTable__SWIG_0" #.(swig-lispify "Dictionary_dropTable/SWIG-0" 'function)) :int
  (self :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropTable__SWIG_1" #.(swig-lispify "Dictionary_dropTable/SWIG-1" 'function)) :int
  (self :pointer)
  (name :string))

(cffi:defcfun ("_wrap_Dictionary_supportedAlterTable" #.(swig-lispify "Dictionary_supportedAlterTable" 'function)) :pointer
  (self :pointer)
  (f :pointer)
  (t_arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_alterTable" #.(swig-lispify "Dictionary_alterTable" 'function)) :int
  (self :pointer)
  (f :pointer)
  (t_arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_invalidateTable__SWIG_0" #.(swig-lispify "Dictionary_invalidateTable/SWIG-0" 'function)) :void
  (self :pointer)
  (name :string))

(cffi:defcfun ("_wrap_Dictionary_removeCachedTable__SWIG_0" #.(swig-lispify "Dictionary_removeCachedTable/SWIG-0" 'function)) :void
  (self :pointer)
  (table :string))

(cffi:defcfun ("_wrap_Dictionary_removeCachedIndex__SWIG_0" #.(swig-lispify "Dictionary_removeCachedIndex/SWIG-0" 'function)) :void
  (self :pointer)
  (index :string)
  (table :string))

(cffi:defcfun ("_wrap_Dictionary_invalidateIndex__SWIG_0" #.(swig-lispify "Dictionary_invalidateIndex/SWIG-0" 'function)) :void
  (self :pointer)
  (indexName :string)
  (tableName :string))

(cffi:defcfun ("_wrap_Dictionary_createIndex__SWIG_0" #.(swig-lispify "Dictionary_createIndex/SWIG-0" 'function)) :int
  (self :pointer)
  (index :pointer)
  (offline :pointer))

(cffi:defcfun ("_wrap_Dictionary_createIndex__SWIG_1" #.(swig-lispify "Dictionary_createIndex/SWIG-1" 'function)) :int
  (self :pointer)
  (index :pointer))

(cffi:defcfun ("_wrap_Dictionary_createIndex__SWIG_2" #.(swig-lispify "Dictionary_createIndex/SWIG-2" 'function)) :int
  (self :pointer)
  (index :pointer)
  (table :pointer)
  (offline :pointer))

(cffi:defcfun ("_wrap_Dictionary_createIndex__SWIG_3" #.(swig-lispify "Dictionary_createIndex/SWIG-3" 'function)) :int
  (self :pointer)
  (index :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropIndex" #.(swig-lispify "Dictionary_dropIndex" 'function)) :int
  (self :pointer)
  (indexName :string)
  (tableName :string))

(cffi:defcfun ("_wrap_Dictionary_updateIndexStat__SWIG_0" #.(swig-lispify "Dictionary_updateIndexStat/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_updateIndexStat__SWIG_1" #.(swig-lispify "Dictionary_updateIndexStat/SWIG-1" 'function)) :int
  (self :pointer)
  (indexId :unsigned-int)
  (indexVersion :unsigned-int)
  (tableId :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_deleteIndexStat__SWIG_0" #.(swig-lispify "Dictionary_deleteIndexStat/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_deleteIndexStat__SWIG_1" #.(swig-lispify "Dictionary_deleteIndexStat/SWIG-1" 'function)) :int
  (self :pointer)
  (indexId :unsigned-int)
  (indexVersion :unsigned-int)
  (tableId :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_removeCachedTable__SWIG_1" #.(swig-lispify "Dictionary_removeCachedTable/SWIG-1" 'function)) :void
  (self :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_removeCachedIndex__SWIG_1" #.(swig-lispify "Dictionary_removeCachedIndex/SWIG-1" 'function)) :void
  (self :pointer)
  (index :pointer))

(cffi:defcfun ("_wrap_Dictionary_invalidateTable__SWIG_1" #.(swig-lispify "Dictionary_invalidateTable/SWIG-1" 'function)) :void
  (self :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_invalidateIndex__SWIG_1" #.(swig-lispify "Dictionary_invalidateIndex/SWIG-1" 'function)) :void
  (self :pointer)
  (index :pointer))

(cffi:defcfun ("_wrap_Dictionary_forceGCPWait__SWIG_0" #.(swig-lispify "Dictionary_forceGCPWait/SWIG-0" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_Dictionary_forceGCPWait__SWIG_1" #.(swig-lispify "Dictionary_forceGCPWait/SWIG-1" 'function)) :int
  (self :pointer)
  (type :int))

(cffi:defcfun ("_wrap_Dictionary_getRestartGCI" #.(swig-lispify "Dictionary_getRestartGCI" 'function)) :int
  (self :pointer)
  (gci :pointer))

(defanonenum 
	(#.(swig-lispify "WarnUndobufferRoundUp" 'enumvalue) #.#x1)
	(#.(swig-lispify "WarnUndofileRoundDown" 'enumvalue) #.#x2)
	(#.(swig-lispify "WarnExtentRoundUp" 'enumvalue) #.#x4)
	(#.(swig-lispify "WarnDatafileRoundDown" 'enumvalue) #.#x8)
	(#.(swig-lispify "WarnDatafileRoundUp" 'enumvalue) #.#x10))

(cffi:defcfun ("_wrap_Dictionary_createLogfileGroup__SWIG_0" #.(swig-lispify "Dictionary_createLogfileGroup/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_createLogfileGroup__SWIG_1" #.(swig-lispify "Dictionary_createLogfileGroup/SWIG-1" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropLogfileGroup" #.(swig-lispify "Dictionary_dropLogfileGroup" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_getLogfileGroup" #.(swig-lispify "Dictionary_getLogfileGroup" 'function)) :pointer
  (self :pointer)
  (name :string))

(cffi:defcfun ("_wrap_Dictionary_createTablespace__SWIG_0" #.(swig-lispify "Dictionary_createTablespace/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_createTablespace__SWIG_1" #.(swig-lispify "Dictionary_createTablespace/SWIG-1" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropTablespace" #.(swig-lispify "Dictionary_dropTablespace" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_getTablespace__SWIG_0" #.(swig-lispify "Dictionary_getTablespace/SWIG-0" 'function)) :pointer
  (self :pointer)
  (name :string))

(cffi:defcfun ("_wrap_Dictionary_getTablespace__SWIG_1" #.(swig-lispify "Dictionary_getTablespace/SWIG-1" 'function)) :pointer
  (self :pointer)
  (tablespaceId :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_createDatafile__SWIG_0" #.(swig-lispify "Dictionary_createDatafile/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (overwrite_existing :pointer)
  (arg3 :pointer))

(cffi:defcfun ("_wrap_Dictionary_createDatafile__SWIG_1" #.(swig-lispify "Dictionary_createDatafile/SWIG-1" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (overwrite_existing :pointer))

(cffi:defcfun ("_wrap_Dictionary_createDatafile__SWIG_2" #.(swig-lispify "Dictionary_createDatafile/SWIG-2" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropDatafile" #.(swig-lispify "Dictionary_dropDatafile" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_getDatafile" #.(swig-lispify "Dictionary_getDatafile" 'function)) :pointer
  (self :pointer)
  (node :unsigned-int)
  (path :string))

(cffi:defcfun ("_wrap_Dictionary_createUndofile__SWIG_0" #.(swig-lispify "Dictionary_createUndofile/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (overwrite_existing :pointer)
  (arg3 :pointer))

(cffi:defcfun ("_wrap_Dictionary_createUndofile__SWIG_1" #.(swig-lispify "Dictionary_createUndofile/SWIG-1" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (overwrite_existing :pointer))

(cffi:defcfun ("_wrap_Dictionary_createUndofile__SWIG_2" #.(swig-lispify "Dictionary_createUndofile/SWIG-2" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropUndofile" #.(swig-lispify "Dictionary_dropUndofile" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_getUndofile" #.(swig-lispify "Dictionary_getUndofile" 'function)) :pointer
  (self :pointer)
  (node :unsigned-int)
  (path :string))

(cffi:defcfun ("_wrap_Dictionary_createHashMap__SWIG_0" #.(swig-lispify "Dictionary_createHashMap/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_createHashMap__SWIG_1" #.(swig-lispify "Dictionary_createHashMap/SWIG-1" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_getHashMap__SWIG_0" #.(swig-lispify "Dictionary_getHashMap/SWIG-0" 'function)) :int
  (self :pointer)
  (dst :pointer)
  (name :string))

(cffi:defcfun ("_wrap_Dictionary_getHashMap__SWIG_1" #.(swig-lispify "Dictionary_getHashMap/SWIG-1" 'function)) :int
  (self :pointer)
  (dst :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_Dictionary_getDefaultHashMap__SWIG_0" #.(swig-lispify "Dictionary_getDefaultHashMap/SWIG-0" 'function)) :int
  (self :pointer)
  (dst :pointer)
  (partitionCount :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_getDefaultHashMap__SWIG_1" #.(swig-lispify "Dictionary_getDefaultHashMap/SWIG-1" 'function)) :int
  (self :pointer)
  (dst :pointer)
  (buckets :unsigned-int)
  (partitionCount :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_initDefaultHashMap__SWIG_0" #.(swig-lispify "Dictionary_initDefaultHashMap/SWIG-0" 'function)) :int
  (self :pointer)
  (dst :pointer)
  (partitionCount :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_initDefaultHashMap__SWIG_1" #.(swig-lispify "Dictionary_initDefaultHashMap/SWIG-1" 'function)) :int
  (self :pointer)
  (dst :pointer)
  (buckets :unsigned-int)
  (partitionCount :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_prepareHashMap__SWIG_0" #.(swig-lispify "Dictionary_prepareHashMap/SWIG-0" 'function)) :int
  (self :pointer)
  (oldTable :pointer)
  (newTable :pointer))

(cffi:defcfun ("_wrap_Dictionary_prepareHashMap__SWIG_1" #.(swig-lispify "Dictionary_prepareHashMap/SWIG-1" 'function)) :int
  (self :pointer)
  (oldTable :pointer)
  (newTable :pointer)
  (buckets :unsigned-int))

(cffi:defcenum #.(swig-lispify "CreateFKFlags" 'enumname)
	(#.(swig-lispify "CreateFK_NoVerify" 'enumvalue :keyword) #.1))

(cffi:defcfun ("_wrap_Dictionary_createForeignKey__SWIG_0" #.(swig-lispify "Dictionary_createForeignKey/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (arg2 :pointer)
  (flags :int))

(cffi:defcfun ("_wrap_Dictionary_createForeignKey__SWIG_1" #.(swig-lispify "Dictionary_createForeignKey/SWIG-1" 'function)) :int
  (self :pointer)
  (arg1 :pointer)
  (arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_createForeignKey__SWIG_2" #.(swig-lispify "Dictionary_createForeignKey/SWIG-2" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_getForeignKey" #.(swig-lispify "Dictionary_getForeignKey" 'function)) :int
  (self :pointer)
  (dst :pointer)
  (name :string))

(cffi:defcfun ("_wrap_Dictionary_dropForeignKey" #.(swig-lispify "Dictionary_dropForeignKey" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Dictionary_beginSchemaTrans" #.(swig-lispify "Dictionary_beginSchemaTrans" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_Dictionary_endSchemaTrans__SWIG_0" #.(swig-lispify "Dictionary_endSchemaTrans/SWIG-0" 'function)) :int
  (self :pointer)
  (flags :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_endSchemaTrans__SWIG_1" #.(swig-lispify "Dictionary_endSchemaTrans/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcenum #.(swig-lispify "SchemaTransFlag" 'enumname)
	(#.(swig-lispify "SchemaTransAbort" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "SchemaTransBackground" 'enumvalue :keyword) #.2))

(cffi:defcfun ("_wrap_Dictionary_hasSchemaTrans" #.(swig-lispify "Dictionary_hasSchemaTrans" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_Dictionary_getTable__SWIG_1" #.(swig-lispify "Dictionary_getTable/SWIG-1" 'function)) :pointer
  (self :pointer)
  (name :string)
  (data :pointer))

(cffi:defcfun ("_wrap_Dictionary_set_local_table_data_size" #.(swig-lispify "Dictionary_set_local_table_data_size" 'function)) :void
  (self :pointer)
  (sz :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_getIndexGlobal__SWIG_0" #.(swig-lispify "Dictionary_getIndexGlobal/SWIG-0" 'function)) :pointer
  (self :pointer)
  (indexName :string)
  (ndbtab :pointer))

(cffi:defcfun ("_wrap_Dictionary_getIndexGlobal__SWIG_1" #.(swig-lispify "Dictionary_getIndexGlobal/SWIG-1" 'function)) :pointer
  (self :pointer)
  (indexName :string)
  (tableName :string))

(cffi:defcfun ("_wrap_Dictionary_getTableGlobal" #.(swig-lispify "Dictionary_getTableGlobal" 'function)) :pointer
  (self :pointer)
  (tableName :string))

(cffi:defcfun ("_wrap_Dictionary_alterTableGlobal" #.(swig-lispify "Dictionary_alterTableGlobal" 'function)) :int
  (self :pointer)
  (f :pointer)
  (t_arg2 :pointer))

(cffi:defcfun ("_wrap_Dictionary_dropTableGlobal__SWIG_0" #.(swig-lispify "Dictionary_dropTableGlobal/SWIG-0" 'function)) :int
  (self :pointer)
  (ndbtab :pointer))

(defanonenum 
	(#.(swig-lispify "DropTableCascadeConstraints" 'enumvalue) #.#x1)
	(#.(swig-lispify "DropTableCascadeConstraintsDropDB" 'enumvalue) #.#x2))

(cffi:defcfun ("_wrap_Dictionary_dropTableGlobal__SWIG_1" #.(swig-lispify "Dictionary_dropTableGlobal/SWIG-1" 'function)) :int
  (self :pointer)
  (ndbtab :pointer)
  (flags :int))

(cffi:defcfun ("_wrap_Dictionary_dropIndexGlobal" #.(swig-lispify "Dictionary_dropIndexGlobal" 'function)) :int
  (self :pointer)
  (index :pointer))

(cffi:defcfun ("_wrap_Dictionary_removeIndexGlobal" #.(swig-lispify "Dictionary_removeIndexGlobal" 'function)) :int
  (self :pointer)
  (ndbidx :pointer)
  (invalidate :int))

(cffi:defcfun ("_wrap_Dictionary_removeTableGlobal" #.(swig-lispify "Dictionary_removeTableGlobal" 'function)) :int
  (self :pointer)
  (ndbtab :pointer)
  (invalidate :int))

(cffi:defcfun ("_wrap_Dictionary_invalidateDbGlobal" #.(swig-lispify "Dictionary_invalidateDbGlobal" 'function)) :void
  (self :pointer)
  (dbname :string))

(cffi:defcfun ("_wrap_Dictionary_createRecord__SWIG_0" #.(swig-lispify "Dictionary_createRecord/SWIG-0" 'function)) :pointer
  (self :pointer)
  (table :pointer)
  (recSpec :pointer)
  (length :unsigned-int)
  (elemSize :unsigned-int)
  (flags :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_createRecord__SWIG_1" #.(swig-lispify "Dictionary_createRecord/SWIG-1" 'function)) :pointer
  (self :pointer)
  (table :pointer)
  (recSpec :pointer)
  (length :unsigned-int)
  (elemSize :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_createRecord__SWIG_2" #.(swig-lispify "Dictionary_createRecord/SWIG-2" 'function)) :pointer
  (self :pointer)
  (index :pointer)
  (table :pointer)
  (recSpec :pointer)
  (length :unsigned-int)
  (elemSize :unsigned-int)
  (flags :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_createRecord__SWIG_3" #.(swig-lispify "Dictionary_createRecord/SWIG-3" 'function)) :pointer
  (self :pointer)
  (index :pointer)
  (table :pointer)
  (recSpec :pointer)
  (length :unsigned-int)
  (elemSize :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_createRecord__SWIG_4" #.(swig-lispify "Dictionary_createRecord/SWIG-4" 'function)) :pointer
  (self :pointer)
  (index :pointer)
  (recSpec :pointer)
  (length :unsigned-int)
  (elemSize :unsigned-int)
  (flags :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_createRecord__SWIG_5" #.(swig-lispify "Dictionary_createRecord/SWIG-5" 'function)) :pointer
  (self :pointer)
  (index :pointer)
  (recSpec :pointer)
  (length :unsigned-int)
  (elemSize :unsigned-int))

(cffi:defcfun ("_wrap_Dictionary_releaseRecord" #.(swig-lispify "Dictionary_releaseRecord" 'function)) :void
  (self :pointer)
  (rec :pointer))

(cffi:defcfun ("_wrap_Dictionary_print__SWIG_0" #.(swig-lispify "Dictionary_print/SWIG-0" 'function)) :void
  (self :pointer)
  (out :pointer)
  (idx :pointer))

(cffi:defcfun ("_wrap_Dictionary_print__SWIG_1" #.(swig-lispify "Dictionary_print/SWIG-1" 'function)) :void
  (self :pointer)
  (out :pointer)
  (tab :pointer))

(cffi:defcfun ("_wrap_new_NdbDataPrintFormat" #.(swig-lispify "new_NdbDataPrintFormat" 'function)) (ndb-data-print-format-type :garbage-collect t))

(cffi:defcfun ("_wrap_delete_NdbDataPrintFormat" #.(swig-lispify "delete_NdbDataPrintFormat" 'function)) :void
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_lines_terminated_by_set" #.(swig-lispify "NdbDataPrintFormat_lines_terminated_by_set" 'function)) :void
  (self ndb-data-print-format-type)
  (lines_terminated_by :string))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_lines_terminated_by_get" #.(swig-lispify "NdbDataPrintFormat_lines_terminated_by_get" 'function)) :string
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_fields_terminated_by_set" #.(swig-lispify "NdbDataPrintFormat_fields_terminated_by_set" 'function)) :void
  (self ndb-data-print-format-type)
  (fields_terminated_by :string))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_fields_terminated_by_get" #.(swig-lispify "NdbDataPrintFormat_fields_terminated_by_get" 'function)) :string
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_start_array_enclosure_set" #.(swig-lispify "NdbDataPrintFormat_start_array_enclosure_set" 'function)) :void
  (self ndb-data-print-format-type)
  (start_array_enclosure :string))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_start_array_enclosure_get" #.(swig-lispify "NdbDataPrintFormat_start_array_enclosure_get" 'function)) :string
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_end_array_enclosure_set" #.(swig-lispify "NdbDataPrintFormat_end_array_enclosure_set" 'function)) :void
  (self ndb-data-print-format-type)
  (end_array_enclosure :string))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_end_array_enclosure_get" #.(swig-lispify "NdbDataPrintFormat_end_array_enclosure_get" 'function)) :string
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_fields_enclosed_by_set" #.(swig-lispify "NdbDataPrintFormat_fields_enclosed_by_set" 'function)) :void
  (self ndb-data-print-format-type)
  (fields_enclosed_by :string))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_fields_enclosed_by_get" #.(swig-lispify "NdbDataPrintFormat_fields_enclosed_by_get" 'function)) :string
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_fields_optionally_enclosed_by_set" #.(swig-lispify "NdbDataPrintFormat_fields_optionally_enclosed_by_set" 'function)) :void
  (self ndb-data-print-format-type)
  (fields_optionally_enclosed_by :string))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_fields_optionally_enclosed_by_get" #.(swig-lispify "NdbDataPrintFormat_fields_optionally_enclosed_by_get" 'function)) :string
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_hex_prefix_set" #.(swig-lispify "NdbDataPrintFormat_hex_prefix_set" 'function)) :void
  (self ndb-data-print-format-type)
  (hex_prefix :string))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_hex_prefix_get" #.(swig-lispify "NdbDataPrintFormat_hex_prefix_get" 'function)) :string
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_null_string_set" #.(swig-lispify "NdbDataPrintFormat_null_string_set" 'function)) :void
  (self ndb-data-print-format-type)
  (null_string :string))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_null_string_get" #.(swig-lispify "NdbDataPrintFormat_null_string_get" 'function)) :string
  (self ndb-data-print-format-type))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_hex_format_set" #.(swig-lispify "NdbDataPrintFormat_hex_format_set" 'function)) :void
  (self ndb-data-print-format-type)
  (hex_format :int))

(cffi:defcfun ("_wrap_NdbDataPrintFormat_hex_format_get" #.(swig-lispify "NdbDataPrintFormat_hex_format_get" 'function)) :int
  (self ndb-data-print-format-type))

(cffi:defcstruct #.(swig-lispify "List" 'classname)
	(#.(swig-lispify "__assign__" 'slotname :keyword) :pointer)
	(#.(swig-lispify "count" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "elements" 'slotname :keyword) :pointer)
	(#.(swig-lispify "sortById" 'slotname :keyword) :pointer)
	(#.(swig-lispify "sortByName" 'slotname :keyword) :pointer))

(cffi:defcstruct #.(swig-lispify "Element" 'classname)
	(#.(swig-lispify "id" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "type" 'slotname :keyword) :pointer)
	(#.(swig-lispify "state" 'slotname :keyword) :pointer)
	(#.(swig-lispify "store" 'slotname :keyword) :pointer)
	(#.(swig-lispify "temp" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "database" 'slotname :keyword) :string)
	(#.(swig-lispify "schema" 'slotname :keyword) :string)
	(#.(swig-lispify "name" 'slotname :keyword) :string)
	(#.(swig-lispify "compareByName" 'slotname :keyword) :pointer)
	(#.(swig-lispify "compareById" 'slotname :keyword) :pointer))

(cl:defconstant #.(swig-lispify "WAITFOR_RESPONSE_TIMEOUT" 'constant) 120000)

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_SYSTEM_DATABASE" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_SYSTEM_DATABASE" 'constant) "sys")))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:boundp '#.(swig-lispify "NDB_SYSTEM_SCHEMA" 'constant))
    (cl:defconstant #.(swig-lispify "NDB_SYSTEM_SCHEMA" 'constant) "def")))

(cffi:defcfun ("_wrap_new_Ndb__SWIG_0" #.(swig-lispify "new_Ndb/SWIG-0%" 'function)) (ndb-type :garbage-collect t)
  (ndb_cluster_connection ndb-cluster-connection-type)
  (aCatalogName :string)
  (aSchemaName :string))

(cffi:defcfun ("_wrap_new_Ndb__SWIG_1" #.(swig-lispify "new_Ndb/SWIG-1%" 'function)) (ndb-type :garbage-collect t)
  (ndb_cluster_connection ndb-cluster-connection-type)
  (aCatalogName :string))

(cffi:defcfun ("_wrap_new_Ndb__SWIG_2" #.(swig-lispify "new_Ndb/SWIG-2%" 'function)) (ndb-type :garbage-collect t)
  (ndb_cluster_connection ndb-cluster-connection-type))

(cffi:defcfun ("_wrap_delete_Ndb" #.(swig-lispify "delete_Ndb" 'function)) :void
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_get_ndb_cluster_connection" #.(swig-lispify "Ndb_get_ndb_cluster_connection" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_getCatalogName" #.(swig-lispify "Ndb_getCatalogName" 'function)) :string
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_setCatalogName" #.(swig-lispify "Ndb_setCatalogName" 'function)) :int
  (self ndb-type)
  (aCatalogName :string))

(cffi:defcfun ("_wrap_Ndb_getSchemaName" #.(swig-lispify "Ndb_getSchemaName" 'function)) :string
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_setSchemaName" #.(swig-lispify "Ndb_setSchemaName" 'function)) :int
  (self ndb-type)
  (aSchemaName :string))

(cffi:defcfun ("_wrap_Ndb_getNdbObjectName" #.(swig-lispify "Ndb_getNdbObjectName" 'function)) :string
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_setNdbObjectName" #.(swig-lispify "Ndb_setNdbObjectName" 'function)) :int
  (self ndb-type)
  (name :string))

(cffi:defcfun ("_wrap_Ndb_getDatabaseName" #.(swig-lispify "Ndb_getDatabaseName" 'function)) :string
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_setDatabaseName" #.(swig-lispify "Ndb_setDatabaseName" 'function)) :int
  (self ndb-type)
  (aDatabaseName :string))

(cffi:defcfun ("_wrap_Ndb_getDatabaseSchemaName" #.(swig-lispify "Ndb_getDatabaseSchemaName" 'function)) :string
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_setDatabaseSchemaName" #.(swig-lispify "Ndb_setDatabaseSchemaName" 'function)) :int
  (self ndb-type)
  (aDatabaseSchemaName :string))

(cffi:defcfun ("_wrap_Ndb_setDatabaseAndSchemaName" #.(swig-lispify "Ndb_setDatabaseAndSchemaName" 'function)) :int
  (self ndb-type)
  (t_arg1 :pointer))

(cffi:defcfun ("_wrap_Ndb_init__SWIG_0" #.(swig-lispify "Ndb_init/SWIG-0" 'function)) :int
  (self ndb-type)
  (maxNoOfTransactions :int))

(cffi:defcfun ("_wrap_Ndb_init__SWIG_1" #.(swig-lispify "Ndb_init/SWIG-1" 'function)) :int
  (self ndb-type))

;;(overload-function #.(swig-lispify "Ndb_init" 'function))

(cffi:defcfun ("_wrap_Ndb_set_eventbuf_max_alloc" #.(swig-lispify "Ndb_set_eventbuf_max_alloc" 'function)) :void
  (self ndb-type)
  (sz :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_get_eventbuf_max_alloc" #.(swig-lispify "Ndb_get_eventbuf_max_alloc" 'function)) :unsigned-int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_set_eventbuffer_free_percent" #.(swig-lispify "Ndb_set_eventbuffer_free_percent" 'function)) :int
  (self ndb-type)
  (sz :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_get_eventbuffer_free_percent" #.(swig-lispify "Ndb_get_eventbuffer_free_percent" 'function)) :unsigned-int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_get_event_buffer_memory_usage" #.(swig-lispify "Ndb_get_event_buffer_memory_usage" 'function)) :void
  (self ndb-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Ndb_setEventBufferQueueEmptyEpoch" #.(swig-lispify "Ndb_setEventBufferQueueEmptyEpoch" 'function)) :void
  (self ndb-type)
  (queue_empty_epoch :pointer))

(cffi:defcfun ("_wrap_Ndb_waitUntilReady__SWIG_0" #.(swig-lispify "Ndb_waitUntilReady/SWIG-0" 'function)) :int
  (self ndb-type)
  (timeout :int))

(cffi:defcfun ("_wrap_Ndb_waitUntilReady__SWIG_1" #.(swig-lispify "Ndb_waitUntilReady/SWIG-1" 'function)) :int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_getDictionary" #.(swig-lispify "Ndb_getDictionary" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_createEventOperation" #.(swig-lispify "Ndb_createEventOperation" 'function)) :pointer
  (self ndb-type)
  (eventName :string))

(cffi:defcfun ("_wrap_Ndb_dropEventOperation" #.(swig-lispify "Ndb_dropEventOperation" 'function)) :int
  (self ndb-type)
  (eventOp :pointer))

(cffi:defcfun ("_wrap_Ndb_pollEvents2__SWIG_0" #.(swig-lispify "Ndb_pollEvents2/SWIG-0" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int)
  (highestQueuedEpoch :pointer))

(cffi:defcfun ("_wrap_Ndb_pollEvents2__SWIG_1" #.(swig-lispify "Ndb_pollEvents2/SWIG-1" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int))

(cffi:defcfun ("_wrap_Ndb_isExpectingHigherQueuedEpochs" #.(swig-lispify "Ndb_isExpectingHigherQueuedEpochs" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_pollEvents__SWIG_0" #.(swig-lispify "Ndb_pollEvents/SWIG-0" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int)
  (latestGCI :pointer))

(cffi:defcfun ("_wrap_Ndb_pollEvents__SWIG_1" #.(swig-lispify "Ndb_pollEvents/SWIG-1" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int))

(cffi:defcfun ("_wrap_Ndb_nextEvent2" #.(swig-lispify "Ndb_nextEvent2" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_nextEvent" #.(swig-lispify "Ndb_nextEvent" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_isConsistent" #.(swig-lispify "Ndb_isConsistent" 'function)) :pointer
  (self ndb-type)
  (gci :pointer))

(cffi:defcfun ("_wrap_Ndb_isConsistentGCI" #.(swig-lispify "Ndb_isConsistentGCI" 'function)) :pointer
  (self ndb-type)
  (gci :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getGCIEventOperations" #.(swig-lispify "Ndb_getGCIEventOperations" 'function)) :pointer
  (self ndb-type)
  (iter :pointer)
  (event_types :pointer))

(cffi:defcfun ("_wrap_Ndb_getNextEventOpInEpoch2" #.(swig-lispify "Ndb_getNextEventOpInEpoch2" 'function)) :pointer
  (self ndb-type)
  (iter :pointer)
  (event_types :pointer))

(cffi:defcfun ("_wrap_Ndb_getNextEventOpInEpoch3" #.(swig-lispify "Ndb_getNextEventOpInEpoch3" 'function)) :pointer
  (self ndb-type)
  (iter :pointer)
  (event_types :pointer)
  (cumulative_any_value :pointer))

(cffi:defcfun ("_wrap_Ndb_getHighestQueuedEpoch" #.(swig-lispify "Ndb_getHighestQueuedEpoch" 'function)) :unsigned-long-long
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_flushIncompleteEvents" #.(swig-lispify "Ndb_flushIncompleteEvents" 'function)) :int
  (self ndb-type)
  (gci :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getEventOperation__SWIG_0" #.(swig-lispify "Ndb_getEventOperation/SWIG-0" 'function)) :pointer
  (self ndb-type)
  (eventOp :pointer))

(cffi:defcfun ("_wrap_Ndb_getEventOperation__SWIG_1" #.(swig-lispify "Ndb_getEventOperation/SWIG-1" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_getLatestGCI" #.(swig-lispify "Ndb_getLatestGCI" 'function)) :unsigned-long-long
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_forceGCP" #.(swig-lispify "Ndb_forceGCP" 'function)) :void
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_setReportThreshEventGCISlip" #.(swig-lispify "Ndb_setReportThreshEventGCISlip" 'function)) :void
  (self ndb-type)
  (thresh :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_setReportThreshEventFreeMem" #.(swig-lispify "Ndb_setReportThreshEventFreeMem" 'function)) :void
  (self ndb-type)
  (thresh :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_0" #.(swig-lispify "Ndb_startTransaction/SWIG-0" 'function)) :pointer
  (self ndb-type)
  (table :pointer)
  (keyData :string)
  (keyLen :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_1" #.(swig-lispify "Ndb_startTransaction/SWIG-1" 'function)) :pointer
  (self ndb-type)
  (table :pointer)
  (keyData :string))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_2" #.(swig-lispify "Ndb_startTransaction/SWIG-2" 'function)) :pointer
  (self ndb-type)
  (table :pointer))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_3" #.(swig-lispify "Ndb_startTransaction/SWIG-3" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_4" #.(swig-lispify "Ndb_startTransaction/SWIG-4" 'function)) :pointer
  (self ndb-type)
  (table :pointer)
  (keyData :pointer)
  (xfrmbuf :pointer)
  (xfrmbuflen :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_5" #.(swig-lispify "Ndb_startTransaction/SWIG-5" 'function)) :pointer
  (self ndb-type)
  (table :pointer)
  (keyData :pointer)
  (xfrmbuf :pointer))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_6" #.(swig-lispify "Ndb_startTransaction/SWIG-6" 'function)) :pointer
  (self ndb-type)
  (table :pointer)
  (keyData :pointer))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_7" #.(swig-lispify "Ndb_startTransaction/SWIG-7" 'function)) :pointer
  (self ndb-type)
  (keyRec :pointer)
  (keyData :string)
  (xfrmbuf :pointer)
  (xfrmbuflen :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_8" #.(swig-lispify "Ndb_startTransaction/SWIG-8" 'function)) :pointer
  (self ndb-type)
  (table :pointer)
  (partitionId :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_startTransaction__SWIG_9" #.(swig-lispify "Ndb_startTransaction/SWIG-9" 'function)) :pointer
  (self ndb-type)
  (nodeId :unsigned-int)
  (instanceId :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_computeHash__SWIG_0" #.(swig-lispify "Ndb_computeHash/SWIG-0" 'function)) :int
  (hashvalueptr ndb-type)
  (table :pointer)
  (keyData :pointer)
  (xfrmbuf :pointer)
  (xfrmbuflen :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_computeHash__SWIG_1" #.(swig-lispify "Ndb_computeHash/SWIG-1" 'function)) :int
  (hashvalueptr ndb-type)
  (table :pointer)
  (keyData :pointer)
  (xfrmbuf :pointer))

(cffi:defcfun ("_wrap_Ndb_computeHash__SWIG_2" #.(swig-lispify "Ndb_computeHash/SWIG-2" 'function)) :int
  (hashvalueptr ndb-type)
  (table :pointer)
  (keyData :pointer))

(cffi:defcfun ("_wrap_Ndb_computeHash__SWIG_3" #.(swig-lispify "Ndb_computeHash/SWIG-3" 'function)) :int
  (hashvalueptr ndb-type)
  (keyRec :pointer)
  (keyData :string)
  (xfrmbuf :pointer)
  (xfrmbuflen :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_closeTransaction" #.(swig-lispify "Ndb_closeTransaction" 'function)) :void
  (self ndb-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Ndb_pollNdb__SWIG_0" #.(swig-lispify "Ndb_pollNdb/SWIG-0" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int)
  (minNoOfEventsToWakeup :int))

(cffi:defcfun ("_wrap_Ndb_pollNdb__SWIG_1" #.(swig-lispify "Ndb_pollNdb/SWIG-1" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int))

(cffi:defcfun ("_wrap_Ndb_pollNdb__SWIG_2" #.(swig-lispify "Ndb_pollNdb/SWIG-2" 'function)) :int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_sendPreparedTransactions__SWIG_0" #.(swig-lispify "Ndb_sendPreparedTransactions/SWIG-0" 'function)) :void
  (self ndb-type)
  (forceSend :int))

(cffi:defcfun ("_wrap_Ndb_sendPreparedTransactions__SWIG_1" #.(swig-lispify "Ndb_sendPreparedTransactions/SWIG-1" 'function)) :void
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_sendPollNdb__SWIG_0" #.(swig-lispify "Ndb_sendPollNdb/SWIG-0" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int)
  (minNoOfEventsToWakeup :int)
  (forceSend :int))

(cffi:defcfun ("_wrap_Ndb_sendPollNdb__SWIG_1" #.(swig-lispify "Ndb_sendPollNdb/SWIG-1" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int)
  (minNoOfEventsToWakeup :int))

(cffi:defcfun ("_wrap_Ndb_sendPollNdb__SWIG_2" #.(swig-lispify "Ndb_sendPollNdb/SWIG-2" 'function)) :int
  (self ndb-type)
  (aMillisecondNumber :int))

(cffi:defcfun ("_wrap_Ndb_sendPollNdb__SWIG_3" #.(swig-lispify "Ndb_sendPollNdb/SWIG-3" 'function)) :int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_getNdbError__SWIG_0" #.(swig-lispify "Ndb_getNdbError/SWIG-0" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_getNdbError__SWIG_1" #.(swig-lispify "Ndb_getNdbError/SWIG-1" 'function)) :pointer
  (self ndb-type)
  (errorCode :int))

(cffi:defcfun ("_wrap_Ndb_getNdbErrorDetail" #.(swig-lispify "Ndb_getNdbErrorDetail" 'function)) :string
  (self ndb-type)
  (err :pointer)
  (buff :string)
  (buffLen :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_getNodeId" #.(swig-lispify "Ndb_getNodeId" 'function)) :int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_usingFullyQualifiedNames" #.(swig-lispify "Ndb_usingFullyQualifiedNames" 'function)) :pointer
  (self ndb-type))

(cffi:defcenum #.(swig-lispify "TamperType" 'enumname)
	(#.(swig-lispify "LockGlbChp" 'enumvalue :keyword) #.1)
	#.(swig-lispify "UnlockGlbChp" 'enumvalue :keyword)
	#.(swig-lispify "CrashNode" 'enumvalue :keyword)
	#.(swig-lispify "ReadRestartGCI" 'enumvalue :keyword)
	#.(swig-lispify "InsertError" 'enumvalue :keyword))

(cffi:defcfun ("_wrap_Ndb_initAutoIncrement" #.(swig-lispify "Ndb_initAutoIncrement" 'function)) :int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_0" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-0" 'function)) :int
  (self ndb-type)
  (aTableName :string)
  (autoValue :pointer)
  (cacheSize :unsigned-int)
  (step :unsigned-long-long)
  (start :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_1" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-1" 'function)) :int
  (self ndb-type)
  (aTableName :string)
  (autoValue :pointer)
  (cacheSize :unsigned-int)
  (step :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_2" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-2" 'function)) :int
  (self ndb-type)
  (aTableName :string)
  (autoValue :pointer)
  (cacheSize :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_3" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-3" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (autoValue :pointer)
  (cacheSize :unsigned-int)
  (step :unsigned-long-long)
  (start :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_4" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-4" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (autoValue :pointer)
  (cacheSize :unsigned-int)
  (step :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_5" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-5" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (autoValue :pointer)
  (cacheSize :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_6" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-6" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (range :pointer)
  (autoValue :pointer)
  (cacheSize :unsigned-int)
  (step :unsigned-long-long)
  (start :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_7" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-7" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (range :pointer)
  (autoValue :pointer)
  (cacheSize :unsigned-int)
  (step :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getAutoIncrementValue__SWIG_8" #.(swig-lispify "Ndb_getAutoIncrementValue/SWIG-8" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (range :pointer)
  (autoValue :pointer)
  (cacheSize :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_readAutoIncrementValue__SWIG_0" #.(swig-lispify "Ndb_readAutoIncrementValue/SWIG-0" 'function)) :int
  (self ndb-type)
  (aTableName :string)
  (autoValue :pointer))

(cffi:defcfun ("_wrap_Ndb_readAutoIncrementValue__SWIG_1" #.(swig-lispify "Ndb_readAutoIncrementValue/SWIG-1" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (autoValue :pointer))

(cffi:defcfun ("_wrap_Ndb_readAutoIncrementValue__SWIG_2" #.(swig-lispify "Ndb_readAutoIncrementValue/SWIG-2" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (range :pointer)
  (autoValue :pointer))

(cffi:defcfun ("_wrap_Ndb_setAutoIncrementValue__SWIG_0" #.(swig-lispify "Ndb_setAutoIncrementValue/SWIG-0" 'function)) :int
  (self ndb-type)
  (aTableName :string)
  (autoValue :unsigned-long-long)
  (modify :pointer))

(cffi:defcfun ("_wrap_Ndb_setAutoIncrementValue__SWIG_1" #.(swig-lispify "Ndb_setAutoIncrementValue/SWIG-1" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (autoValue :unsigned-long-long)
  (modify :pointer))

(cffi:defcfun ("_wrap_Ndb_setAutoIncrementValue__SWIG_2" #.(swig-lispify "Ndb_setAutoIncrementValue/SWIG-2" 'function)) :int
  (self ndb-type)
  (aTable :pointer)
  (range :pointer)
  (autoValue :unsigned-long-long)
  (modify :pointer))

(cffi:defcfun ("_wrap_Ndb_checkUpdateAutoIncrementValue" #.(swig-lispify "Ndb_checkUpdateAutoIncrementValue" 'function)) :pointer
  (self ndb-type)
  (range :pointer)
  (autoValue :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_hupp" #.(swig-lispify "Ndb_hupp" 'function)) :pointer
  (self ndb-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Ndb_getReference" #.(swig-lispify "Ndb_getReference" 'function)) :unsigned-int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_get_free_list_usage" #.(swig-lispify "Ndb_get_free_list_usage" 'function)) :pointer
  (self ndb-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Ndb_getMinDbNodeVersion" #.(swig-lispify "Ndb_getMinDbNodeVersion" 'function)) :unsigned-int
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_setCustomData" #.(swig-lispify "Ndb_setCustomData" 'function)) :void
  (self ndb-type)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_Ndb_getCustomData" #.(swig-lispify "Ndb_getCustomData" 'function)) :pointer
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_setCustomData64" #.(swig-lispify "Ndb_setCustomData64" 'function)) :void
  (self ndb-type)
  (arg1 :unsigned-long-long))

(cffi:defcfun ("_wrap_Ndb_getCustomData64" #.(swig-lispify "Ndb_getCustomData64" 'function)) :unsigned-long-long
  (self ndb-type))

(cffi:defcfun ("_wrap_Ndb_getNextTransactionId" #.(swig-lispify "Ndb_getNextTransactionId" 'function)) :unsigned-long-long
  (self ndb-type))

(cffi:defcenum #.(swig-lispify "ClientStatistics" 'enumname)
	(#.(swig-lispify "WaitExecCompleteCount" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "WaitScanResultCount" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "WaitMetaRequestCount" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "WaitNanosCount" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "BytesSentCount" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "BytesRecvdCount" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "TransStartCount" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "TransCommitCount" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "TransAbortCount" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "TransCloseCount" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "PkOpCount" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "UkOpCount" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "TableScanCount" 'enumvalue :keyword) #.12)
	(#.(swig-lispify "RangeScanCount" 'enumvalue :keyword) #.13)
	(#.(swig-lispify "PrunedScanCount" 'enumvalue :keyword) #.14)
	(#.(swig-lispify "ScanBatchCount" 'enumvalue :keyword) #.15)
	(#.(swig-lispify "ReadRowCount" 'enumvalue :keyword) #.16)
	(#.(swig-lispify "TransLocalReadRowCount" 'enumvalue :keyword) #.17)
	(#.(swig-lispify "DataEventsRecvdCount" 'enumvalue :keyword) #.18)
	(#.(swig-lispify "NonDataEventsRecvdCount" 'enumvalue :keyword) #.19)
	(#.(swig-lispify "EventBytesRecvdCount" 'enumvalue :keyword) #.20)
	(#.(swig-lispify "ForcedSendsCount" 'enumvalue :keyword) #.21)
	(#.(swig-lispify "UnforcedSendsCount" 'enumvalue :keyword) #.22)
	(#.(swig-lispify "DeferredSendsCount" 'enumvalue :keyword) #.23)
	(#.(swig-lispify "NumClientStatistics" 'enumvalue :keyword) #.24))

(cffi:defcfun ("_wrap_Ndb_getClientStat" #.(swig-lispify "Ndb_getClientStat" 'function)) :unsigned-long-long
  (self ndb-type)
  (id :unsigned-int))

(cffi:defcfun ("_wrap_Ndb_getClientStatName" #.(swig-lispify "Ndb_getClientStatName" 'function)) :string
  (self ndb-type)
  (id :unsigned-int))

(cffi:defcstruct #.(swig-lispify "EventBufferMemoryUsage" 'classname)
	(#.(swig-lispify "allocated_bytes" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "used_bytes" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "usage_percent" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "Key_part_ptr" 'classname)
	(#.(swig-lispify "ptr" 'slotname :keyword) :pointer)
	(#.(swig-lispify "len" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "PartitionSpec" 'classname)
	(#.(swig-lispify "size" 'slotname :keyword) :pointer)
	(#.(swig-lispify "type" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "PartitionSpec_v1" 'classname)
	(#.(swig-lispify "type" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "TupleIdRange" 'classname)
	(#.(swig-lispify "m_first_tuple_id" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "m_last_tuple_id" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "m_highest_seen" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "reset" 'slotname :keyword) :pointer))

(cffi:defcstruct #.(swig-lispify "Free_list_usage" 'classname)
	(#.(swig-lispify "m_name" 'slotname :keyword) :string)
	(#.(swig-lispify "m_created" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_free" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_sizeof" 'slotname :keyword) :unsigned-int))

(cffi:defcfun ("_wrap_compare_ndbrecord" #.(swig-lispify "compare_ndbrecord" 'function)) :int
  (r1 :pointer)
  (r2 :pointer)
  (key_record :pointer)
  (result_record :pointer)
  (descending :pointer)
  (read_range_no :pointer))

(cffi:defcenum #.(swig-lispify "ReceiverType" 'enumname)
	#.(swig-lispify "NDB_UNINITIALIZED" 'enumvalue :keyword)
	(#.(swig-lispify "NDB_OPERATION" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "NDB_SCANRECEIVER" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "NDB_INDEX_OPERATION" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "NDB_QUERY_OPERATION" 'enumvalue :keyword) #.4))

(cffi:defcfun ("_wrap_new_NdbReceiver" #.(swig-lispify "new_NdbReceiver" 'function)) (ndb-receiver-type :garbage-collect t)
  (aNdb :pointer))

(cffi:defcfun ("_wrap_NdbReceiver_init" #.(swig-lispify "NdbReceiver_init" 'function)) :int
  (self ndb-receiver-type)
  (type :pointer)
  (owner :pointer))

(cffi:defcfun ("_wrap_NdbReceiver_release" #.(swig-lispify "NdbReceiver_release" 'function)) :void
  (self ndb-receiver-type))

(cffi:defcfun ("_wrap_delete_NdbReceiver" #.(swig-lispify "delete_NdbReceiver" 'function)) :void
  (self ndb-receiver-type))

(cffi:defcfun ("_wrap_NdbReceiver_getId" #.(swig-lispify "NdbReceiver_getId" 'function)) :unsigned-int
  (self ndb-receiver-type))

(cffi:defcfun ("_wrap_NdbReceiver_getType" #.(swig-lispify "NdbReceiver_getType" 'function)) :pointer
  (self ndb-receiver-type))

(cffi:defcfun ("_wrap_NdbReceiver_getTransaction" #.(swig-lispify "NdbReceiver_getTransaction" 'function)) :pointer
  (self ndb-receiver-type)
  (type :pointer))

(cffi:defcfun ("_wrap_NdbReceiver_getOwner" #.(swig-lispify "NdbReceiver_getOwner" 'function)) :pointer
  (self ndb-receiver-type))

(cffi:defcfun ("_wrap_NdbReceiver_checkMagicNumber" #.(swig-lispify "NdbReceiver_checkMagicNumber" 'function)) :pointer
  (self ndb-receiver-type))

;; static methord no pointer as first parameter
(cffi:defcfun ("_wrap_NdbReceiver_getMagicNumber" #.(swig-lispify "NdbReceiver_getMagicNumber" 'function)) :unsigned-int)

(cffi:defcfun ("_wrap_NdbReceiver_getMagicNumberFromObject" #.(swig-lispify "NdbReceiver_getMagicNumberFromObject" 'function)) :unsigned-int
  (self ndb-receiver-type))

(cffi:defcfun ("_wrap_NdbReceiver_next__SWIG_0" #.(swig-lispify "NdbReceiver_next/SWIG-0" 'function)) :void
  (self ndb-receiver-type)
  (next_arg :pointer))

(cffi:defcfun ("_wrap_NdbReceiver_next__SWIG_1" #.(swig-lispify "NdbReceiver_next/SWIG-1" 'function)) :pointer
  (self ndb-receiver-type))

(cffi:defcfun ("_wrap_NdbReceiver_setErrorCode" #.(swig-lispify "NdbReceiver_setErrorCode" 'function)) :void
  (self ndb-receiver-type)
  (arg1 :int))

(cffi:defcfun ("_wrap_NdbReceiver_initReceiveBuffer" #.(swig-lispify "NdbReceiver_initReceiveBuffer" 'function)) :pointer
  (buffer ndb-receiver-type)
  (bufSize :unsigned-int)
  (batchRows :unsigned-int))

(cffi:defcfun ("_wrap_NdbReceiver_prepareReceive" #.(swig-lispify "NdbReceiver_prepareReceive" 'function)) :void
  (self ndb-receiver-type)
  (buf :pointer))

(cffi:defcenum #.(swig-lispify "Type" 'enumname)
	(#.(swig-lispify "PrimaryKeyAccess" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "UniqueIndexAccess" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "TableScan" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "OrderedIndexScan" 'enumvalue :keyword) #.3))

(cffi:defcenum #.(swig-lispify "LockMode" 'enumname)
	(#.(swig-lispify "LM_Read" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "LM_Exclusive" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "LM_CommittedRead" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "LM_Dirty" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "LM_SimpleRead" 'enumvalue :keyword) #.3))

(cffi:defcenum #.(swig-lispify "AbortOption" 'enumname)
	(#.(swig-lispify "DefaultAbortOption" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "AbortOnError" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "AO_IgnoreError" 'enumvalue :keyword) #.2))

(cffi:defcfun ("_wrap_NdbOperation_insertTuple" #.(swig-lispify "NdbOperation_insertTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_updateTuple" #.(swig-lispify "NdbOperation_updateTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_writeTuple" #.(swig-lispify "NdbOperation_writeTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_deleteTuple" #.(swig-lispify "NdbOperation_deleteTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_readTuple__SWIG_0" #.(swig-lispify "NdbOperation_readTuple/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_NdbOperation_readTuple__SWIG_1" #.(swig-lispify "NdbOperation_readTuple/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_readTupleExclusive" #.(swig-lispify "NdbOperation_readTupleExclusive" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_simpleRead" #.(swig-lispify "NdbOperation_simpleRead" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_dirtyRead" #.(swig-lispify "NdbOperation_dirtyRead" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_committedRead" #.(swig-lispify "NdbOperation_committedRead" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_dirtyUpdate" #.(swig-lispify "NdbOperation_dirtyUpdate" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_dirtyWrite" #.(swig-lispify "NdbOperation_dirtyWrite" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_interpretedUpdateTuple" #.(swig-lispify "NdbOperation_interpretedUpdateTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_interpretedDeleteTuple" #.(swig-lispify "NdbOperation_interpretedDeleteTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_0" #.(swig-lispify "NdbOperation_equal/SWIG-0" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :string)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_1" #.(swig-lispify "NdbOperation_equal/SWIG-1" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :string))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_2" #.(swig-lispify "NdbOperation_equal/SWIG-2" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :int))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_3" #.(swig-lispify "NdbOperation_equal/SWIG-3" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_4" #.(swig-lispify "NdbOperation_equal/SWIG-4" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :long-long))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_5" #.(swig-lispify "NdbOperation_equal/SWIG-5" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_6" #.(swig-lispify "NdbOperation_equal/SWIG-6" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :string)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_7" #.(swig-lispify "NdbOperation_equal/SWIG-7" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :string))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_8" #.(swig-lispify "NdbOperation_equal/SWIG-8" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :int))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_9" #.(swig-lispify "NdbOperation_equal/SWIG-9" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_10" #.(swig-lispify "NdbOperation_equal/SWIG-10" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :long-long))

(cffi:defcfun ("_wrap_NdbOperation_equal__SWIG_11" #.(swig-lispify "NdbOperation_equal/SWIG-11" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_getValue__SWIG_0" #.(swig-lispify "NdbOperation_getValue/SWIG-0" 'function)) :pointer
  (self :pointer)
  (anAttrName :string)
  (aValue :string))

(cffi:defcfun ("_wrap_NdbOperation_getValue__SWIG_1" #.(swig-lispify "NdbOperation_getValue/SWIG-1" 'function)) :pointer
  (self :pointer)
  (anAttrName :string))

(cffi:defcfun ("_wrap_NdbOperation_getValue__SWIG_2" #.(swig-lispify "NdbOperation_getValue/SWIG-2" 'function)) :pointer
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :string))

(cffi:defcfun ("_wrap_NdbOperation_getValue__SWIG_3" #.(swig-lispify "NdbOperation_getValue/SWIG-3" 'function)) :pointer
  (self :pointer)
  (anAttrId :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_getValue__SWIG_4" #.(swig-lispify "NdbOperation_getValue/SWIG-4" 'function)) :pointer
  (self :pointer)
  (arg1 :pointer)
  (val :string))

(cffi:defcfun ("_wrap_NdbOperation_getValue__SWIG_5" #.(swig-lispify "NdbOperation_getValue/SWIG-5" 'function)) :pointer
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_0" #.(swig-lispify "NdbOperation_setValue/SWIG-0" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :string)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_1" #.(swig-lispify "NdbOperation_setValue/SWIG-1" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :string))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_2" #.(swig-lispify "NdbOperation_setValue/SWIG-2" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :int))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_3" #.(swig-lispify "NdbOperation_setValue/SWIG-3" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_4" #.(swig-lispify "NdbOperation_setValue/SWIG-4" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :long-long))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_5" #.(swig-lispify "NdbOperation_setValue/SWIG-5" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_6" #.(swig-lispify "NdbOperation_setValue/SWIG-6" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :float))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_7" #.(swig-lispify "NdbOperation_setValue/SWIG-7" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :double))

(cffi:defcfun ("_wrap_NdbOperation_setAnyValue" #.(swig-lispify "NdbOperation_setAnyValue" 'function)) :int
  (self :pointer)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_setOptimize" #.(swig-lispify "NdbOperation_setOptimize" 'function)) :int
  (self :pointer)
  (options :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_8" #.(swig-lispify "NdbOperation_setValue/SWIG-8" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :string)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_9" #.(swig-lispify "NdbOperation_setValue/SWIG-9" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :string))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_10" #.(swig-lispify "NdbOperation_setValue/SWIG-10" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :int))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_11" #.(swig-lispify "NdbOperation_setValue/SWIG-11" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_12" #.(swig-lispify "NdbOperation_setValue/SWIG-12" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :long-long))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_13" #.(swig-lispify "NdbOperation_setValue/SWIG-13" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_14" #.(swig-lispify "NdbOperation_setValue/SWIG-14" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :float))

(cffi:defcfun ("_wrap_NdbOperation_setValue__SWIG_15" #.(swig-lispify "NdbOperation_setValue/SWIG-15" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :double))

(cffi:defcfun ("_wrap_NdbOperation_getBlobHandle__SWIG_0" #.(swig-lispify "NdbOperation_getBlobHandle/SWIG-0" 'function)) :pointer
  (self :pointer)
  (anAttrName :string))

(cffi:defcfun ("_wrap_NdbOperation_getBlobHandle__SWIG_1" #.(swig-lispify "NdbOperation_getBlobHandle/SWIG-1" 'function)) :pointer
  (self :pointer)
  (anAttrId :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_getBlobHandle__SWIG_2" #.(swig-lispify "NdbOperation_getBlobHandle/SWIG-2" 'function)) :pointer
  (self :pointer)
  (anAttrName :string))

(cffi:defcfun ("_wrap_NdbOperation_getBlobHandle__SWIG_3" #.(swig-lispify "NdbOperation_getBlobHandle/SWIG-3" 'function)) :pointer
  (self :pointer)
  (anAttrId :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_incValue__SWIG_0" #.(swig-lispify "NdbOperation_incValue/SWIG-0" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_incValue__SWIG_1" #.(swig-lispify "NdbOperation_incValue/SWIG-1" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_incValue__SWIG_2" #.(swig-lispify "NdbOperation_incValue/SWIG-2" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_incValue__SWIG_3" #.(swig-lispify "NdbOperation_incValue/SWIG-3" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_subValue__SWIG_0" #.(swig-lispify "NdbOperation_subValue/SWIG-0" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_subValue__SWIG_1" #.(swig-lispify "NdbOperation_subValue/SWIG-1" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_subValue__SWIG_2" #.(swig-lispify "NdbOperation_subValue/SWIG-2" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_subValue__SWIG_3" #.(swig-lispify "NdbOperation_subValue/SWIG-3" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_def_label" #.(swig-lispify "NdbOperation_def_label" 'function)) :int
  (self :pointer)
  (labelNumber :int))

(cffi:defcfun ("_wrap_NdbOperation_add_reg" #.(swig-lispify "NdbOperation_add_reg" 'function)) :int
  (self :pointer)
  (RegSource1 :unsigned-int)
  (RegSource2 :unsigned-int)
  (RegDest :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_sub_reg" #.(swig-lispify "NdbOperation_sub_reg" 'function)) :int
  (self :pointer)
  (RegSource1 :unsigned-int)
  (RegSource2 :unsigned-int)
  (RegDest :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_load_const_u32" #.(swig-lispify "NdbOperation_load_const_u32" 'function)) :int
  (self :pointer)
  (RegDest :unsigned-int)
  (Constant :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_load_const_u64" #.(swig-lispify "NdbOperation_load_const_u64" 'function)) :int
  (self :pointer)
  (RegDest :unsigned-int)
  (Constant :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbOperation_load_const_null" #.(swig-lispify "NdbOperation_load_const_null" 'function)) :int
  (self :pointer)
  (RegDest :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_read_attr__SWIG_0" #.(swig-lispify "NdbOperation_read_attr/SWIG-0" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (RegDest :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_write_attr__SWIG_0" #.(swig-lispify "NdbOperation_write_attr/SWIG-0" 'function)) :int
  (self :pointer)
  (anAttrName :string)
  (RegSource :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_read_attr__SWIG_1" #.(swig-lispify "NdbOperation_read_attr/SWIG-1" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (RegDest :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_write_attr__SWIG_1" #.(swig-lispify "NdbOperation_write_attr/SWIG-1" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (RegSource :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_ge" #.(swig-lispify "NdbOperation_branch_ge" 'function)) :int
  (self :pointer)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_gt" #.(swig-lispify "NdbOperation_branch_gt" 'function)) :int
  (self :pointer)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_le" #.(swig-lispify "NdbOperation_branch_le" 'function)) :int
  (self :pointer)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_lt" #.(swig-lispify "NdbOperation_branch_lt" 'function)) :int
  (self :pointer)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_eq" #.(swig-lispify "NdbOperation_branch_eq" 'function)) :int
  (self :pointer)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_ne" #.(swig-lispify "NdbOperation_branch_ne" 'function)) :int
  (self :pointer)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_ne_null" #.(swig-lispify "NdbOperation_branch_ne_null" 'function)) :int
  (self :pointer)
  (RegLvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_eq_null" #.(swig-lispify "NdbOperation_branch_eq_null" 'function)) :int
  (self :pointer)
  (RegLvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_label" #.(swig-lispify "NdbOperation_branch_label" 'function)) :int
  (self :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_eq_null" #.(swig-lispify "NdbOperation_branch_col_eq_null" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_ne_null" #.(swig-lispify "NdbOperation_branch_col_ne_null" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_eq" #.(swig-lispify "NdbOperation_branch_col_eq" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (val :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_ne" #.(swig-lispify "NdbOperation_branch_col_ne" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (val :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_lt" #.(swig-lispify "NdbOperation_branch_col_lt" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (val :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_le" #.(swig-lispify "NdbOperation_branch_col_le" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (val :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_gt" #.(swig-lispify "NdbOperation_branch_col_gt" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (val :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_ge" #.(swig-lispify "NdbOperation_branch_col_ge" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (val :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_like" #.(swig-lispify "NdbOperation_branch_col_like" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (arg2 :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_notlike" #.(swig-lispify "NdbOperation_branch_col_notlike" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (arg2 :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_and_mask_eq_mask" #.(swig-lispify "NdbOperation_branch_col_and_mask_eq_mask" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (arg2 :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_and_mask_ne_mask" #.(swig-lispify "NdbOperation_branch_col_and_mask_ne_mask" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (arg2 :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_and_mask_eq_zero" #.(swig-lispify "NdbOperation_branch_col_and_mask_eq_zero" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (arg2 :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_branch_col_and_mask_ne_zero" #.(swig-lispify "NdbOperation_branch_col_and_mask_ne_zero" 'function)) :int
  (self :pointer)
  (ColId :unsigned-int)
  (arg2 :pointer)
  (len :unsigned-int)
  (nopad :pointer)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_interpret_exit_ok" #.(swig-lispify "NdbOperation_interpret_exit_ok" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_interpret_exit_nok__SWIG_0" #.(swig-lispify "NdbOperation_interpret_exit_nok/SWIG-0" 'function)) :int
  (self :pointer)
  (ErrorCode :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_interpret_exit_nok__SWIG_1" #.(swig-lispify "NdbOperation_interpret_exit_nok/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_interpret_exit_last_row" #.(swig-lispify "NdbOperation_interpret_exit_last_row" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_def_subroutine" #.(swig-lispify "NdbOperation_def_subroutine" 'function)) :int
  (self :pointer)
  (SubroutineNumber :int))

(cffi:defcfun ("_wrap_NdbOperation_call_sub" #.(swig-lispify "NdbOperation_call_sub" 'function)) :int
  (self :pointer)
  (Subroutine :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_ret_sub" #.(swig-lispify "NdbOperation_ret_sub" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getNdbError" #.(swig-lispify "NdbOperation_getNdbError" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getNdbErrorLine__SWIG_0" #.(swig-lispify "NdbOperation_getNdbErrorLine/SWIG-0" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getNdbErrorLine__SWIG_1" #.(swig-lispify "NdbOperation_getNdbErrorLine/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getTableName" #.(swig-lispify "NdbOperation_getTableName" 'function)) :string
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getTable" #.(swig-lispify "NdbOperation_getTable" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getType" #.(swig-lispify "NdbOperation_getType" 'function)) :pointer
  (self :pointer))

(cffi:defcenum #.(swig-lispify "OperationType" 'enumname)
	(#.(swig-lispify "ReadRequest" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "UpdateRequest" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "InsertRequest" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "DeleteRequest" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "WriteRequest" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "ReadExclusive" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "RefreshRequest" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "UnlockRequest" 'enumvalue :keyword) #.7)
	#.(swig-lispify "OpenScanRequest" 'enumvalue :keyword)
	#.(swig-lispify "OpenRangeScanRequest" 'enumvalue :keyword)
	#.(swig-lispify "NotDefined2" 'enumvalue :keyword)
	#.(swig-lispify "NotDefined" 'enumvalue :keyword))

(cffi:defcfun ("_wrap_NdbOperation_getLockMode" #.(swig-lispify "NdbOperation_getLockMode" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getAbortOption" #.(swig-lispify "NdbOperation_getAbortOption" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_setAbortOption" #.(swig-lispify "NdbOperation_setAbortOption" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getNdbTransaction" #.(swig-lispify "NdbOperation_getNdbTransaction" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_setPartitionId" #.(swig-lispify "NdbOperation_setPartitionId" 'function)) :void
  (self :pointer)
  (id :unsigned-int))

(cffi:defcfun ("_wrap_NdbOperation_getPartitionId" #.(swig-lispify "NdbOperation_getPartitionId" 'function)) :unsigned-int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getLockHandle__SWIG_0" #.(swig-lispify "NdbOperation_getLockHandle/SWIG-0" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getLockHandle__SWIG_1" #.(swig-lispify "NdbOperation_getLockHandle/SWIG-1" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_set_disable_fk" #.(swig-lispify "NdbOperation_set_disable_fk" 'function)) :void
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_setNoWait" #.(swig-lispify "NdbOperation_setNoWait" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_next" #.(swig-lispify "NdbOperation_next" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getFirstRecAttr" #.(swig-lispify "NdbOperation_getFirstRecAttr" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_getCustomData" #.(swig-lispify "NdbOperation_getCustomData" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbOperation_setCustomData" #.(swig-lispify "NdbOperation_setCustomData" 'function)) :void
  (self :pointer)
  (p :pointer))

(cffi:defcstruct #.(swig-lispify "GetValueSpec" 'classname)
	(#.(swig-lispify "column" 'slotname :keyword) :pointer)
	(#.(swig-lispify "appStorage" 'slotname :keyword) :pointer)
	(#.(swig-lispify "recAttr" 'slotname :keyword) :pointer))

(cffi:defcstruct #.(swig-lispify "SetValueSpec" 'classname)
	(#.(swig-lispify "column" 'slotname :keyword) :pointer)
	(#.(swig-lispify "value" 'slotname :keyword) :pointer))

(cffi:defcstruct #.(swig-lispify "OperationOptions" 'classname)
	(#.(swig-lispify "size" 'slotname :keyword) :pointer)
	(#.(swig-lispify "optionsPresent" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "abortOption" 'slotname :keyword) :pointer)
	(#.(swig-lispify "extraGetValues" 'slotname :keyword) :pointer)
	(#.(swig-lispify "numExtraGetValues" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "extraSetValues" 'slotname :keyword) :pointer)
	(#.(swig-lispify "numExtraSetValues" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "partitionId" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "interpretedCode" 'slotname :keyword) :pointer)
	(#.(swig-lispify "anyValue" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "customData" 'slotname :keyword) :pointer))

(cffi:defcenum #.(swig-lispify "ScanFlag" 'enumname)
	(#.(swig-lispify "SF_TupScan" 'enumvalue :keyword) #.(cl:ash 1 16))
	(#.(swig-lispify "SF_DiskScan" 'enumvalue :keyword) #.(cl:ash 2 16))
	(#.(swig-lispify "SF_OrderBy" 'enumvalue :keyword) #.(cl:ash 1 24))
	(#.(swig-lispify "SF_OrderByFull" 'enumvalue :keyword) #.(cl:ash 16 24))
	(#.(swig-lispify "SF_Descending" 'enumvalue :keyword) #.(cl:ash 2 24))
	(#.(swig-lispify "SF_ReadRangeNo" 'enumvalue :keyword) #.(cl:ash 4 24))
	(#.(swig-lispify "SF_MultiRange" 'enumvalue :keyword) #.(cl:ash 8 24))
	(#.(swig-lispify "SF_KeyInfo" 'enumvalue :keyword) #.1))

(cffi:defcfun ("_wrap_NdbScanOperation_readTuples__SWIG_0" #.(swig-lispify "NdbScanOperation_readTuples/SWIG-0" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (scan_flags :unsigned-int)
  (parallel :unsigned-int)
  (batch :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanOperation_readTuples__SWIG_1" #.(swig-lispify "NdbScanOperation_readTuples/SWIG-1" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (scan_flags :unsigned-int)
  (parallel :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanOperation_readTuples__SWIG_2" #.(swig-lispify "NdbScanOperation_readTuples/SWIG-2" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (scan_flags :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanOperation_readTuples__SWIG_3" #.(swig-lispify "NdbScanOperation_readTuples/SWIG-3" 'function)) :int
  (self :pointer)
  (lock_mode :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_readTuples__SWIG_4" #.(swig-lispify "NdbScanOperation_readTuples/SWIG-4" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_readTuples__SWIG_5" #.(swig-lispify "NdbScanOperation_readTuples/SWIG-5" 'function)) :int
  (self :pointer)
  (parallell :int))

(cffi:defcfun ("_wrap_NdbScanOperation_readTuplesExclusive__SWIG_0" #.(swig-lispify "NdbScanOperation_readTuplesExclusive/SWIG-0" 'function)) :int
  (self :pointer)
  (parallell :int))

(cffi:defcfun ("_wrap_NdbScanOperation_readTuplesExclusive__SWIG_1" #.(swig-lispify "NdbScanOperation_readTuplesExclusive/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_getBlobHandle__SWIG_0" #.(swig-lispify "NdbScanOperation_getBlobHandle/SWIG-0" 'function)) :pointer
  (self :pointer)
  (anAttrName :string))

(cffi:defcfun ("_wrap_NdbScanOperation_getBlobHandle__SWIG_1" #.(swig-lispify "NdbScanOperation_getBlobHandle/SWIG-1" 'function)) :pointer
  (self :pointer)
  (anAttrId :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanOperation_setInterpretedCode" #.(swig-lispify "NdbScanOperation_setInterpretedCode" 'function)) :int
  (self :pointer)
  (code :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_nextResult__SWIG_0" #.(swig-lispify "NdbScanOperation_nextResult/SWIG-0" 'function)) :int
  (self :pointer)
  (fetchAllowed :boolean)
  (forceSend :boolean))

(cffi:defcfun ("_wrap_NdbScanOperation_nextResult__SWIG_1" #.(swig-lispify "NdbScanOperation_nextResult/SWIG-1" 'function)) :int
  (self :pointer)
  (fetchAllowed :boolean))

(cffi:defcfun ("_wrap_NdbScanOperation_nextResult__SWIG_2" #.(swig-lispify "NdbScanOperation_nextResult/SWIG-2" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_nextResult__SWIG_3" #.(swig-lispify "NdbScanOperation_nextResult/SWIG-3" 'function)) :int
  (self :pointer)
  (out_row_ptr :pointer)
  (fetchAllowed :boolean)
  (forceSend :boolean))

(cffi:defcfun ("_wrap_NdbScanOperation_nextResultCopyOut" #.(swig-lispify "NdbScanOperation_nextResultCopyOut" 'function)) :int
  (self :pointer)
  (buffer :string)
  (fetchAllowed :pointer)
  (forceSend :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_close__SWIG_0" #.(swig-lispify "NdbScanOperation_close/SWIG-0" 'function)) :void
  (self :pointer)
  (forceSend :boolean)
  (releaseOp :boolean))

(cffi:defcfun ("_wrap_NdbScanOperation_close__SWIG_1" #.(swig-lispify "NdbScanOperation_close/SWIG-1" 'function)) :void
  (self :pointer)
  (forceSend :boolean))

(cffi:defcfun ("_wrap_NdbScanOperation_close__SWIG_2" #.(swig-lispify "NdbScanOperation_close/SWIG-2" 'function)) :void
  (self :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_lockCurrentTuple__SWIG_0" #.(swig-lispify "NdbScanOperation_lockCurrentTuple/SWIG-0" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_lockCurrentTuple__SWIG_1" #.(swig-lispify "NdbScanOperation_lockCurrentTuple/SWIG-1" 'function)) :pointer
  (self :pointer)
  (lockTrans :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_updateCurrentTuple__SWIG_0" #.(swig-lispify "NdbScanOperation_updateCurrentTuple/SWIG-0" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_updateCurrentTuple__SWIG_1" #.(swig-lispify "NdbScanOperation_updateCurrentTuple/SWIG-1" 'function)) :pointer
  (self :pointer)
  (updateTrans :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_deleteCurrentTuple__SWIG_0" #.(swig-lispify "NdbScanOperation_deleteCurrentTuple/SWIG-0" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_deleteCurrentTuple__SWIG_1" #.(swig-lispify "NdbScanOperation_deleteCurrentTuple/SWIG-1" 'function)) :int
  (self :pointer)
  (takeOverTransaction :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_lockCurrentTuple__SWIG_2" #.(swig-lispify "NdbScanOperation_lockCurrentTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanOperation_lockCurrentTuple__SWIG_3" #.(swig-lispify "NdbScanOperation_lockCurrentTuple/SWIG-3" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_lockCurrentTuple__SWIG_4" #.(swig-lispify "NdbScanOperation_lockCurrentTuple/SWIG-4" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_lockCurrentTuple__SWIG_5" #.(swig-lispify "NdbScanOperation_lockCurrentTuple/SWIG-5" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer)
  (result_row :string))

(cffi:defcfun ("_wrap_NdbScanOperation_lockCurrentTuple__SWIG_6" #.(swig-lispify "NdbScanOperation_lockCurrentTuple/SWIG-6" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_updateCurrentTuple__SWIG_2" #.(swig-lispify "NdbScanOperation_updateCurrentTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanOperation_updateCurrentTuple__SWIG_3" #.(swig-lispify "NdbScanOperation_updateCurrentTuple/SWIG-3" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_updateCurrentTuple__SWIG_4" #.(swig-lispify "NdbScanOperation_updateCurrentTuple/SWIG-4" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_updateCurrentTuple__SWIG_5" #.(swig-lispify "NdbScanOperation_updateCurrentTuple/SWIG-5" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (attr_rec :pointer)
  (attr_row :string))

(cffi:defcfun ("_wrap_NdbScanOperation_deleteCurrentTuple__SWIG_2" #.(swig-lispify "NdbScanOperation_deleteCurrentTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanOperation_deleteCurrentTuple__SWIG_3" #.(swig-lispify "NdbScanOperation_deleteCurrentTuple/SWIG-3" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_deleteCurrentTuple__SWIG_4" #.(swig-lispify "NdbScanOperation_deleteCurrentTuple/SWIG-4" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_deleteCurrentTuple__SWIG_5" #.(swig-lispify "NdbScanOperation_deleteCurrentTuple/SWIG-5" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer)
  (result_row :string))

(cffi:defcfun ("_wrap_NdbScanOperation_deleteCurrentTuple__SWIG_6" #.(swig-lispify "NdbScanOperation_deleteCurrentTuple/SWIG-6" 'function)) :pointer
  (self :pointer)
  (takeOverTrans :pointer)
  (result_rec :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_getNdbTransaction" #.(swig-lispify "NdbScanOperation_getNdbTransaction" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbScanOperation_getPruned" #.(swig-lispify "NdbScanOperation_getPruned" 'function)) :pointer
  (self :pointer))

(cffi:defcstruct #.(swig-lispify "ScanOptions" 'classname)
	(#.(swig-lispify "size" 'slotname :keyword) :pointer)
	(#.(swig-lispify "optionsPresent" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "scan_flags" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "parallel" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "batch" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "extraGetValues" 'slotname :keyword) :pointer)
	(#.(swig-lispify "numExtraGetValues" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "partitionId" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "interpretedCode" 'slotname :keyword) :pointer)
	(#.(swig-lispify "customData" 'slotname :keyword) :pointer)
	(#.(swig-lispify "partitionInfo" 'slotname :keyword) :pointer)
	(#.(swig-lispify "sizeOfPartInfo" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "ScanOptions_v1" 'classname)
	(#.(swig-lispify "optionsPresent" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "scan_flags" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "parallel" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "batch" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "extraGetValues" 'slotname :keyword) :pointer)
	(#.(swig-lispify "numExtraGetValues" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "partitionId" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "interpretedCode" 'slotname :keyword) :pointer)
	(#.(swig-lispify "customData" 'slotname :keyword) :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_0" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-0" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (scan_flags :unsigned-int)
  (parallel :unsigned-int)
  (batch :unsigned-int))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_1" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-1" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (scan_flags :unsigned-int)
  (parallel :unsigned-int))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_2" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-2" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (scan_flags :unsigned-int))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_3" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-3" 'function)) :int
  (self :pointer)
  (lock_mode :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_4" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-4" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_5" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-5" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (batch :unsigned-int)
  (parallel :unsigned-int)
  (order_by :pointer)
  (order_desc :pointer)
  (read_range_no :pointer)
  (keyinfo :pointer)
  (multi_range :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_6" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-6" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (batch :unsigned-int)
  (parallel :unsigned-int)
  (order_by :pointer)
  (order_desc :pointer)
  (read_range_no :pointer)
  (keyinfo :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_7" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-7" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (batch :unsigned-int)
  (parallel :unsigned-int)
  (order_by :pointer)
  (order_desc :pointer)
  (read_range_no :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_8" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-8" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (batch :unsigned-int)
  (parallel :unsigned-int)
  (order_by :pointer)
  (order_desc :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_readTuples__SWIG_9" #.(swig-lispify "NdbIndexScanOperation_readTuples/SWIG-9" 'function)) :int
  (self :pointer)
  (lock_mode :pointer)
  (batch :unsigned-int)
  (parallel :unsigned-int)
  (order_by :pointer))

(cffi:defcenum #.(swig-lispify "BoundType" 'enumname)
	(#.(swig-lispify "BoundLE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "BoundLT" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "BoundGE" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "BoundGT" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "BoundEQ" 'enumvalue :keyword) #.4))

(defanonenum 
	(#.(swig-lispify "MaxRangeNo" 'enumvalue) #.#xfff))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_setBound__SWIG_0" #.(swig-lispify "NdbIndexScanOperation_setBound/SWIG-0" 'function)) :int
  (self :pointer)
  (attr :string)
  (type :int)
  (value :pointer)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_setBound__SWIG_1" #.(swig-lispify "NdbIndexScanOperation_setBound/SWIG-1" 'function)) :int
  (self :pointer)
  (attr :string)
  (type :int)
  (value :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_setBound__SWIG_2" #.(swig-lispify "NdbIndexScanOperation_setBound/SWIG-2" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (type :int)
  (aValue :pointer)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_setBound__SWIG_3" #.(swig-lispify "NdbIndexScanOperation_setBound/SWIG-3" 'function)) :int
  (self :pointer)
  (anAttrId :unsigned-int)
  (type :int)
  (aValue :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_end_of_bound__SWIG_0" #.(swig-lispify "NdbIndexScanOperation_end_of_bound/SWIG-0" 'function)) :int
  (self :pointer)
  (range_no :unsigned-int))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_end_of_bound__SWIG_1" #.(swig-lispify "NdbIndexScanOperation_end_of_bound/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_get_range_no" #.(swig-lispify "NdbIndexScanOperation_get_range_no" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_setBound__SWIG_4" #.(swig-lispify "NdbIndexScanOperation_setBound/SWIG-4" 'function)) :int
  (self :pointer)
  (key_record :pointer)
  (bound :pointer)
  (partInfo :pointer)
  (sizeOfPartInfo :unsigned-int))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_setBound__SWIG_5" #.(swig-lispify "NdbIndexScanOperation_setBound/SWIG-5" 'function)) :int
  (self :pointer)
  (key_record :pointer)
  (bound :pointer)
  (partInfo :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_setBound__SWIG_6" #.(swig-lispify "NdbIndexScanOperation_setBound/SWIG-6" 'function)) :int
  (self :pointer)
  (key_record :pointer)
  (bound :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_getCurrentKeySize" #.(swig-lispify "NdbIndexScanOperation_getCurrentKeySize" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_getSorted" #.(swig-lispify "NdbIndexScanOperation_getSorted" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexScanOperation_getDescending" #.(swig-lispify "NdbIndexScanOperation_getDescending" 'function)) :pointer
  (self :pointer))

(cffi:defcstruct #.(swig-lispify "IndexBound" 'classname)
	(#.(swig-lispify "low_key" 'slotname :keyword) :string)
	(#.(swig-lispify "low_key_count" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "low_inclusive" 'slotname :keyword) :boolean)
	(#.(swig-lispify "high_key" 'slotname :keyword) :string)
	(#.(swig-lispify "high_key_count" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "high_inclusive" 'slotname :keyword) :boolean)
	(#.(swig-lispify "range_no" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "OldApiBoundInfo" 'classname)
	(#.(swig-lispify "highestKey" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "highestSoFarIsStrict" 'slotname :keyword) :pointer)
	(#.(swig-lispify "keysPresentBitmap" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "key" 'slotname :keyword) :string))

(cffi:defcenum #.(swig-lispify "AbortOption" 'enumname)
	(#.(swig-lispify "DefaultAbortOption" 'enumvalue :keyword) #.-1) ;; #.NdbOperation::DefaultAbortOption
	(#.(swig-lispify "CommitIfFailFree" 'enumvalue :keyword) #.0) ;; #.NdbOperation::AbortOnError
	(#.(swig-lispify "TryCommit" 'enumvalue :keyword) #.0) ;; #.NdbOperation::AbortOnError
	(#.(swig-lispify "AbortOnError" 'enumvalue :keyword) #.0) ;; #.NdbOperation::AbortOnError
	(#.(swig-lispify "CommitAsMuchAsPossible" 'enumvalue :keyword) #.2) ;; #.NdbOperation::AO_IgnoreError
	(#.(swig-lispify "AO_IgnoreError" 'enumvalue :keyword) #.2)) ;; #.NdbOperation::AO_IgnoreError

(cffi:defcenum #.(swig-lispify "ExecType" 'enumname)
	(#.(swig-lispify "NoExecTypeDef" 'enumvalue :keyword) #.-1)
	#.(swig-lispify "Prepare" 'enumvalue :keyword)
	#.(swig-lispify "NoCommit" 'enumvalue :keyword)
	#.(swig-lispify "Commit" 'enumvalue :keyword)
	#.(swig-lispify "Rollback" 'enumvalue :keyword))

(cffi:defcenum #.(swig-lispify "ExecType" 'enumname)
	(#.(swig-lispify "NoExecTypeDef" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "Prepare" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "NoCommit" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "Commit" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "Rollback" 'enumvalue :keyword) #.3))

(cffi:defcfun ("_wrap_NdbTransaction_getNdb" #.(swig-lispify "NdbTransaction_getNdb" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbOperation__SWIG_0" #.(swig-lispify "NdbTransaction_getNdbOperation/SWIG-0" 'function)) :pointer
  (self :pointer)
  (aTableName :string))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbOperation__SWIG_1" #.(swig-lispify "NdbTransaction_getNdbOperation/SWIG-1" 'function)) :pointer
  (self :pointer)
  (aTable :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbScanOperation__SWIG_0" #.(swig-lispify "NdbTransaction_getNdbScanOperation/SWIG-0" 'function)) :pointer
  (self :pointer)
  (aTableName :string))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbScanOperation__SWIG_1" #.(swig-lispify "NdbTransaction_getNdbScanOperation/SWIG-1" 'function)) :pointer
  (self :pointer)
  (aTable :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbIndexScanOperation__SWIG_0" #.(swig-lispify "NdbTransaction_getNdbIndexScanOperation/SWIG-0" 'function)) :pointer
  (self :pointer)
  (anIndexName :string)
  (aTableName :string))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbIndexScanOperation__SWIG_1" #.(swig-lispify "NdbTransaction_getNdbIndexScanOperation/SWIG-1" 'function)) :pointer
  (self :pointer)
  (anIndex :pointer)
  (aTable :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbIndexScanOperation__SWIG_2" #.(swig-lispify "NdbTransaction_getNdbIndexScanOperation/SWIG-2" 'function)) :pointer
  (self :pointer)
  (anIndex :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbIndexOperation__SWIG_0" #.(swig-lispify "NdbTransaction_getNdbIndexOperation/SWIG-0" 'function)) :pointer
  (self :pointer)
  (anIndexName :string)
  (aTableName :string))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbIndexOperation__SWIG_1" #.(swig-lispify "NdbTransaction_getNdbIndexOperation/SWIG-1" 'function)) :pointer
  (self :pointer)
  (anIndex :pointer)
  (aTable :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbIndexOperation__SWIG_2" #.(swig-lispify "NdbTransaction_getNdbIndexOperation/SWIG-2" 'function)) :pointer
  (self :pointer)
  (anIndex :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_setSchemaObjOwnerChecks" #.(swig-lispify "NdbTransaction_setSchemaObjOwnerChecks" 'function)) :void
  (self :pointer)
  (runChecks :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_execute__SWIG_0" #.(swig-lispify "NdbTransaction_execute/SWIG-0" 'function)) :int
  (self :pointer)
  (execType :pointer)
  (arg2 :pointer)
  (force :int))

(cffi:defcfun ("_wrap_NdbTransaction_execute__SWIG_1" #.(swig-lispify "NdbTransaction_execute/SWIG-1" 'function)) :int
  (self :pointer)
  (execType :pointer)
  (arg2 :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_execute__SWIG_2" #.(swig-lispify "NdbTransaction_execute/SWIG-2" 'function)) :int
  (self :pointer)
  (execType :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_execute__SWIG_3" #.(swig-lispify "NdbTransaction_execute/SWIG-3" 'function)) :int
  (self :pointer)
  (execType #.(swig-lispify "ExecType" 'enumname))
  (abortOption #.(swig-lispify "AbortOption" 'enumname))
  (force :int))

(cffi:defcfun ("_wrap_NdbTransaction_execute__SWIG_4" #.(swig-lispify "NdbTransaction_execute/SWIG-4" 'function)) :int
  (self :pointer)
  (execType #.(swig-lispify "ExecType" 'enumname))
  (abortOption #.(swig-lispify "AbortOption" 'enumname)))

(cffi:defcfun ("_wrap_NdbTransaction_execute__SWIG_5" #.(swig-lispify "NdbTransaction_execute/SWIG-5" 'function)) :int
  (self :pointer)
  (execType #.(swig-lispify "ExecType" 'enumname)))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynchPrepare__SWIG_0" #.(swig-lispify "NdbTransaction_executeAsynchPrepare/SWIG-0" 'function)) :void
  (self :pointer)
  (execType :pointer)
  (callback :pointer)
  (anyObject :pointer)
  (arg4 :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynchPrepare__SWIG_1" #.(swig-lispify "NdbTransaction_executeAsynchPrepare/SWIG-1" 'function)) :void
  (self :pointer)
  (execType :pointer)
  (callback :pointer)
  (anyObject :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynchPrepare__SWIG_2" #.(swig-lispify "NdbTransaction_executeAsynchPrepare/SWIG-2" 'function)) :void
  (self :pointer)
  (execType #.(swig-lispify "ExecType" 'enumname))
  (callback :pointer)
  (anyObject :pointer)
  (ao #.(swig-lispify "AbortOption" 'enumname)))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynchPrepare__SWIG_3" #.(swig-lispify "NdbTransaction_executeAsynchPrepare/SWIG-3" 'function)) :void
  (self :pointer)
  (execType #.(swig-lispify "ExecType" 'enumname))
  (callback :pointer)
  (anyObject :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynch__SWIG_0" #.(swig-lispify "NdbTransaction_executeAsynch/SWIG-0" 'function)) :void
  (self :pointer)
  (aTypeOfExec :pointer)
  (aCallback :pointer)
  (anyObject :pointer)
  (arg4 :pointer)
  (forceSend :int))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynch__SWIG_1" #.(swig-lispify "NdbTransaction_executeAsynch/SWIG-1" 'function)) :void
  (self :pointer)
  (aTypeOfExec :pointer)
  (aCallback :pointer)
  (anyObject :pointer)
  (arg4 :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynch__SWIG_2" #.(swig-lispify "NdbTransaction_executeAsynch/SWIG-2" 'function)) :void
  (self :pointer)
  (aTypeOfExec :pointer)
  (aCallback :pointer)
  (anyObject :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynch__SWIG_3" #.(swig-lispify "NdbTransaction_executeAsynch/SWIG-3" 'function)) :void
  (self :pointer)
  (aTypeOfExec #.(swig-lispify "ExecType" 'enumname))
  (aCallback :pointer)
  (anyObject :pointer)
  (abortOption #.(swig-lispify "AbortOption" 'enumname))
  (forceSend :int))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynch__SWIG_4" #.(swig-lispify "NdbTransaction_executeAsynch/SWIG-4" 'function)) :void
  (self :pointer)
  (aTypeOfExec #.(swig-lispify "ExecType" 'enumname))
  (aCallback :pointer)
  (anyObject :pointer)
  (abortOption #.(swig-lispify "AbortOption" 'enumname)))

(cffi:defcfun ("_wrap_NdbTransaction_executeAsynch__SWIG_5" #.(swig-lispify "NdbTransaction_executeAsynch/SWIG-5" 'function)) :void
  (self :pointer)
  (aTypeOfExec #.(swig-lispify "ExecType" 'enumname))
  (aCallback :pointer)
  (anyObject :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_refresh" #.(swig-lispify "NdbTransaction_refresh" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_close" #.(swig-lispify "NdbTransaction_close" 'function)) :void
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_restart" #.(swig-lispify "NdbTransaction_restart" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getGCI__SWIG_0" #.(swig-lispify "NdbTransaction_getGCI/SWIG-0" 'function)) :int
  (self :pointer)
  (gciptr :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getGCI__SWIG_1" #.(swig-lispify "NdbTransaction_getGCI/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getTransactionId" #.(swig-lispify "NdbTransaction_getTransactionId" 'function)) :unsigned-long-long
  (self :pointer))

(cffi:defcenum #.(swig-lispify "CommitStatusType" 'enumname)
	#.(swig-lispify "NotStarted" 'enumvalue :keyword)
	#.(swig-lispify "Started" 'enumvalue :keyword)
	#.(swig-lispify "Committed" 'enumvalue :keyword)
	#.(swig-lispify "Aborted" 'enumvalue :keyword)
	#.(swig-lispify "NeedAbort" 'enumvalue :keyword))

(cffi:defcfun ("_wrap_NdbTransaction_commitStatus" #.(swig-lispify "NdbTransaction_commitStatus" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbError" #.(swig-lispify "NdbTransaction_getNdbError" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbErrorOperation__SWIG_0" #.(swig-lispify "NdbTransaction_getNdbErrorOperation/SWIG-0" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbErrorOperation__SWIG_1" #.(swig-lispify "NdbTransaction_getNdbErrorOperation/SWIG-1" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNdbErrorLine" #.(swig-lispify "NdbTransaction_getNdbErrorLine" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getNextCompletedOperation" #.(swig-lispify "NdbTransaction_getNextCompletedOperation" 'function)) :pointer
  (self :pointer)
  (op :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getFirstDefinedOperation" #.(swig-lispify "NdbTransaction_getFirstDefinedOperation" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getLastDefinedOperation" #.(swig-lispify "NdbTransaction_getLastDefinedOperation" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_executePendingBlobOps__SWIG_0" #.(swig-lispify "NdbTransaction_executePendingBlobOps/SWIG-0" 'function)) :int
  (self :pointer)
  (flags :unsigned-char))

(cffi:defcfun ("_wrap_NdbTransaction_executePendingBlobOps__SWIG_1" #.(swig-lispify "NdbTransaction_executePendingBlobOps/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getConnectedNodeId" #.(swig-lispify "NdbTransaction_getConnectedNodeId" 'function)) :unsigned-int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_readTuple__SWIG_0" #.(swig-lispify "NdbTransaction_readTuple/SWIG-0" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string)
  (lock_mode :pointer)
  (result_mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_readTuple__SWIG_1" #.(swig-lispify "NdbTransaction_readTuple/SWIG-1" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string)
  (lock_mode :pointer)
  (result_mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_readTuple__SWIG_2" #.(swig-lispify "NdbTransaction_readTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string)
  (lock_mode :pointer)
  (result_mask :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_readTuple__SWIG_3" #.(swig-lispify "NdbTransaction_readTuple/SWIG-3" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string)
  (lock_mode :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_readTuple__SWIG_4" #.(swig-lispify "NdbTransaction_readTuple/SWIG-4" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string))

(cffi:defcfun ("_wrap_NdbTransaction_insertTuple__SWIG_0" #.(swig-lispify "NdbTransaction_insertTuple/SWIG-0" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_insertTuple__SWIG_1" #.(swig-lispify "NdbTransaction_insertTuple/SWIG-1" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_insertTuple__SWIG_2" #.(swig-lispify "NdbTransaction_insertTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_insertTuple__SWIG_3" #.(swig-lispify "NdbTransaction_insertTuple/SWIG-3" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string))

(cffi:defcfun ("_wrap_NdbTransaction_insertTuple__SWIG_4" #.(swig-lispify "NdbTransaction_insertTuple/SWIG-4" 'function)) :pointer
  (self :pointer)
  (combined_rec :pointer)
  (combined_row :string)
  (mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_insertTuple__SWIG_5" #.(swig-lispify "NdbTransaction_insertTuple/SWIG-5" 'function)) :pointer
  (self :pointer)
  (combined_rec :pointer)
  (combined_row :string)
  (mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_insertTuple__SWIG_6" #.(swig-lispify "NdbTransaction_insertTuple/SWIG-6" 'function)) :pointer
  (self :pointer)
  (combined_rec :pointer)
  (combined_row :string)
  (mask :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_insertTuple__SWIG_7" #.(swig-lispify "NdbTransaction_insertTuple/SWIG-7" 'function)) :pointer
  (self :pointer)
  (combined_rec :pointer)
  (combined_row :string))

(cffi:defcfun ("_wrap_NdbTransaction_updateTuple__SWIG_0" #.(swig-lispify "NdbTransaction_updateTuple/SWIG-0" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_updateTuple__SWIG_1" #.(swig-lispify "NdbTransaction_updateTuple/SWIG-1" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_updateTuple__SWIG_2" #.(swig-lispify "NdbTransaction_updateTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_updateTuple__SWIG_3" #.(swig-lispify "NdbTransaction_updateTuple/SWIG-3" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string))

(cffi:defcfun ("_wrap_NdbTransaction_writeTuple__SWIG_0" #.(swig-lispify "NdbTransaction_writeTuple/SWIG-0" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_writeTuple__SWIG_1" #.(swig-lispify "NdbTransaction_writeTuple/SWIG-1" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_writeTuple__SWIG_2" #.(swig-lispify "NdbTransaction_writeTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string)
  (mask :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_writeTuple__SWIG_3" #.(swig-lispify "NdbTransaction_writeTuple/SWIG-3" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (attr_rec :pointer)
  (attr_row :string))

(cffi:defcfun ("_wrap_NdbTransaction_deleteTuple__SWIG_0" #.(swig-lispify "NdbTransaction_deleteTuple/SWIG-0" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_deleteTuple__SWIG_1" #.(swig-lispify "NdbTransaction_deleteTuple/SWIG-1" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_deleteTuple__SWIG_2" #.(swig-lispify "NdbTransaction_deleteTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string)
  (result_mask :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_deleteTuple__SWIG_3" #.(swig-lispify "NdbTransaction_deleteTuple/SWIG-3" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer)
  (result_row :string))

(cffi:defcfun ("_wrap_NdbTransaction_deleteTuple__SWIG_4" #.(swig-lispify "NdbTransaction_deleteTuple/SWIG-4" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (result_rec :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_refreshTuple__SWIG_0" #.(swig-lispify "NdbTransaction_refreshTuple/SWIG-0" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (opts :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_refreshTuple__SWIG_1" #.(swig-lispify "NdbTransaction_refreshTuple/SWIG-1" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string)
  (opts :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_refreshTuple__SWIG_2" #.(swig-lispify "NdbTransaction_refreshTuple/SWIG-2" 'function)) :pointer
  (self :pointer)
  (key_rec :pointer)
  (key_row :string))

(cffi:defcfun ("_wrap_NdbTransaction_scanTable__SWIG_0" #.(swig-lispify "NdbTransaction_scanTable/SWIG-0" 'function)) :pointer
  (self :pointer)
  (result_record :pointer)
  (lock_mode :pointer)
  (result_mask :pointer)
  (options :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_scanTable__SWIG_1" #.(swig-lispify "NdbTransaction_scanTable/SWIG-1" 'function)) :pointer
  (self :pointer)
  (result_record :pointer)
  (lock_mode :pointer)
  (result_mask :pointer)
  (options :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_scanTable__SWIG_2" #.(swig-lispify "NdbTransaction_scanTable/SWIG-2" 'function)) :pointer
  (self :pointer)
  (result_record :pointer)
  (lock_mode :pointer)
  (result_mask :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_scanTable__SWIG_3" #.(swig-lispify "NdbTransaction_scanTable/SWIG-3" 'function)) :pointer
  (self :pointer)
  (result_record :pointer)
  (lock_mode :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_scanTable__SWIG_4" #.(swig-lispify "NdbTransaction_scanTable/SWIG-4" 'function)) :pointer
  (self :pointer)
  (result_record :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_scanIndex__SWIG_0" #.(swig-lispify "NdbTransaction_scanIndex/SWIG-0" 'function)) :pointer
  (self :pointer)
  (key_record :pointer)
  (result_record :pointer)
  (lock_mode :pointer)
  (result_mask :pointer)
  (bound :pointer)
  (options :pointer)
  (sizeOfOptions :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_scanIndex__SWIG_1" #.(swig-lispify "NdbTransaction_scanIndex/SWIG-1" 'function)) :pointer
  (self :pointer)
  (key_record :pointer)
  (result_record :pointer)
  (lock_mode :pointer)
  (result_mask :pointer)
  (bound :pointer)
  (options :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_scanIndex__SWIG_2" #.(swig-lispify "NdbTransaction_scanIndex/SWIG-2" 'function)) :pointer
  (self :pointer)
  (key_record :pointer)
  (result_record :pointer)
  (lock_mode :pointer)
  (result_mask :pointer)
  (bound :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_scanIndex__SWIG_3" #.(swig-lispify "NdbTransaction_scanIndex/SWIG-3" 'function)) :pointer
  (self :pointer)
  (key_record :pointer)
  (result_record :pointer)
  (lock_mode :pointer)
  (result_mask :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_scanIndex__SWIG_4" #.(swig-lispify "NdbTransaction_scanIndex/SWIG-4" 'function)) :pointer
  (self :pointer)
  (key_record :pointer)
  (result_record :pointer)
  (lock_mode :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_scanIndex__SWIG_5" #.(swig-lispify "NdbTransaction_scanIndex/SWIG-5" 'function)) :pointer
  (self :pointer)
  (key_record :pointer)
  (result_record :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_createQuery__SWIG_0" #.(swig-lispify "NdbTransaction_createQuery/SWIG-0" 'function)) :pointer
  (self :pointer)
  (query :pointer)
  (paramValue :pointer)
  (lock_mode :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_createQuery__SWIG_1" #.(swig-lispify "NdbTransaction_createQuery/SWIG-1" 'function)) :pointer
  (self :pointer)
  (query :pointer)
  (paramValue :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_createQuery__SWIG_2" #.(swig-lispify "NdbTransaction_createQuery/SWIG-2" 'function)) :pointer
  (self :pointer)
  (query :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_unlock__SWIG_0" #.(swig-lispify "NdbTransaction_unlock0/SWIG-0" 'function)) :pointer
  (self :pointer)
  (lockHandle :pointer)
  (ao :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_unlock__SWIG_1" #.(swig-lispify "NdbTransaction_unlock1/SWIG-1" 'function)) :pointer
  (self :pointer)
  (lockHandle :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_releaseLockHandle" #.(swig-lispify "NdbTransaction_releaseLockHandle" 'function)) :int
  (self :pointer)
  (lockHandle :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getMaxPendingBlobReadBytes" #.(swig-lispify "NdbTransaction_getMaxPendingBlobReadBytes" 'function)) :unsigned-int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_getMaxPendingBlobWriteBytes" #.(swig-lispify "NdbTransaction_getMaxPendingBlobWriteBytes" 'function)) :unsigned-int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbTransaction_setMaxPendingBlobReadBytes" #.(swig-lispify "NdbTransaction_setMaxPendingBlobReadBytes" 'function)) :void
  (self :pointer)
  (bytes :unsigned-int))

(cffi:defcfun ("_wrap_NdbTransaction_setMaxPendingBlobWriteBytes" #.(swig-lispify "NdbTransaction_setMaxPendingBlobWriteBytes" 'function)) :void
  (self :pointer)
  (bytes :unsigned-int))

(cffi:defcfun ("_wrap_NdbIndexOperation_insertTuple" #.(swig-lispify "NdbIndexOperation_insertTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_readTuple__SWIG_0" #.(swig-lispify "NdbIndexOperation_readTuple0/SWIG-0" 'function)) :int
  (self :pointer)
  (arg1 :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_readTuple__SWIG_1" #.(swig-lispify "NdbIndexOperation_readTuple/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_readTupleExclusive" #.(swig-lispify "NdbIndexOperation_readTupleExclusive" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_simpleRead" #.(swig-lispify "NdbIndexOperation_simpleRead" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_dirtyRead" #.(swig-lispify "NdbIndexOperation_dirtyRead" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_committedRead" #.(swig-lispify "NdbIndexOperation_committedRead" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_updateTuple" #.(swig-lispify "NdbIndexOperation_updateTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_deleteTuple" #.(swig-lispify "NdbIndexOperation_deleteTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_getIndex" #.(swig-lispify "NdbIndexOperation_getIndex" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_dirtyUpdate" #.(swig-lispify "NdbIndexOperation_dirtyUpdate" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_interpretedUpdateTuple" #.(swig-lispify "NdbIndexOperation_interpretedUpdateTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbIndexOperation_interpretedDeleteTuple" #.(swig-lispify "NdbIndexOperation_interpretedDeleteTuple" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_new_NdbIndexStat" #.(swig-lispify "new_NdbIndexStat" 'function)) (ndb-index-stat-type :garbage-collect t))

(cffi:defcfun ("_wrap_delete_NdbIndexStat" #.(swig-lispify "delete_NdbIndexStat" 'function)) :void
  (self ndb-index-stat-type))

(cffi:defcfun ("_wrap_NdbIndexStat_getNdbError" #.(swig-lispify "NdbIndexStat_getNdbError" 'function)) :pointer
  (self ndb-index-stat-type))

(cffi:defcfun ("_wrap_NdbIndexStat_records_in_range" #.(swig-lispify "NdbIndexStat_records_in_range" 'function)) :int
  (self ndb-index-stat-type)
  (index :pointer)
  (trans :pointer)
  (key_record :pointer)
  (result_record :pointer)
  (ib :pointer)
  (table_rows :unsigned-long-long)
  (count :pointer)
  (flags :int))

(defanonenum 
	(#.(swig-lispify "InvalidKeySize" 'enumvalue) #.911)
	(#.(swig-lispify "NoSysTables" 'enumvalue) #.4714)
	(#.(swig-lispify "NoIndexStats" 'enumvalue) #.4715)
	(#.(swig-lispify "UsageError" 'enumvalue) #.4716)
	(#.(swig-lispify "NoMemError" 'enumvalue) #.4717)
	(#.(swig-lispify "InvalidCache" 'enumvalue) #.4718)
	(#.(swig-lispify "InternalError" 'enumvalue) #.4719)
	(#.(swig-lispify "BadSysTables" 'enumvalue) #.4720)
	(#.(swig-lispify "HaveSysTables" 'enumvalue) #.4244)
	(#.(swig-lispify "NoSysEvents" 'enumvalue) #.4710)
	(#.(swig-lispify "BadSysEvents" 'enumvalue) #.4720) ;; BadSysTables
	(#.(swig-lispify "HaveSysEvents" 'enumvalue) #.746)
	(#.(swig-lispify "MyNotAllow" 'enumvalue) #.4721)
	(#.(swig-lispify "MyNotFound" 'enumvalue) #.4722)
	(#.(swig-lispify "MyHasError" 'enumvalue) #.4723)
	(#.(swig-lispify "MyAbortReq" 'enumvalue) #.4724)
	(#.(swig-lispify "AlienUpdate" 'enumvalue) #.4725))

(cffi:defcfun ("_wrap_NdbIndexStat_create_systables" #.(swig-lispify "NdbIndexStat_create_systables" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_drop_systables" #.(swig-lispify "NdbIndexStat_drop_systables" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_check_systables" #.(swig-lispify "NdbIndexStat_check_systables" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_set_index" #.(swig-lispify "NdbIndexStat_set_index" 'function)) :int
  (self ndb-index-stat-type)
  (index :pointer)
  (table :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_reset_index" #.(swig-lispify "NdbIndexStat_reset_index" 'function)) :void
  (self ndb-index-stat-type))

(cffi:defcfun ("_wrap_NdbIndexStat_update_stat" #.(swig-lispify "NdbIndexStat_update_stat" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_delete_stat" #.(swig-lispify "NdbIndexStat_delete_stat" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcenum #.(swig-lispify "CacheType" 'enumname)
	(#.(swig-lispify "CacheBuild" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "CacheQuery" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "CacheClean" 'enumvalue :keyword) #.3))

(cffi:defcfun ("_wrap_NdbIndexStat_move_cache" #.(swig-lispify "NdbIndexStat_move_cache" 'function)) :void
  (self ndb-index-stat-type))

(cffi:defcfun ("_wrap_NdbIndexStat_clean_cache" #.(swig-lispify "NdbIndexStat_clean_cache" 'function)) :void
  (self ndb-index-stat-type))

(cffi:defcfun ("_wrap_NdbIndexStat_get_cache_info" #.(swig-lispify "NdbIndexStat_get_cache_info" 'function)) :void
  (self ndb-index-stat-type)
  (info :pointer)
  (type :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_get_head" #.(swig-lispify "NdbIndexStat_get_head" 'function)) :void
  (self ndb-index-stat-type)
  (head :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_read_head" #.(swig-lispify "NdbIndexStat_read_head" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_read_stat" #.(swig-lispify "NdbIndexStat_read_stat" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(defanonenum 
	(#.(swig-lispify "BoundBufferBytes" 'enumvalue) #.8192))

(cffi:defcfun ("_wrap_NdbIndexStat_add_bound" #.(swig-lispify "NdbIndexStat_add_bound" 'function)) :int
  (self ndb-index-stat-type)
  (bound :pointer)
  (value :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_add_bound_null" #.(swig-lispify "NdbIndexStat_add_bound_null" 'function)) :int
  (self ndb-index-stat-type)
  (bound :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_set_bound_strict" #.(swig-lispify "NdbIndexStat_set_bound_strict" 'function)) :void
  (self ndb-index-stat-type)
  (bound :pointer)
  (strict :int))

(cffi:defcfun ("_wrap_NdbIndexStat_reset_bound" #.(swig-lispify "NdbIndexStat_reset_bound" 'function)) :void
  (self ndb-index-stat-type)
  (bound :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_finalize_range" #.(swig-lispify "NdbIndexStat_finalize_range" 'function)) :int
  (self ndb-index-stat-type)
  (range :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_reset_range" #.(swig-lispify "NdbIndexStat_reset_range" 'function)) :void
  (self ndb-index-stat-type)
  (range :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_convert_range" #.(swig-lispify "NdbIndexStat_convert_range" 'function)) :int
  (self ndb-index-stat-type)
  (range :pointer)
  (key_record :pointer)
  (ib :pointer))

(defanonenum 
	(#.(swig-lispify "StatBufferBytes" 'enumvalue) #.2048))

(cffi:defcfun ("_wrap_NdbIndexStat_query_stat" #.(swig-lispify "NdbIndexStat_query_stat" 'function)) :int
  (self ndb-index-stat-type)
  (range :pointer)
  (stat :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_get_empty" #.(swig-lispify "NdbIndexStat_get_empty" 'function)) :void
  (stat ndb-index-stat-type)
  (empty :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_get_rir" #.(swig-lispify "NdbIndexStat_get_rir" 'function)) :void
  (stat ndb-index-stat-type)
  (rir :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_get_rpk" #.(swig-lispify "NdbIndexStat_get_rpk" 'function)) :void
  (stat ndb-index-stat-type)
  (k :unsigned-int)
  (rpk :pointer))

(defanonenum 
	(#.(swig-lispify "RuleBufferBytes" 'enumvalue) #.80))

(cffi:defcfun ("_wrap_NdbIndexStat_get_rule" #.(swig-lispify "NdbIndexStat_get_rule" 'function)) :void
  (stat ndb-index-stat-type)
  (buffer :string))

(cffi:defcfun ("_wrap_NdbIndexStat_create_sysevents" #.(swig-lispify "NdbIndexStat_create_sysevents" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_drop_sysevents" #.(swig-lispify "NdbIndexStat_drop_sysevents" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_check_sysevents" #.(swig-lispify "NdbIndexStat_check_sysevents" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_create_listener" #.(swig-lispify "NdbIndexStat_create_listener" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_has_listener" #.(swig-lispify "NdbIndexStat_has_listener" 'function)) :pointer
  (self ndb-index-stat-type))

(cffi:defcfun ("_wrap_NdbIndexStat_execute_listener" #.(swig-lispify "NdbIndexStat_execute_listener" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_poll_listener" #.(swig-lispify "NdbIndexStat_poll_listener" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer)
  (max_wait_ms :int))

(cffi:defcfun ("_wrap_NdbIndexStat_next_listener" #.(swig-lispify "NdbIndexStat_next_listener" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_drop_listener" #.(swig-lispify "NdbIndexStat_drop_listener" 'function)) :int
  (self ndb-index-stat-type)
  (ndb :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_set_mem_handler" #.(swig-lispify "NdbIndexStat_set_mem_handler" 'function)) :void
  (self ndb-index-stat-type)
  (mem :pointer))

(cffi:defcfun ("_wrap_NdbIndexStat_getImpl" #.(swig-lispify "NdbIndexStat_getImpl" 'function)) :pointer
  (self ndb-index-stat-type))

(cffi:defcstruct #.(swig-lispify "Error" 'classname)
	(#.(swig-lispify "line" 'slotname :keyword) :int)
	(#.(swig-lispify "extra" 'slotname :keyword) :int))

(cffi:defcstruct #.(swig-lispify "CacheInfo" 'classname)
	(#.(swig-lispify "m_count" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_valid" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_sampleCount" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_totalBytes" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_save_time" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "m_sort_time" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "m_ref_count" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "Head" 'classname)
	(#.(swig-lispify "m_found" 'slotname :keyword) :int)
	(#.(swig-lispify "m_eventType" 'slotname :keyword) :int)
	(#.(swig-lispify "m_indexId" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_indexVersion" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_tableId" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_fragCount" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_valueFormat" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_sampleVersion" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_loadTime" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_sampleCount" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "m_keyBytes" 'slotname :keyword) :unsigned-int))

(cffi:defcstruct #.(swig-lispify "Bound" 'classname)
	(#.(swig-lispify "m_impl" 'slotname :keyword) :pointer))

(cffi:defcstruct #.(swig-lispify "Range" 'classname)
	(#.(swig-lispify "m_bound1" 'slotname :keyword) :pointer)
	(#.(swig-lispify "m_bound2" 'slotname :keyword) :pointer))

(cffi:defcstruct #.(swig-lispify "Stat" 'classname)
	(#.(swig-lispify "m_impl" 'slotname :keyword) :pointer))

(cffi:defcstruct #.(swig-lispify "Mem" 'classname)
	(#.(swig-lispify "mem_alloc" 'slotname :keyword) :pointer)
	(#.(swig-lispify "mem_free" 'slotname :keyword) :pointer))

(cffi:defcfun ("_wrap_new_NdbInterpretedCode__SWIG_0" #.(swig-lispify "new_NdbInterpretedCode/SWIG-0" 'function)) (ndb-interpreted-code-type :garbage-collect t)
  (table :pointer)
  (buffer :pointer)
  (buffer_word_size :unsigned-int))

(cffi:defcfun ("_wrap_new_NdbInterpretedCode__SWIG_1" #.(swig-lispify "new_NdbInterpretedCode/SWIG-1" 'function)) (ndb-interpreted-code-type :garbage-collect t)
  (table :pointer)
  (buffer :pointer))

(cffi:defcfun ("_wrap_new_NdbInterpretedCode__SWIG_2" #.(swig-lispify "new_NdbInterpretedCode/SWIG-2" 'function)) (ndb-interpreted-code-type :garbage-collect t)
  (table :pointer))

(cffi:defcfun ("_wrap_new_NdbInterpretedCode__SWIG_3" #.(swig-lispify "new_NdbInterpretedCode/SWIG-3" 'function)) (ndb-interpreted-code-type :garbage-collect t))

(cffi:defcfun ("_wrap_new_NdbInterpretedCode__SWIG_4" #.(swig-lispify "new_NdbInterpretedCode/SWIG-4" 'function)) (ndb-interpreted-code-type :garbage-collect t)
  (arg0 :pointer)
  (buffer :pointer)
  (buffer_word_size :unsigned-int))

(cffi:defcfun ("_wrap_new_NdbInterpretedCode__SWIG_5" #.(swig-lispify "new_NdbInterpretedCode/SWIG-5" 'function)) (ndb-interpreted-code-type :garbage-collect t)
  (arg0 :pointer)
  (buffer :pointer))

(cffi:defcfun ("_wrap_new_NdbInterpretedCode__SWIG_6" #.(swig-lispify "new_NdbInterpretedCode/SWIG-6" 'function)) (ndb-interpreted-code-type :garbage-collect t)
  (arg0 :pointer))

(cffi:defcfun ("_wrap_delete_NdbInterpretedCode" #.(swig-lispify "delete_NdbInterpretedCode" 'function)) :void
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_reset" #.(swig-lispify "NdbInterpretedCode_reset" 'function)) :void
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_load_const_null" #.(swig-lispify "NdbInterpretedCode_load_const_null" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegDest :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_load_const_u16" #.(swig-lispify "NdbInterpretedCode_load_const_u16" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegDest :unsigned-int)
  (Constant :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_load_const_u32" #.(swig-lispify "NdbInterpretedCode_load_const_u32" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegDest :unsigned-int)
  (Constant :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_load_const_u64" #.(swig-lispify "NdbInterpretedCode_load_const_u64" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegDest :unsigned-int)
  (Constant :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbInterpretedCode_read_attr__SWIG_0" #.(swig-lispify "NdbInterpretedCode_read_attr/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegDest :unsigned-int)
  (attrId :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_read_attr__SWIG_1" #.(swig-lispify "NdbInterpretedCode_read_attr/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegDest :unsigned-int)
  (column :pointer))

(cffi:defcfun ("_wrap_NdbInterpretedCode_write_attr__SWIG_0" #.(swig-lispify "NdbInterpretedCode_write_attr/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId :unsigned-int)
  (RegSource :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_write_attr__SWIG_1" #.(swig-lispify "NdbInterpretedCode_write_attr/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (column :pointer)
  (RegSource :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_add_reg" #.(swig-lispify "NdbInterpretedCode_add_reg" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegDest :unsigned-int)
  (RegSource1 :unsigned-int)
  (RegSource2 :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_sub_reg" #.(swig-lispify "NdbInterpretedCode_sub_reg" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegDest :unsigned-int)
  (RegSource1 :unsigned-int)
  (RegSource2 :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_def_label" #.(swig-lispify "NdbInterpretedCode_def_label" 'function)) :int
  (self ndb-interpreted-code-type)
  (LabelNum :int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_label" #.(swig-lispify "NdbInterpretedCode_branch_label" 'function)) :int
  (self ndb-interpreted-code-type)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_ge" #.(swig-lispify "NdbInterpretedCode_branch_ge" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_gt" #.(swig-lispify "NdbInterpretedCode_branch_gt" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_le" #.(swig-lispify "NdbInterpretedCode_branch_le" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_lt" #.(swig-lispify "NdbInterpretedCode_branch_lt" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_eq" #.(swig-lispify "NdbInterpretedCode_branch_eq" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_ne" #.(swig-lispify "NdbInterpretedCode_branch_ne" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegLvalue :unsigned-int)
  (RegRvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_ne_null" #.(swig-lispify "NdbInterpretedCode_branch_ne_null" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegLvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_eq_null" #.(swig-lispify "NdbInterpretedCode_branch_eq_null" 'function)) :int
  (self ndb-interpreted-code-type)
  (RegLvalue :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_eq__SWIG_0" #.(swig-lispify "NdbInterpretedCode_branch_col_eq/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (val :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_ne__SWIG_0" #.(swig-lispify "NdbInterpretedCode_branch_col_ne/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (val :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_lt__SWIG_0" #.(swig-lispify "NdbInterpretedCode_branch_col_lt/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (val :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_le__SWIG_0" #.(swig-lispify "NdbInterpretedCode_branch_col_le/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (val :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_gt__SWIG_0" #.(swig-lispify "NdbInterpretedCode_branch_col_gt/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (val :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_ge__SWIG_0" #.(swig-lispify "NdbInterpretedCode_branch_col_ge/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (val :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_eq__SWIG_1" #.(swig-lispify "NdbInterpretedCode_branch_col_eq/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId1 :unsigned-int)
  (attrId2 :unsigned-int)
  (label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_ne__SWIG_1" #.(swig-lispify "NdbInterpretedCode_branch_col_ne/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId1 :unsigned-int)
  (attrId2 :unsigned-int)
  (label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_lt__SWIG_1" #.(swig-lispify "NdbInterpretedCode_branch_col_lt/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId1 :unsigned-int)
  (attrId2 :unsigned-int)
  (label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_le__SWIG_1" #.(swig-lispify "NdbInterpretedCode_branch_col_le/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId1 :unsigned-int)
  (attrId2 :unsigned-int)
  (label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_gt__SWIG_1" #.(swig-lispify "NdbInterpretedCode_branch_col_gt/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId1 :unsigned-int)
  (attrId2 :unsigned-int)
  (label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_ge__SWIG_1" #.(swig-lispify "NdbInterpretedCode_branch_col_ge/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId1 :unsigned-int)
  (attrId2 :unsigned-int)
  (label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_eq_null" #.(swig-lispify "NdbInterpretedCode_branch_col_eq_null" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_ne_null" #.(swig-lispify "NdbInterpretedCode_branch_col_ne_null" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_like" #.(swig-lispify "NdbInterpretedCode_branch_col_like" 'function)) :int
  (self ndb-interpreted-code-type)
  (val :pointer)
  (len :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_notlike" #.(swig-lispify "NdbInterpretedCode_branch_col_notlike" 'function)) :int
  (self ndb-interpreted-code-type)
  (val :pointer)
  (len :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_and_mask_eq_mask" #.(swig-lispify "NdbInterpretedCode_branch_col_and_mask_eq_mask" 'function)) :int
  (self ndb-interpreted-code-type)
  (mask :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_and_mask_ne_mask" #.(swig-lispify "NdbInterpretedCode_branch_col_and_mask_ne_mask" 'function)) :int
  (self ndb-interpreted-code-type)
  (mask :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_and_mask_eq_zero" #.(swig-lispify "NdbInterpretedCode_branch_col_and_mask_eq_zero" 'function)) :int
  (self ndb-interpreted-code-type)
  (mask :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_branch_col_and_mask_ne_zero" #.(swig-lispify "NdbInterpretedCode_branch_col_and_mask_ne_zero" 'function)) :int
  (self ndb-interpreted-code-type)
  (mask :pointer)
  (unused :unsigned-int)
  (attrId :unsigned-int)
  (Label :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_interpret_exit_ok" #.(swig-lispify "NdbInterpretedCode_interpret_exit_ok" 'function)) :int
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_interpret_exit_nok__SWIG_0" #.(swig-lispify "NdbInterpretedCode_interpret_exit_nok/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (ErrorCode :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_interpret_exit_nok__SWIG_1" #.(swig-lispify "NdbInterpretedCode_interpret_exit_nok/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_interpret_exit_last_row" #.(swig-lispify "NdbInterpretedCode_interpret_exit_last_row" 'function)) :int
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_add_val__SWIG_0" #.(swig-lispify "NdbInterpretedCode_add_val/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId :unsigned-int)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_add_val__SWIG_1" #.(swig-lispify "NdbInterpretedCode_add_val/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId :unsigned-int)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbInterpretedCode_sub_val__SWIG_0" #.(swig-lispify "NdbInterpretedCode_sub_val/SWIG-0" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId :unsigned-int)
  (aValue :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_sub_val__SWIG_1" #.(swig-lispify "NdbInterpretedCode_sub_val/SWIG-1" 'function)) :int
  (self ndb-interpreted-code-type)
  (attrId :unsigned-int)
  (aValue :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbInterpretedCode_def_sub" #.(swig-lispify "NdbInterpretedCode_def_sub" 'function)) :int
  (self ndb-interpreted-code-type)
  (SubroutineNumber :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_call_sub" #.(swig-lispify "NdbInterpretedCode_call_sub" 'function)) :int
  (self ndb-interpreted-code-type)
  (SubroutineNumber :unsigned-int))

(cffi:defcfun ("_wrap_NdbInterpretedCode_ret_sub" #.(swig-lispify "NdbInterpretedCode_ret_sub" 'function)) :int
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_finalise" #.(swig-lispify "NdbInterpretedCode_finalise" 'function)) :int
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_getTable" #.(swig-lispify "NdbInterpretedCode_getTable" 'function)) :pointer
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_getNdbError" #.(swig-lispify "NdbInterpretedCode_getNdbError" 'function)) :pointer
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_getWordsUsed" #.(swig-lispify "NdbInterpretedCode_getWordsUsed" 'function)) :unsigned-int
  (self ndb-interpreted-code-type))

(cffi:defcfun ("_wrap_NdbInterpretedCode_copy" #.(swig-lispify "NdbInterpretedCode_copy" 'function)) :int
  (self ndb-interpreted-code-type)
  (src :pointer))

(cffi:defcfun ("_wrap_new_NdbScanFilter__SWIG_0" #.(swig-lispify "new_NdbScanFilter/SWIG-0" 'function)) (ndb-scan-filter-type :garbage-collect t)
  (code :pointer))

(cffi:defcfun ("_wrap_new_NdbScanFilter__SWIG_1" #.(swig-lispify "new_NdbScanFilter/SWIG-1" 'function)) (ndb-scan-filter-type :garbage-collect t)
  (op :pointer))

(cffi:defcfun ("_wrap_delete_NdbScanFilter" #.(swig-lispify "delete_NdbScanFilter" 'function)) :void
  (self ndb-scan-filter-type))

(cffi:defcenum #.(swig-lispify "Group" 'enumname)
	(#.(swig-lispify "AND" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "OR" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "NAND" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "NOR" 'enumvalue :keyword) #.4))

(cffi:defcenum #.(swig-lispify "BinaryCondition" 'enumname)
	(#.(swig-lispify "COND_LE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "COND_LT" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "COND_GE" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "COND_GT" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "COND_EQ" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "COND_NE" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "COND_LIKE" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "COND_NOT_LIKE" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "COND_AND_EQ_MASK" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "COND_AND_NE_MASK" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "COND_AND_EQ_ZERO" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "COND_AND_NE_ZERO" 'enumvalue :keyword) #.11))

(cffi:defcfun ("_wrap_NdbScanFilter_begin__SWIG_0" #.(swig-lispify "NdbScanFilter_begin/SWIG-0" 'function)) :int
  (self ndb-scan-filter-type)
  (group :pointer))

(cffi:defcfun ("_wrap_NdbScanFilter_begin__SWIG_1" #.(swig-lispify "NdbScanFilter_begin/SWIG-1" 'function)) :int
  (self ndb-scan-filter-type))

(cffi:defcfun ("_wrap_NdbScanFilter_end" #.(swig-lispify "NdbScanFilter_end" 'function)) :int
  (self ndb-scan-filter-type))

(cffi:defcfun ("_wrap_NdbScanFilter_reset" #.(swig-lispify "NdbScanFilter_reset" 'function)) :void
  (self ndb-scan-filter-type))

(cffi:defcfun ("_wrap_NdbScanFilter_istrue" #.(swig-lispify "NdbScanFilter_istrue" 'function)) :int
  (self ndb-scan-filter-type))

(cffi:defcfun ("_wrap_NdbScanFilter_isfalse" #.(swig-lispify "NdbScanFilter_isfalse" 'function)) :int
  (self ndb-scan-filter-type))

(cffi:defcfun ("_wrap_NdbScanFilter_cmp__SWIG_0" #.(swig-lispify "NdbScanFilter_cmp/SWIG-0" 'function)) :int
  (self ndb-scan-filter-type)
  (cond :pointer)
  (ColId :int)
  (val :pointer)
  (len :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanFilter_cmp__SWIG_1" #.(swig-lispify "NdbScanFilter_cmp/SWIG-1" 'function)) :int
  (self ndb-scan-filter-type)
  (cond :pointer)
  (ColId :int)
  (val :pointer))

(cffi:defcfun ("_wrap_NdbScanFilter_cmp__SWIG_2" #.(swig-lispify "NdbScanFilter_cmp/SWIG-2" 'function)) :int
  (self ndb-scan-filter-type)
  (cond :pointer)
  (ColId1 :int)
  (ColId2 :int))

(cffi:defcfun ("_wrap_NdbScanFilter_eq__SWIG_0" #.(swig-lispify "NdbScanFilter_eq/SWIG-0" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanFilter_ne__SWIG_0" #.(swig-lispify "NdbScanFilter_ne/SWIG-0" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanFilter_lt__SWIG_0" #.(swig-lispify "NdbScanFilter_lt/SWIG-0" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanFilter_le__SWIG_0" #.(swig-lispify "NdbScanFilter_le/SWIG-0" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanFilter_gt__SWIG_0" #.(swig-lispify "NdbScanFilter_gt/SWIG-0" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanFilter_ge__SWIG_0" #.(swig-lispify "NdbScanFilter_ge/SWIG-0" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-int))

(cffi:defcfun ("_wrap_NdbScanFilter_eq__SWIG_1" #.(swig-lispify "NdbScanFilter_eq/SWIG-1" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbScanFilter_ne__SWIG_1" #.(swig-lispify "NdbScanFilter_ne/SWIG-1" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbScanFilter_lt__SWIG_1" #.(swig-lispify "NdbScanFilter_lt/SWIG-1" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbScanFilter_le__SWIG_1" #.(swig-lispify "NdbScanFilter_le/SWIG-1" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbScanFilter_gt__SWIG_1" #.(swig-lispify "NdbScanFilter_gt/SWIG-1" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbScanFilter_ge__SWIG_1" #.(swig-lispify "NdbScanFilter_ge/SWIG-1" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int)
  (value :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbScanFilter_isnull" #.(swig-lispify "NdbScanFilter_isnull" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int))

(cffi:defcfun ("_wrap_NdbScanFilter_isnotnull" #.(swig-lispify "NdbScanFilter_isnotnull" 'function)) :int
  (self ndb-scan-filter-type)
  (ColId :int))

(cffi:defcenum #.(swig-lispify "Error" 'enumname)
	(#.(swig-lispify "FilterTooLarge" 'enumvalue :keyword) #.4294))

(cffi:defcfun ("_wrap_NdbScanFilter_getNdbError" #.(swig-lispify "NdbScanFilter_getNdbError" 'function)) :pointer
  (self ndb-scan-filter-type))

(cffi:defcfun ("_wrap_NdbScanFilter_getInterpretedCode" #.(swig-lispify "NdbScanFilter_getInterpretedCode" 'function)) :pointer
  (self ndb-scan-filter-type))

(cffi:defcfun ("_wrap_NdbScanFilter_getNdbOperation" #.(swig-lispify "NdbScanFilter_getNdbOperation" 'function)) :pointer
  (self ndb-scan-filter-type))

(cffi:defcfun ("_wrap_NdbRecAttr_getColumn" #.(swig-lispify "NdbRecAttr_getColumn" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_getType" #.(swig-lispify "NdbRecAttr_getType" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_get_size_in_bytes" #.(swig-lispify "NdbRecAttr_get_size_in_bytes" 'function)) :unsigned-int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_isNULL" #.(swig-lispify "NdbRecAttr_isNULL" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_int64_value" #.(swig-lispify "NdbRecAttr_int64_value" 'function)) :long-long
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_int32_value" #.(swig-lispify "NdbRecAttr_int32_value" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_medium_value" #.(swig-lispify "NdbRecAttr_medium_value" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_short_value" #.(swig-lispify "NdbRecAttr_short_value" 'function)) :short
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_char_value" #.(swig-lispify "NdbRecAttr_char_value" 'function)) :char
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_int8_value" #.(swig-lispify "NdbRecAttr_int8_value" 'function)) :char
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_u_64_value" #.(swig-lispify "NdbRecAttr_u_64_value" 'function)) :unsigned-long-long
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_u_32_value" #.(swig-lispify "NdbRecAttr_u_32_value" 'function)) :unsigned-int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_u_medium_value" #.(swig-lispify "NdbRecAttr_u_medium_value" 'function)) :unsigned-int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_u_short_value" #.(swig-lispify "NdbRecAttr_u_short_value" 'function)) :unsigned-short
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_u_char_value" #.(swig-lispify "NdbRecAttr_u_char_value" 'function)) :unsigned-char
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_u_8_value" #.(swig-lispify "NdbRecAttr_u_8_value" 'function)) :unsigned-char
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_float_value" #.(swig-lispify "NdbRecAttr_float_value" 'function)) :float
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_double_value" #.(swig-lispify "NdbRecAttr_double_value" 'function)) :double
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_aRef" #.(swig-lispify "NdbRecAttr_aRef" 'function)) :string
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_clone" #.(swig-lispify "NdbRecAttr_clone" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_delete_NdbRecAttr" #.(swig-lispify "delete_NdbRecAttr" 'function)) :void
  (self :pointer))

(cffi:defcfun ("_wrap_NdbRecAttr_next" #.(swig-lispify "NdbRecAttr_next" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_new_NdbRecordPrintFormat" #.(swig-lispify "new_NdbRecordPrintFormat" 'function)) (ndb-record-print-format-type :garbage-collect t))

(cffi:defcfun ("_wrap_delete_NdbRecordPrintFormat" #.(swig-lispify "delete_NdbRecordPrintFormat" 'function)) :void
  (self ndb-record-print-format-type))

(cffi:defcfun ("_wrap_ndbrecattr_print_formatted" #.(swig-lispify "ndbrecattr_print_formatted" 'function)) :pointer
  (out :pointer)
  (r :pointer)
  (f :pointer))

(cffi:defcenum #.(swig-lispify "State" 'enumname)
	#.(swig-lispify "EO_CREATED" 'enumvalue :keyword)
	#.(swig-lispify "EO_EXECUTING" 'enumvalue :keyword)
	#.(swig-lispify "EO_DROPPED" 'enumvalue :keyword)
	#.(swig-lispify "EO_ERROR" 'enumvalue :keyword))

(cffi:defcfun ("_wrap_NdbEventOperation_getState" #.(swig-lispify "NdbEventOperation_getState" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_mergeEvents" #.(swig-lispify "NdbEventOperation_mergeEvents" 'function)) :void
  (self :pointer)
  (flag :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_execute" #.(swig-lispify "NdbEventOperation_execute" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getValue__SWIG_0" #.(swig-lispify "NdbEventOperation_getValue/SWIG-0" 'function)) :pointer
  (self :pointer)
  (anAttrName :string)
  (aValue :string))

(cffi:defcfun ("_wrap_NdbEventOperation_getValue__SWIG_1" #.(swig-lispify "NdbEventOperation_getValue/SWIG-1" 'function)) :pointer
  (self :pointer)
  (anAttrName :string))

(cffi:defcfun ("_wrap_NdbEventOperation_getPreValue__SWIG_0" #.(swig-lispify "NdbEventOperation_getPreValue/SWIG-0" 'function)) :pointer
  (self :pointer)
  (anAttrName :string)
  (aValue :string))

(cffi:defcfun ("_wrap_NdbEventOperation_getPreValue__SWIG_1" #.(swig-lispify "NdbEventOperation_getPreValue/SWIG-1" 'function)) :pointer
  (self :pointer)
  (anAttrName :string))

(cffi:defcfun ("_wrap_NdbEventOperation_getBlobHandle" #.(swig-lispify "NdbEventOperation_getBlobHandle" 'function)) :pointer
  (self :pointer)
  (anAttrName :string))

(cffi:defcfun ("_wrap_NdbEventOperation_getPreBlobHandle" #.(swig-lispify "NdbEventOperation_getPreBlobHandle" 'function)) :pointer
  (self :pointer)
  (anAttrName :string))

(cffi:defcfun ("_wrap_NdbEventOperation_isOverrun" #.(swig-lispify "NdbEventOperation_isOverrun" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_isConsistent" #.(swig-lispify "NdbEventOperation_isConsistent" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getEventType2" #.(swig-lispify "NdbEventOperation_getEventType2" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getEventType" #.(swig-lispify "NdbEventOperation_getEventType" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_tableNameChanged" #.(swig-lispify "NdbEventOperation_tableNameChanged" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_tableFrmChanged" #.(swig-lispify "NdbEventOperation_tableFrmChanged" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_tableFragmentationChanged" #.(swig-lispify "NdbEventOperation_tableFragmentationChanged" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_tableRangeListChanged" #.(swig-lispify "NdbEventOperation_tableRangeListChanged" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getEpoch" #.(swig-lispify "NdbEventOperation_getEpoch" 'function)) :unsigned-long-long
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getGCI" #.(swig-lispify "NdbEventOperation_getGCI" 'function)) :unsigned-long-long
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getAnyValue" #.(swig-lispify "NdbEventOperation_getAnyValue" 'function)) :unsigned-int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getLatestGCI" #.(swig-lispify "NdbEventOperation_getLatestGCI" 'function)) :unsigned-long-long
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getTransId" #.(swig-lispify "NdbEventOperation_getTransId" 'function)) :unsigned-long-long
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getNdbError" #.(swig-lispify "NdbEventOperation_getNdbError" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_setAllowEmptyUpdate" #.(swig-lispify "NdbEventOperation_setAllowEmptyUpdate" 'function)) :void
  (self :pointer)
  (allow :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getAllowEmptyUpdate" #.(swig-lispify "NdbEventOperation_getAllowEmptyUpdate" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_isEmptyEpoch" #.(swig-lispify "NdbEventOperation_isEmptyEpoch" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_isErrorEpoch__SWIG_0" #.(swig-lispify "NdbEventOperation_isErrorEpoch/SWIG-0" 'function)) :pointer
  (self :pointer)
  (error_type :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_isErrorEpoch__SWIG_1" #.(swig-lispify "NdbEventOperation_isErrorEpoch/SWIG-1" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getTable" #.(swig-lispify "NdbEventOperation_getTable" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getEvent" #.(swig-lispify "NdbEventOperation_getEvent" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getFirstPkAttr" #.(swig-lispify "NdbEventOperation_getFirstPkAttr" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getFirstPkPreAttr" #.(swig-lispify "NdbEventOperation_getFirstPkPreAttr" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getFirstDataAttr" #.(swig-lispify "NdbEventOperation_getFirstDataAttr" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getFirstDataPreAttr" #.(swig-lispify "NdbEventOperation_getFirstDataPreAttr" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_setCustomData" #.(swig-lispify "NdbEventOperation_setCustomData" 'function)) :void
  (self :pointer)
  (data :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getCustomData" #.(swig-lispify "NdbEventOperation_getCustomData" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_clearError" #.(swig-lispify "NdbEventOperation_clearError" 'function)) :void
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_hasError" #.(swig-lispify "NdbEventOperation_hasError" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getReqNodeId" #.(swig-lispify "NdbEventOperation_getReqNodeId" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_getNdbdNodeId" #.(swig-lispify "NdbEventOperation_getNdbdNodeId" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbEventOperation_print" #.(swig-lispify "NdbEventOperation_print" 'function)) :void
  (self :pointer))

(cffi:defcfun ("_wrap_create_instance" #.(swig-lispify "create_instance" 'function)) :pointer
  (cc :pointer)
  (max_ndb_objects :unsigned-int)
  (no_conn_obj :unsigned-int)
  (init_no_ndb_objects :unsigned-int))

(cffi:defcfun ("_wrap_drop_instance" #.(swig-lispify "drop_instance" 'function)) :void)

(cffi:defcfun ("_wrap_get_ndb_object" #.(swig-lispify "get_ndb_object" 'function)) :pointer
  (hint_id :pointer)
  (a_catalog_name :string)
  (a_schema_name :string))

(cffi:defcfun ("_wrap_return_ndb_object" #.(swig-lispify "return_ndb_object" 'function)) :void
  (returned_object :pointer)
  (id :unsigned-int))

(cffi:defcenum #.(swig-lispify "State" 'enumname)
	(#.(swig-lispify "Idle" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "Prepared" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "Active" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "Closed" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "Invalid" 'enumvalue :keyword) #.9))

(cffi:defcfun ("_wrap_NdbBlob_getState" #.(swig-lispify "NdbBlob_getState" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbBlob_getVersion" #.(swig-lispify "NdbBlob_getVersion" 'function)) :void
  (self :pointer)
  (version :pointer))

(cffi:defcfun ("_wrap_NdbBlob_packBlobHead" #.(swig-lispify "NdbBlob_packBlobHead" 'function)) :void
  (head :pointer)
  (buf :string)
  (blobVersion :int))

(cffi:defcfun ("_wrap_NdbBlob_unpackBlobHead" #.(swig-lispify "NdbBlob_unpackBlobHead" 'function)) :void
  (head :pointer)
  (buf :string)
  (blobVersion :int))

(cffi:defcfun ("_wrap_NdbBlob_getValue" #.(swig-lispify "NdbBlob_getValue" 'function)) :int
  (self :pointer)
  (data :pointer)
  (bytes :unsigned-int))

(cffi:defcfun ("_wrap_NdbBlob_setValue" #.(swig-lispify "NdbBlob_setValue" 'function)) :int
  (self :pointer)
  (data :pointer)
  (bytes :unsigned-int))

(cffi:defcfun ("_wrap_NdbBlob_setActiveHook" #.(swig-lispify "NdbBlob_setActiveHook" 'function)) :int
  (self :pointer)
  (activeHook :pointer)
  (arg :pointer))

(cffi:defcfun ("_wrap_NdbBlob_getDefined" #.(swig-lispify "NdbBlob_getDefined" 'function)) :int
  (self :pointer)
  (isNull :pointer))

(cffi:defcfun ("_wrap_NdbBlob_getNull__SWIG_0" #.(swig-lispify "NdbBlob_getNull/SWIG-0" 'function)) :int
  (self :pointer)
  (isNull :pointer))

(cffi:defcfun ("_wrap_NdbBlob_getNull__SWIG_1" #.(swig-lispify "NdbBlob_getNull/SWIG-1" 'function)) :int
  (self :pointer)
  (isNull :pointer))

(cffi:defcfun ("_wrap_NdbBlob_setNull" #.(swig-lispify "NdbBlob_setNull" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbBlob_getLength" #.(swig-lispify "NdbBlob_getLength" 'function)) :int
  (self :pointer)
  (length :pointer))

(cffi:defcfun ("_wrap_NdbBlob_truncate__SWIG_0" #.(swig-lispify "NdbBlob_truncate/SWIG-0" 'function)) :int
  (self :pointer)
  (length :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbBlob_truncate__SWIG_1" #.(swig-lispify "NdbBlob_truncate/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_NdbBlob_getPos" #.(swig-lispify "NdbBlob_getPos" 'function)) :int
  (self :pointer)
  (pos :pointer))

(cffi:defcfun ("_wrap_NdbBlob_setPos" #.(swig-lispify "NdbBlob_setPos" 'function)) :int
  (self :pointer)
  (pos :unsigned-long-long))

(cffi:defcfun ("_wrap_NdbBlob_readData" #.(swig-lispify "NdbBlob_readData" 'function)) :int
  (self :pointer)
  (data :pointer)
  (bytes :pointer))

(cffi:defcfun ("_wrap_NdbBlob_writeData" #.(swig-lispify "NdbBlob_writeData" 'function)) :int
  (self :pointer)
  (data :pointer)
  (bytes :unsigned-int))

(cffi:defcfun ("_wrap_NdbBlob_getColumn" #.(swig-lispify "NdbBlob_getColumn" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbBlob_getBlobTableName" #.(swig-lispify "NdbBlob_getBlobTableName" 'function)) :int
  (btname :string)
  (anNdb :pointer)
  (tableName :string)
  (columnName :string))

(cffi:defcfun ("_wrap_NdbBlob_getBlobEventName" #.(swig-lispify "NdbBlob_getBlobEventName" 'function)) :int
  (bename :string)
  (anNdb :pointer)
  (eventName :string)
  (columnName :string))

(cffi:defcfun ("_wrap_NdbBlob_getNdbError" #.(swig-lispify "NdbBlob_getNdbError" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbBlob_getNdbOperation" #.(swig-lispify "NdbBlob_getNdbOperation" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbBlob_blobsFirstBlob" #.(swig-lispify "NdbBlob_blobsFirstBlob" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbBlob_blobsNextBlob" #.(swig-lispify "NdbBlob_blobsNextBlob" 'function)) :pointer
  (self :pointer))

(cffi:defcfun ("_wrap_NdbBlob_close__SWIG_0" #.(swig-lispify "NdbBlob_close/SWIG-0" 'function)) :int
  (self :pointer)
  (execPendingBlobOps :pointer))

(cffi:defcfun ("_wrap_NdbBlob_close__SWIG_1" #.(swig-lispify "NdbBlob_close/SWIG-1" 'function)) :int
  (self :pointer))

(cffi:defcfun ("_wrap_delete_NdbBlob" #.(swig-lispify "delete_NdbBlob" 'function)) :void
  (self :pointer))

(cffi:defcstruct #.(swig-lispify "Head" 'classname)
	(#.(swig-lispify "varsize" 'slotname :keyword) :unsigned-short)
	(#.(swig-lispify "reserved" 'slotname :keyword) :unsigned-short)
	(#.(swig-lispify "pkid" 'slotname :keyword) :unsigned-int)
	(#.(swig-lispify "length" 'slotname :keyword) :unsigned-long-long)
	(#.(swig-lispify "headsize" 'slotname :keyword) :unsigned-int))
